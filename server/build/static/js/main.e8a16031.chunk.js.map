{"version":3,"sources":["utilities/constants.js","Redux/actions/socketActions.js","Redux/reducers/userReducer.js","utilities/eventHandler.js","Redux/actions/userActions.js","Redux/actions/gameActions.js","Redux/middleware/middleware.js","Redux/reducers/gameReducers.js","Redux/store.js","components/Player.js","components/LeaderBoard.js","components/canvas.js","components/Chat/Chat.js","components/modal.js","Pages/GamePage/GamePage.js","Pages/LandingPage/LandingPage.js","Playground.js","index.js"],"names":["module","exports","JOIN_GAME","CREATE_GAME","DRAW","GUESS","WORD_SELECT","CONNECT","SOCKET","GAME_ID","CLIENT_ID","NAME","WS_CONNECT","WS_DISCONNECT","WS_SEND_MESSAGE","UPDATE_PLAYER_LIST","REMOVE_PLAYER","MUTE","UNMUTE","SET_LOCAL_STREAM","SET_REMOTE_STREAM","SET_REMOTE_CORDS","START_GAME","UPDATE_POINTS","wsConnect","host","type","wsDisconnect","wsSendMessage","payload","console","log","initalState","gameId","name","clientId","chatEvent","isCreator","localStream","storeClientId","storeGameId","storeName","removePlayer","id","remoteCords","data","cords","connections","remoteStreams","mediaConstraints","audio","video","iceServers","urls","addLocalTracks","rtcPeerConnection","getTracks","forEach","track","addTrack","eventHandler","event","dispatch","state","a","JSON","parse","method","events","joinPayload","user","navigator","mediaDevices","getUserMedia","stream","sessionStorage","setItem","otherUser","words","hint","points","image","canvasEvent","prevClients","clients","undefined","Promise","r","setTimeout","player","RTCPeerConnection","ontrack","senderId","audioElement","document","createElement","autoplay","srcObject","streams","setAttribute","getElementById","appendChild","onicecandidate","candidate","iceCandidatePayload","label","sdpMLineIndex","createOffer","sessionDescription","setLocalDescription","webRTCOfferPayload","sdp","updatePlayers","playerlist","setRemoteDescription","RTCSessionDescription","createAnswer","webRTCAnswerPayload","RTCIceCandidate","addIceCandidate","require","socketMiddleware","socket","store","next","action","close","WebSocket","onmessage","getState","onMessage","onclose","onopen","send","stringify","intialState","players","receivedDrawEvent","choice","selector","rootReducer","combineReducers","ws","canvasImage","game","map","filter","modifiedPlayers","remoteStream","middleware","reduxThunk","createStore","compose","applyMiddleware","Player","props","useState","mute","setmute","useSelector","inverse","audioEvents","childNodes","getAudioTracks","enabled","child","getAttribute","className","style","color","onClick","LeaderBoard","x1","y1","x2","y2","useDispatch","listItems","Canvas","canDraw","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","useEffect","canvas","current","width","parseInt","getComputedStyle","querySelector","getPropertyValue","height","window","innerHeight","context","getContext","lineCap","strokeStyle","lineWidth","oldx","oldy","newx","newy","drawLine","beginPath","moveTo","lineTo","stroke","closePath","Image","src","drawImage","getMousePosition","e","x","offsetX","clientWidth","y","offsetY","clientHeight","onMouseDown","nativeEvent","onMouseUp","clearInterval","interval","onMouseMove","ref","disabled","Chat","mic","flipMic","addChatMessage","sendMessage","message","getElementsByClassName","value","trim","messageDiv","createMessage","innerHTML","containerElement","scrollTop","scrollHeight","isMine","str","liClassName","nameElement","guessWord","handleMicFlip","micElement","placeholder","onKeyPress","key","target","Modal","handleClose","show","children","showHideClassName","GamePage","select","execCommand","LandingPage","React","join","setJoin","history","useHistory","joinButtonHandler","isClientCreated","isGameCreated","headers","axios","get","resp","alert","push","defaultValue","readOnly","post","then","response","catch","error","path","Playground","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.e8a16031.chunk.js","sourcesContent":["module.exports = {\r\n    JOIN_GAME: 'join',\r\n    CREATE_GAME: 'create',\r\n    DRAW: 'draw',\r\n    GUESS: 'guess',\r\n    WORD_SELECT: 'wordselect',\r\n    CONNECT: 'connect',\r\n    SOCKET: 'socket',\r\n    GAME_ID: 'gameId',\r\n    CLIENT_ID: 'clientId',\r\n    NAME: 'name',\r\n    WS_CONNECT: 'ws_connect',\r\n    WS_DISCONNECT: 'ws_disconnect',\r\n    WS_SEND_MESSAGE: 'ws_message',\r\n    UPDATE_PLAYER_LIST: 'update_player_list',\r\n    REMOVE_PLAYER: 'remove_player',\r\n    MUTE: 'mute',\r\n    UNMUTE: 'unmute',\r\n    SET_LOCAL_STREAM: 'localstream',\r\n    SET_REMOTE_STREAM: 'remotestream',\r\n    SET_REMOTE_CORDS: 'cords',\r\n    START_GAME: 'start_game',\r\n    UPDATE_POINTS: 'update_points'\r\n}","import { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } from \"../../utilities/constants\"\r\n\r\n\r\nexport const wsConnect = (host) => {\r\n    return {\r\n        type: WS_CONNECT,\r\n        host: host\r\n    }\r\n}\r\n\r\nexport const wsDisconnect = (host) => {\r\n    return {\r\n        type: WS_DISCONNECT,\r\n        host: host\r\n    }\r\n}\r\n\r\nexport const wsSendMessage = (payload) => {\r\n    console.log('dispatching sendmessage')\r\n    return {\r\n        type: WS_SEND_MESSAGE,\r\n        payload: payload\r\n    }\r\n}\r\n","import { CLIENT_ID, GAME_ID, NAME, SOCKET, GUESS, DRAW } from \"../../utilities/constants\";\r\n\r\nconst initalState = {\r\n    gameId: null,\r\n    name: '',\r\n    clientId: '',\r\n    chatEvent: null,\r\n    isCreator: false\r\n}\r\n\r\nexport default function userReducer(state = initalState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case SOCKET:\r\n            return {\r\n                ...state,\r\n                ws: action.payload['ws']\r\n            }\r\n\r\n        case GAME_ID:\r\n            return {\r\n                ...state,\r\n                gameId: action.payload['gameId']\r\n            }\r\n\r\n        case CLIENT_ID:\r\n            return {\r\n                ...state,\r\n                clientId: action.payload['clientId']\r\n            }\r\n\r\n        case NAME:\r\n            return {\r\n                ...state,\r\n                name: action.payload['name']\r\n            }\r\n\r\n        case GUESS:\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                chatEvent: action.payload['chatEvent']\r\n            }\r\n\r\n        case 'set_create':\r\n            return {\r\n                ...state,\r\n                isCreator: true\r\n            }\r\n\r\n        case DRAW:\r\n            console.log('in DRAW reducer')\r\n            return {\r\n                ...state,\r\n                canvasImage: action.payload['canvasImage']\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { storeClientId, storeGameId } from '../Redux/actions/userActions';\r\nimport { remoteCords, removePlayer, signalChatEvent, updatePoints, updatePlayerList, draw, setChoice, setSelector, setWordHint, endGame, setLocalStream } from '../Redux/actions/gameActions';\r\nimport { wsSendMessage } from '../Redux/actions/socketActions';\r\nimport events from './constants';\r\n\r\nlet localStream;\r\nlet connections = {};\r\nlet remoteStreams = {};\r\n\r\nconst mediaConstraints = {\r\n    audio: true,\r\n    video: false\r\n}\r\n\r\nconst iceServers = {\r\n    iceServers: [\r\n        { urls: 'stun:stun.l.google.com:19302' },\r\n        { urls: 'stun:stun1.l.google.com:19302' },\r\n        { urls: 'stun:stun2.l.google.com:19302' },\r\n        { urls: 'stun:stun3.l.google.com:19302' },\r\n        { urls: 'stun:stun4.l.google.com:19302' },\r\n    ],\r\n}\r\n\r\nfunction addLocalTracks(rtcPeerConnection) {\r\n    console.log('addLocalTracks:')\r\n    console.log(localStream)\r\n    localStream.getTracks().forEach((track) => {\r\n        rtcPeerConnection.addTrack(track, localStream)\r\n    })\r\n}\r\n\r\nconst eventHandler = async (event, dispatch, state) => {\r\n\r\n    console.log('event received:')\r\n    if (event && event.data) {\r\n        let data = JSON.parse(event.data)\r\n\r\n        console.log(data)\r\n        if (data && data.method) {\r\n            console.log('In event, handler event type:' + data.method)\r\n\r\n            switch (data.method) {\r\n\r\n                case events.CONNECT:\r\n                    let clientId = data.clientId;\r\n                    console.log(\"dispatch client id\")\r\n                    dispatch(storeClientId(clientId))\r\n\r\n                    let joinPayload = {\r\n                        'method': events.JOIN_GAME,\r\n                        'clientId': clientId,\r\n                        'gameId': state.user.gameId,\r\n                        'name': state.user.name\r\n                    }\r\n\r\n                    dispatch(wsSendMessage(joinPayload))\r\n\r\n                    localStream = await navigator.mediaDevices.getUserMedia(mediaConstraints)\r\n                    console.log('localStream fetched:')\r\n                    dispatch(setLocalStream(localStream))\r\n\r\n                    break;\r\n\r\n                case events.CREATE_GAME:\r\n                    let gameId = data.gameId\r\n                    dispatch(storeGameId(gameId))\r\n                    sessionStorage.setItem('gameId', gameId);\r\n                    break;\r\n\r\n                case events.JOIN_GAME:\r\n                    let otherUser = data.name\r\n                    console.log(otherUser, \"Joined\")\r\n                    break;\r\n\r\n                case 'TURN':\r\n                    dispatch(setChoice(data.words))\r\n                    break\r\n\r\n                case 'WAIT':\r\n                    dispatch(setSelector(data.name))\r\n                    break\r\n\r\n                case 'wordselect':\r\n                    dispatch(setWordHint(data.hint))\r\n                    break\r\n\r\n                case events.GUESS:\r\n\r\n                    // if the data has points the update the player list\r\n                    if (data.points != 0) {\r\n                        dispatch(updatePoints(data.points, data.clientId))\r\n                    }\r\n                    dispatch(signalChatEvent(data))\r\n                    break;\r\n\r\n                case events.DRAW:\r\n                    dispatch(draw(data))\r\n                    break;\r\n\r\n                case events.SET_REMOTE_CORDS:\r\n                    dispatch(remoteCords(data))\r\n                    break;\r\n\r\n                case 'prevClients':\r\n                    let prevClients = data.clients\r\n                    while (localStream == null || localStream == undefined) {\r\n                        await new Promise(r => setTimeout(r, 100));\r\n                    }\r\n                    for (let player of prevClients) {\r\n                        console.log(\"--> new player\", player)\r\n                        console.log(state)\r\n                        let rtcPeerConnection = new RTCPeerConnection(iceServers)\r\n                        connections[player] = rtcPeerConnection\r\n                        addLocalTracks(rtcPeerConnection)\r\n\r\n                        rtcPeerConnection.ontrack = (event) => {\r\n                            //create an audio element and attach stream to it\r\n                            console.log(event)\r\n                            console.log(\"new client remote stream attached <---\", data.senderId)\r\n                            let audioElement = document.createElement(\"video\")\r\n                            audioElement.autoplay = \"autoplay\"\r\n                            audioElement.srcObject = event.streams[0]\r\n                            audioElement.setAttribute(\"id\", player)\r\n                            document.getElementById('audioEvents').appendChild(audioElement)\r\n                            remoteStreams[player] = event.streams[0]\r\n                        }\r\n                        rtcPeerConnection.onicecandidate = (event) => {\r\n                            if (event.candidate) {\r\n                                let iceCandidatePayload = {\r\n                                    'method': 'sendIceCandidate',\r\n                                    'senderId': state.user.clientId,\r\n                                    'receiverId': player,\r\n                                    label: event.candidate.sdpMLineIndex,\r\n                                    candidate: event.candidate.candidate\r\n                                }\r\n                                dispatch(wsSendMessage(iceCandidatePayload))\r\n                            }\r\n                        }\r\n                        console.log('before offer creation')\r\n                        let offercreation = await async function () {\r\n                            console.log('in offer creation')\r\n                            let sessionDescription\r\n                            try {\r\n                                sessionDescription = await rtcPeerConnection.createOffer()\r\n                                rtcPeerConnection.setLocalDescription(sessionDescription)\r\n                                console.log('offer creation succeeded')\r\n                            } catch (error) {\r\n                                console.log('error in setting session desc')\r\n                            }\r\n\r\n                            let webRTCOfferPayload = {\r\n                                'method': 'webRTCOffer',\r\n                                sdp: sessionDescription,\r\n                                'senderId': state.user.clientId,\r\n                                'receiverId': player\r\n                            }\r\n                            console.log('sending offer websocket')\r\n                            dispatch(wsSendMessage(webRTCOfferPayload))\r\n                        }()\r\n                    }\r\n                    break\r\n\r\n                case events.UPDATE_PLAYER_LIST:\r\n                    console.log(\"updating the playerlist\")\r\n                    dispatch(updatePlayerList(data))\r\n                    break\r\n\r\n                case events.REMOVE_PLAYER:\r\n                    dispatch(removePlayer(data.id))\r\n                    break;\r\n\r\n                case 'end_game':\r\n                    dispatch(endGame(data.playerlist))\r\n                    break;\r\n\r\n                case 'webRTCOffer':\r\n                    console.log('webrtcoffer')\r\n                    console.log(data)\r\n                    let rtcPeerConnection = new RTCPeerConnection(iceServers)\r\n                    connections[data.senderId] = rtcPeerConnection\r\n                    addLocalTracks(rtcPeerConnection)\r\n\r\n                    rtcPeerConnection.ontrack = (event) => {\r\n                        //create an audio element and attach stream to it\r\n                        console.log(event)\r\n                        console.log(\"remote stream attached <---\", data.senderId)\r\n                        let audioElement = document.createElement(\"video\")\r\n                        audioElement.autoplay = \"autoplay\"\r\n                        audioElement.srcObject = event.streams[0]\r\n                        audioElement.setAttribute(\"id\", data.senderId)\r\n                        document.getElementById('audioEvents').appendChild(audioElement)\r\n                        remoteStreams[data.senderId] = event.streams[0]\r\n                    }\r\n\r\n                    rtcPeerConnection.onicecandidate = (event) => {\r\n                        if (event.candidate) {\r\n                            let iceCandidatePayload = {\r\n                                'method': 'sendIceCandidate',\r\n                                'senderId': state.user.clientId,\r\n                                'receiverId': data.senderId,\r\n                                label: event.candidate.sdpMLineIndex,\r\n                                candidate: event.candidate.candidate\r\n                            }\r\n                            dispatch(wsSendMessage(iceCandidatePayload))\r\n                        }\r\n                    }\r\n\r\n\r\n                    rtcPeerConnection.setRemoteDescription(new RTCSessionDescription(data.sdp))\r\n\r\n                    let answerCreation = await async function () {\r\n                        console.log('in offer creation')\r\n                        let sessionDescription\r\n                        try {\r\n                            sessionDescription = await rtcPeerConnection.createAnswer()\r\n                            rtcPeerConnection.setLocalDescription(sessionDescription)\r\n                            console.log('offer creation succeeded')\r\n                        } catch (error) {\r\n                            console.log('error in setting session desc')\r\n                        }\r\n\r\n                        let webRTCAnswerPayload = {\r\n                            'method': 'webRTCAnswer',\r\n                            sdp: sessionDescription,\r\n                            'senderId': state.user.clientId,\r\n                            'receiverId': data.senderId\r\n                        }\r\n                        console.log('sending answer websocket')\r\n                        dispatch(wsSendMessage(webRTCAnswerPayload))\r\n                    }()\r\n                    break\r\n\r\n                case 'webRTCAnswer':\r\n                    connections[data.senderId].setRemoteDescription(data.sdp)\r\n                    break\r\n\r\n                case 'sendIceCandidate':\r\n                    let candidate = new RTCIceCandidate({\r\n                        sdpMLineIndex: data.label,\r\n                        candidate: data.candidate\r\n                    })\r\n                    connections[data.senderId].addIceCandidate(candidate)\r\n                    break\r\n\r\n                default:\r\n                    console.log('other event:' + data.method)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default eventHandler;","import { CLIENT_ID, CONNECT, GAME_ID, JOIN_GAME, NAME, SOCKET, } from '../../utilities/constants';\r\nimport axios from 'axios'\r\n\r\n\r\nexport const createGame = () => (dispatch) => {\r\n    return axios.post(\"https://drawasarus.herokuapp.com/create-game\")\r\n        .then(response => {\r\n            console.log(response.data)\r\n            response = response.data\r\n            dispatch(storeGameId(response.gameId))\r\n            return `game/${response.gameId}`\r\n        })\r\n        .catch(error => {\r\n            return ''\r\n            alert('Unable to start Game. Please try later')\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const joinGame = () => {\r\n    return {\r\n        type: JOIN_GAME\r\n    }\r\n}\r\nexport const connect = () => {\r\n    return {\r\n        type: CONNECT\r\n    }\r\n}\r\n\r\nexport const createSocket = (ws) => {\r\n    return {\r\n        type: SOCKET,\r\n        payload: {\r\n            'ws': ws\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeClientId = (clientId) => {\r\n    return {\r\n        type: CLIENT_ID,\r\n        payload: {\r\n            'clientId': clientId\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeGameId = (gameId) => {\r\n    return {\r\n        type: GAME_ID,\r\n        payload: {\r\n            'gameId': gameId\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeName = (name) => {\r\n    //console.log('dispatching storename')\r\n    return {\r\n        type: NAME,\r\n        payload: {\r\n            'name': name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCreator = () => {\r\n    //console.log('dispatching storename')\r\n    return {\r\n        type: 'set_create'\r\n    }\r\n}","\r\n\r\nimport { UPDATE_POINTS, DRAW, GUESS, REMOVE_PLAYER, UPDATE_PLAYER_LIST, SET_LOCAL_STREAM, SET_REMOTE_STREAM, SET_REMOTE_CORDS } from \"../../utilities/constants\"\r\n\r\nexport const draw = (image) => {\r\n    return {\r\n        type: DRAW,\r\n        payload: {\r\n            'image': image.canvasEvent\r\n        }\r\n    }\r\n}\r\n\r\nexport const signalChatEvent = (chatEvent) => {\r\n    console.log('game action')\r\n    console.log(chatEvent)\r\n    return {\r\n        type: GUESS,\r\n        payload: {\r\n            'chatEvent': chatEvent\r\n        }\r\n    }\r\n}\r\n\r\nexport const updatePlayerList = (updatePlayers) => {\r\n\r\n    return {\r\n        type: UPDATE_PLAYER_LIST,\r\n        payload: updatePlayers\r\n    }\r\n}\r\n\r\nexport const updatePoints = (points, id) => {\r\n    return {\r\n        type: UPDATE_POINTS,\r\n        payload: {\r\n            'points': points,\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const removePlayer = (id) => {\r\n    return {\r\n        type: REMOVE_PLAYER,\r\n        payload: {\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const remoteCords = (data) => {\r\n    return {\r\n        type: SET_REMOTE_CORDS,\r\n        payload: {\r\n            'cords': data.cords\r\n        }\r\n    }\r\n}\r\n\r\nexport const setLocalStream = (stream) => {\r\n    return {\r\n        type: SET_LOCAL_STREAM,\r\n        payload: {\r\n            'stream': stream\r\n        }\r\n    }\r\n}\r\n\r\nexport const setRemoteStream = (stream, id) => {\r\n    return {\r\n        type: SET_REMOTE_STREAM,\r\n        payload: {\r\n            'stream': stream,\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const setChoice = (words) => {\r\n    return {\r\n        type: 'CHOICE',\r\n        payload: {\r\n            'words': words\r\n        }\r\n    }\r\n}\r\n\r\nexport const setSelector = (name) => {\r\n    return {\r\n        type: 'SELECTOR',\r\n        payload: {\r\n            'name': name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setWordHint = (hint) => {\r\n    return {\r\n        type: 'HINT',\r\n        payload: {\r\n            'hint': hint\r\n        }\r\n    }\r\n}\r\n\r\nexport const endGame = (playerlist) => {\r\n    return {\r\n        type: 'end_game',\r\n        payload: {\r\n            'playerlist': playerlist\r\n        }\r\n    }\r\n}","import eventHandler from \"../../utilities/eventHandler\"\r\n\r\nconst { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } = require(\"../../utilities/constants\")\r\nconst { wsConnect, wsDisconnect } = require(\"../actions/socketActions\")\r\n\r\n\r\nconst socketMiddleware = () => {\r\n\r\n    let socket = null\r\n    let host = ''\r\n\r\n    const onMessage = (store) => (event) => {\r\n        eventHandler(event, store.dispatch, store.getState())\r\n\r\n    }\r\n\r\n    const onOpen = (store) => (event) => {\r\n        console.log(\"web socket connection opened\")\r\n    }\r\n\r\n    const onClose = (store) => (event) => {\r\n        console.log(\"web socket connection closed\")\r\n    }\r\n\r\n    // middleware\r\n    return store => next => action => {\r\n\r\n        switch (action.type) {\r\n\r\n            case WS_CONNECT:\r\n\r\n                console.log('middle ware', WS_CONNECT)\r\n                if (socket != null) {\r\n                    socket.close()\r\n                    host = ''\r\n                }\r\n                socket = new WebSocket(action.host)\r\n\r\n                // register handlers\r\n                socket.onmessage = onMessage(store)\r\n                socket.onclose = onClose(store)\r\n                socket.onopen = onOpen(store)\r\n                break;\r\n\r\n            case WS_DISCONNECT:\r\n\r\n                console.log('reducer', WS_DISCONNECT)\r\n                if (socket != null) {\r\n                    socket.close()\r\n                }\r\n                socket = null\r\n                host = ''\r\n                break;\r\n            case WS_SEND_MESSAGE:\r\n\r\n                console.log(\"sending the message\", action.payload)\r\n                socket.send(JSON.stringify(action.payload))\r\n                break;\r\n            default:\r\n                console.log(\"default action\", action.type, \" not found\")\r\n        }\r\n\r\n\r\n        return next(action)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default socketMiddleware","import { DRAW, UPDATE_POINTS, ADD_PLAYER, SET_REMOTE_CORDS, REMOVE_PLAYER, SET_LOCAL_STREAM, SET_REMOTE_STREAM, UPDATE_PLAYER_LIST } from \"../../utilities/constants\"\r\n\r\n\r\n\r\n\r\nconst intialState = {\r\n    players: [],\r\n    localStream: null,\r\n    remoteCords: [0, 0, 0, 0],\r\n    receivedDrawEvent: false,\r\n    image: null,\r\n    choice: null,\r\n    selector: null,\r\n    hint: null,\r\n    playerlist: null//will be populated on end_game event\r\n}\r\n\r\nexport default function gameReducer(state = intialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case UPDATE_PLAYER_LIST:\r\n            return {\r\n                ...state,\r\n                players: action.payload.playerlist\r\n            }\r\n\r\n        case UPDATE_POINTS:\r\n            return {\r\n                ...state,\r\n                players: state.players.map(player => {\r\n\r\n                    if (player.id == action.payload.id) {\r\n                        player.points++;\r\n                    }\r\n\r\n                    return player\r\n                })\r\n            }\r\n\r\n        case REMOVE_PLAYER:\r\n            return {\r\n                ...state,\r\n                players: state.players.filter(player => player.id != action.payload.id)\r\n            }\r\n\r\n        case DRAW:\r\n            return {\r\n                ...state,\r\n                image: action.payload.image\r\n            }\r\n\r\n        case SET_REMOTE_CORDS:\r\n            return {\r\n                ...state,\r\n                remoteCords: action.payload.cords,\r\n                receivedDrawEvent: !state.receivedDrawEvent\r\n            }\r\n\r\n        case SET_LOCAL_STREAM:\r\n            return {\r\n                ...state,\r\n                localStream: action.payload.stream\r\n            }\r\n\r\n        case SET_REMOTE_STREAM:\r\n            var modifiedPlayers = JSON.parse(JSON.stringify(state.players))\r\n            console.log('setremotestream game reducer')\r\n            console.log(modifiedPlayers)\r\n            modifiedPlayers.forEach((player) => {\r\n                if (player.id == action.payload.id) {\r\n                    player.remoteStream = action.payload.stream\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                players: modifiedPlayers\r\n            }\r\n\r\n        case 'CHOICE':\r\n            return {\r\n                ...state,\r\n                choice: action.payload.words\r\n            }\r\n\r\n        case 'SELECTOR':\r\n            return {\r\n                ...state,\r\n                selector: action.payload.name\r\n            }\r\n\r\n        case 'HINT':\r\n            return {\r\n                ...state,\r\n                hint: JSON.parse(JSON.stringify(action.payload.hint))\r\n            }\r\n\r\n        case 'end_game':\r\n            return {\r\n                ...state,\r\n                playerlist: action.payload.playerlist\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport reduxThunk from 'redux-thunk'\r\nimport socketMiddleware from \"./middleware/middleware\"\r\nimport gameReducer from \"./reducers/gameReducers\"\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    game: gameReducer\r\n})\r\n\r\nconst middleware = [\r\n    reduxThunk,\r\n    socketMiddleware()\r\n]\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useState } from 'react'\r\nimport \"./Player.css\"\r\n\r\nfunction Player(props) {\r\n\r\n\r\n    const [mute, setmute] = useState(false)\r\n\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            localStream: state.game.localStream\r\n\r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n    const inverse = () => {\r\n\r\n\r\n        // need to get access to the audioEvents in the dom\r\n        // so we can change the volume\r\n        // this is a hack\r\n        const audioEvents = document.getElementById('audioEvents')\r\n        console.log(audioEvents)\r\n        let childNodes = audioEvents.childNodes;\r\n\r\n        console.log(\"clicked element id\", props.id)\r\n\r\n        if (state.clientId == props.id && state.localStream != null) {\r\n            console.log(\"self mute\")\r\n            if (mute) {\r\n                state.localStream.getAudioTracks().forEach(track => track.enabled = true)\r\n            }\r\n            else {\r\n                state.localStream.getAudioTracks().forEach(track => track.enabled = false)\r\n            }\r\n            setmute(!mute)\r\n            return;\r\n        }\r\n\r\n\r\n        // iterate over the child nodes\r\n        childNodes.forEach((child) => {\r\n\r\n            // setmute only if the child is the one we are looking for\r\n            if (child.getAttribute(\"id\") == props.id) {\r\n\r\n                console.log(\"action on\", props.name)\r\n                const remoteStream = child.srcObject\r\n\r\n\r\n\r\n                if (remoteStream != null) {\r\n                    // console.log(\"tracks\", child.srcObject.getAudioTracks())\r\n                    if (mute) {\r\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = true)\r\n                    }\r\n                    else {\r\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = false)\r\n                    }\r\n                    \r\n                    setmute(!mute)\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"player\" style={{ color: props.id == state.clientId ? 'red' : '' }}>\r\n            <div>{props.name}</div>\r\n            <div>{props.points}</div>\r\n\r\n            {mute ?\r\n                <span className=\"material-icons\" onClick={inverse}>volume_off</span> :\r\n                <span className=\"material-icons\" onClick={inverse}>volume_up</span>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Player from './Player'\r\nimport \"./LeaderBoard.css\"\r\n\r\nfunction LeaderBoard() {\r\n\r\n\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const players = useSelector(state => state.game.players)\r\n\r\n\r\n    const listItems = players.map((player) => <Player key={player.id} id={player.id} name={player.name} points={player.points} />);\r\n\r\n\r\n    return (\r\n        <div className=\"leader-board-container\">\r\n            {listItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeaderBoard\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { wsSendMessage } from \"../Redux/actions/socketActions\";\r\nimport events from '../utilities/constants'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { remoteCords } from \"../Redux/actions/gameActions\";\r\n\r\n\r\n\r\nlet x1, y1, x2, y2;\r\n\r\n\r\nconst Canvas = (props) => {\r\n\r\n    let canDraw = props.canDraw\r\n    const [isDrawing, setIsDrawing] = useState(false);\r\n    const canvasRef = useRef(null);\r\n    const contextRef = useRef(null);\r\n\r\n    const dispatch = useDispatch()\r\n    let interval;\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            gameId: state.user.gameId,\r\n            remoteCords: state.game.remoteCords,\r\n            image: state.game.image,\r\n            receivedDrawEvent: state.game.receivedDrawEvent\r\n        }\r\n    })\r\n\r\n    console.log(\"remote\", state.remoteCords)\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        canvas.width = parseInt(getComputedStyle(document.querySelector('#canvasElement')).getPropertyValue('width'))\r\n        canvas.height = window.innerHeight;\r\n        canvas.style.width = `100%`;\r\n        canvas.style.height = `100%`;\r\n        const context = canvas.getContext(\"2d\");\r\n        //context.scale(2, 2);\r\n        context.lineCap = \"round\";\r\n        context.strokeStyle = \"black\";\r\n        context.lineWidth = 2;\r\n        contextRef.current = context;\r\n\r\n        // window.onresize = () => {\r\n\r\n        //     console.log(\"resize\")\r\n        //     const canvas = canvasRef.current;\r\n        //     canvas.style.width = '100%';\r\n        //     canvas.style.height = '100%';\r\n        //     canvas.width = canvas.offsetWidth;\r\n        //     canvas.height = canvas.offsetHeight;\r\n        // }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"received new cords\", state.remoteCords)\r\n        const [oldx, oldy, newx, newy] = state.remoteCords;\r\n        drawLine(oldx, oldy, newx, newy)\r\n    }, [state.receivedDrawEvent])\r\n\r\n    const drawLine = (x1, y1, x2, y2) => {\r\n\r\n        contextRef.current.beginPath();\r\n        contextRef.current.moveTo(x1, y1);\r\n        contextRef.current.lineTo(x2, y2);\r\n        contextRef.current.stroke()\r\n        contextRef.current.closePath();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (state.image != null) {\r\n            // var image = new Image();\r\n            // image.src = state.image;\r\n            // contextRef.current.drawImage(image, 0, 0)\r\n        }\r\n\r\n\r\n    }, [state.image])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('canvas image use effect change')\r\n        if (state.canvasImage != null) {\r\n            let canvasImage = state.canvasImage.canvasImage\r\n            console.log('drawing')\r\n            //console.log(canvasImage.length)\r\n            console.log(canvasImage)\r\n            let image = new Image()\r\n            image.src = canvasImage\r\n            let canvasElement = document.getElementById('canvasElement')\r\n            let ctx = canvasElement.getContext('2d')\r\n            ctx.drawImage(image, 0, 0)\r\n        }\r\n    }, [state.canvasImage])\r\n    //https://stackoverflow.com/questions/43955925/html5-responsive-canvas-mouse-position-and-resize\r\n    const getMousePosition = (e) => {\r\n        const canvas = canvasRef.current;\r\n        var mouseX = e.offsetX * canvas.width / canvas.clientWidth | 0;\r\n        var mouseY = e.offsetY * canvas.height / canvas.clientHeight | 0;\r\n        return { x: mouseX, y: mouseY };\r\n    }\r\n\r\n    const startDrawing = ({ nativeEvent }) => {\r\n        if (!canDraw) return\r\n        contextRef.current.beginPath();\r\n\r\n\r\n\r\n        x1 = getMousePosition(nativeEvent).x\r\n        y1 = getMousePosition(nativeEvent).y\r\n\r\n        contextRef.current.moveTo(x1, y1);\r\n        console.log('moved to ' + x1 + \", \" + y1)\r\n        setIsDrawing(true);\r\n    };\r\n\r\n    const finishDrawing = () => {\r\n        contextRef.current.closePath();\r\n        setIsDrawing(false);\r\n        clearInterval(interval)\r\n    };\r\n\r\n    const draw = ({ nativeEvent }) => {\r\n        if (!isDrawing) {\r\n            return;\r\n        }\r\n\r\n        x2 = getMousePosition(nativeEvent).x\r\n        y2 = getMousePosition(nativeEvent).y\r\n\r\n        console.log(x1, y1, x2, y2)\r\n\r\n        const payload = {\r\n            'method': events.SET_REMOTE_CORDS,\r\n            'gameId': state.gameId,\r\n            'clientId': state.clientId,\r\n            cords: [x1, y1, x2, y2]\r\n        }\r\n\r\n        dispatch(wsSendMessage(payload))\r\n\r\n        // interval = setInterval(() => {\r\n        //     dispatch(wsSendMessage(payload))\r\n        // }, 150)\r\n\r\n\r\n\r\n        contextRef.current.lineTo(x2, y2);\r\n        //console.log('line to ' + offsetX + \", \" + offsetY)\r\n        contextRef.current.stroke();\r\n        x1 = x2;\r\n        y1 = y2;\r\n    };\r\n\r\n    const sendCanvasImage = () => {\r\n        let canvas = document.getElementById('canvasElement')\r\n        var base64ImageData = canvas.toDataURL(\"image/png\");\r\n        console.log(base64ImageData)\r\n        let message = {\r\n            'method': events.DRAW,\r\n            'gameId': state.gameId,\r\n            'clientId': state.clientId,\r\n            'canvasImage': base64ImageData\r\n        }\r\n        dispatch(wsSendMessage(message))\r\n    }\r\n\r\n    let canvasStyle = {\r\n        width: `100%`\r\n    }\r\n    return (\r\n        <canvas\r\n            onMouseDown={startDrawing}\r\n            onMouseUp={finishDrawing}\r\n            onMouseMove={draw}\r\n            ref={canvasRef}\r\n            id=\"canvasElement\"\r\n            style={canvasStyle}\r\n            disabled\r\n        />\r\n    );\r\n}\r\n\r\nexport default Canvas\r\n","import React, { Component, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\r\nimport events from '../../utilities/constants'\r\nimport './Chat.css'\r\n\r\n\r\nconst Chat = () => {\r\n    let [mic, flipMic] = useState(false);\r\n\r\n    let dispatch = useDispatch()\r\n    let state = useSelector(state => {\r\n        return {\r\n            clientId: state.user.clientId,\r\n            name: state.user.name,\r\n            gameId: state.user.gameId,\r\n            chatEvent: state.user.chatEvent\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('chatEvent:')\r\n        console.log(state.chatEvent)\r\n        addChatMessage(state.chatEvent)\r\n    }, [state.chatEvent])\r\n\r\n    const sendMessage = (message) => {\r\n        if (message === null) {\r\n            message = document.getElementsByClassName('textContainer')[0].value\r\n        }\r\n\r\n        message = message.trim()\r\n        if (message === '') return\r\n        console.log('id:' + state.clientId + \" name:\" + state.name + 'gameId:' + state.gameId)\r\n        message = {\r\n            'method': events.GUESS,\r\n            'guessWord': message,\r\n            'clientId': state.clientId,\r\n            'name': state.name,\r\n            'gameId': state.gameId\r\n        }\r\n\r\n        dispatch(wsSendMessage(message))\r\n        document.getElementsByClassName('textContainer')[0].value = ''\r\n    }\r\n\r\n    const addChatMessage = (message) => {\r\n        if (!message) {\r\n            console.log(\"Invalid message\")\r\n            return\r\n        }\r\n        console.log('addChatMessage message:')\r\n        console.log(message)\r\n        var messageDiv = createMessage(message)\r\n        document.getElementById(\"chatMessages\").innerHTML += messageDiv\r\n        let containerElement = document.getElementById('outerContainer')\r\n        containerElement.scrollTop = containerElement.scrollHeight\r\n    }\r\n\r\n    const createMessage = (message) => {\r\n        var isMine = message.clientId === state.clientId\r\n        console.log(message)\r\n        if (message.points) {\r\n            let str = (isMine ? 'You' : message.name) + ' got it right'\r\n            return (`<li class=notif>${str}</li>`)\r\n        }\r\n        var liClassName = isMine ? \"mine\" : \"their\"\r\n        let nameElement = '';\r\n        if (!isMine) {\r\n            nameElement = `<span class='senderName'>${(message.name)}</span>`;\r\n        }\r\n\r\n        return (`<li class='message ${liClassName}'>\r\n        <div class='messageContainer'>\r\n            ${nameElement}\r\n            <span class='messageBody'>\r\n                ${message.guessWord}\r\n            </span>\r\n        </div>\r\n    </li>`)\r\n    }\r\n\r\n    const handleMicFlip = () => {\r\n        flipMic(!mic)\r\n    }\r\n\r\n    let micElement = mic ?\r\n        <span className=\"material-icons micButton\"\r\n            onClick={() => handleMicFlip()}>mic</span> :\r\n        <span className=\"material-icons micButton\"\r\n            onClick={() => handleMicFlip()}>mic_off</span>\r\n\r\n    return (\r\n        <div className=\"outerContainer\" id=\"outerContainer\">\r\n            <div className=\"chatContainer\">\r\n                <div id=\"chatMessages\" className=\"chatMessages\">\r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <div className=\"footerContainer\">\r\n                    <input className=\"textContainer\"\r\n                        id=\"textInputContainer\"\r\n                        placeholder={'Type a message...'}\r\n                        onKeyPress={(event) => event.key === 'Enter' ? sendMessage(event.target.value) : null}\r\n                    />\r\n                    <i className=\"material-icons sendButton\"\r\n                        onClick={() => sendMessage(null)}>send</i>\r\n                    {micElement}\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat","import React, { Component } from 'react';\r\nimport './modal.css'\r\nconst Modal = ({ handleClose, show, children }) => {\r\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <section className='modal-main'>\r\n                {children}\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\nexport default Modal","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport LeaderBoard from '../../components/LeaderBoard'\r\nimport Canvas from '../../components/canvas'\r\nimport Chat from '../../components/Chat/Chat'\r\nimport Modal from '../../components/modal'\r\nimport './gamePage.css'\r\nimport { joinGame } from '../../Redux/actions/userActions'\r\nfunction GamePage() {\r\n\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            gameId: state.user.gameId,\r\n            name: state.user.name,\r\n        }\r\n    })\r\n\r\n    const copy = () => {\r\n        const area = document.getElementsByClassName('gameIdElement')[0]\r\n        area.select();\r\n        document.execCommand('copy')\r\n    }\r\n\r\n    return (\r\n        <div className='gamePageContainer'>\r\n            <div className=\"col-sm-2 leaderBoard\" >\r\n                <LeaderBoard />\r\n            </div>\r\n            <div className=\"col-sm-8 middleContainer\">\r\n                <div className=\"canvas\">\r\n                    <Canvas />\r\n                </div>\r\n                <div className=\"infoContainer\">\r\n                    <p>Game Id</p>\r\n                    <div className=\"gameIdElement\">{state.gameId}</div>\r\n                    <span className=\"material-icons-outlined copyButton\" onClick={copy}>content_copy</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-2 chat\" >\r\n                <Chat />\r\n            </div>\r\n            <Modal show={false} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GamePage\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { wsConnect } from '../../Redux/actions/socketActions';\r\nimport { createGame, storeName, storeGameId, setCreator } from '../../Redux/actions/userActions';\r\nimport axios from 'axios';\r\nimport './LandingPage.css'\r\n\r\nfunction LandingPage() {\r\n\r\n\r\n    console.log(\"render landing\")\r\n\r\n    const [join, setJoin] = React.useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            gameId: state.user.gameId,\r\n            name: state.user.name,\r\n            isClientCreated: state.user.isClientCreated,\r\n            isGameCreated: state.user.isGameCreated\r\n        }\r\n    })\r\n\r\n\r\n    const createButtonHandler = () => {\r\n        // first send a get request to create game\r\n        // store the gameid and client id redux thunk\r\n        dispatch(setCreator())\r\n        dispatch(storeName(document.getElementById('name').value))\r\n        dispatch(createGame())\r\n            .then(path => {\r\n                if (path != '') {\r\n                    dispatch(wsConnect('wss://drawasarus.herokuapp.com/'))\r\n                    history.push(path)\r\n                }\r\n            })\r\n    }\r\n\r\n    const joinButtonHandler = async () => {\r\n\r\n        dispatch(storeName(document.getElementById('name').value))\r\n        let gameId = document.getElementById('gameId').value\r\n        let headers = {\r\n            \"gameId\": gameId\r\n        }\r\n        let resp = await axios.get(\"https://drawasarus.herokuapp.com/isValidGame\", { headers })\r\n        console.log(resp.data)\r\n        if (!resp || !resp.data || !resp.data['valid']) {\r\n            alert(\"Game id is Invalid. Please check again\")\r\n            return\r\n        }\r\n\r\n        dispatch(storeGameId(gameId))\r\n        dispatch(wsConnect('wss://drawasarus.herokuapp.com/'))\r\n        history.push('game/' + gameId)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"LandingPage\" >\r\n            <div className=\"well\">\r\n\r\n                <div className=\"row selectors \">\r\n                    <input type=\"text\" className=\"create\" defaultValue=\"Create\" readOnly onClick={() => { setJoin(false) }}></input>\r\n                    <input type=\"text\" className=\"join\" defaultValue=\"Join\" readOnly onClick={() => { setJoin(true) }}></input>\r\n                </div>\r\n\r\n                {join ?\r\n                    <div className=\"row joinCell\">\r\n                        <div className=\"input-container\">\r\n\r\n                            <input type=\"text\" id=\"name\" placeholder=\"Enter Your Name\" />\r\n\r\n\r\n                            <input type=\"text\" id=\"game\" placeholder=\"Enter Game Id\" />\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"button\" value=\"Join\" onClick={joinButtonHandler} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    :\r\n                    <div className=\"row createCell\">\r\n                        <input type=\"text\" id=\"name\" placeholder=\"Enter Your Name\" />\r\n                        <input type=\"button\" value=\"Create\" onClick={createButtonHandler} />\r\n                    </div>\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport GamePage from './Pages/GamePage/GamePage'\r\nimport LandingPage from './Pages/LandingPage/LandingPage'\r\n\r\nfunction Playground(props) {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <LandingPage props={props} />\r\n            </Route>\r\n            <Route path=\"/game/:code\">\r\n                <GamePage />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Playground\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport store from './Redux/store';\r\nimport Playground from './Playground';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div className=\"playGroundContainer\">\r\n        <Playground props={store} />\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}