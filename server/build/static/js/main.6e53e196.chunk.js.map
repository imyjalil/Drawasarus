{"version":3,"sources":["utilities/constants.js","Redux/actions/socketActions.js","Redux/reducers/userReducer.js","utilities/eventHandler.js","Redux/actions/userActions.js","Redux/actions/gameActions.js","Redux/middleware/middleware.js","Redux/reducers/gameReducers.js","Redux/store.js","components/Player.js","components/LeaderBoard.js","components/canvas.js","components/Chat/Chat.js","components/modal.js","Pages/GamePage/GamePage.js","Pages/LandingPage/LandingPage.js","Playground.js","index.js"],"names":["module","exports","JOIN_GAME","CREATE_GAME","DRAW","GUESS","WORD_SELECT","CONNECT","SOCKET","GAME_ID","CLIENT_ID","NAME","WS_CONNECT","WS_DISCONNECT","WS_SEND_MESSAGE","UPDATE_PLAYER_LIST","REMOVE_PLAYER","MUTE","UNMUTE","SET_LOCAL_STREAM","SET_REMOTE_STREAM","SET_REMOTE_CORDS","START_GAME","UPDATE_POINTS","wsConnect","host","type","wsDisconnect","wsSendMessage","payload","console","log","initalState","gameId","name","clientId","chatEvent","isCreator","localStream","storeClientId","storeGameId","storeName","removePlayer","id","setWordHint","hint","connections","remoteStreams","mediaConstraints","audio","video","iceServers","urls","addLocalTracks","rtcPeerConnection","getTracks","forEach","track","addTrack","eventHandler","event","dispatch","state","a","data","JSON","parse","method","events","joinPayload","user","navigator","mediaDevices","getUserMedia","stream","sessionStorage","setItem","otherUser","words","points","image","canvasEvent","prevClients","clients","undefined","Promise","r","setTimeout","player","RTCPeerConnection","ontrack","senderId","audioElement","document","createElement","autoplay","srcObject","streams","setAttribute","getElementById","appendChild","onicecandidate","candidate","iceCandidatePayload","label","sdpMLineIndex","createOffer","sessionDescription","setLocalDescription","webRTCOfferPayload","sdp","updatePlayers","playerlist","setRemoteDescription","RTCSessionDescription","createAnswer","webRTCAnswerPayload","RTCIceCandidate","addIceCandidate","require","socketMiddleware","socket","store","next","action","close","WebSocket","onmessage","getState","onMessage","onclose","onopen","send","stringify","intialState","players","remoteCords","receivedDrawEvent","choice","selector","rootReducer","combineReducers","ws","game","map","filter","cords","modifiedPlayers","remoteStream","middleware","reduxThunk","createStore","compose","applyMiddleware","Player","props","useState","mute","setmute","useSelector","inverse","audioEvents","childNodes","getAudioTracks","enabled","child","getAttribute","className","style","color","onClick","LeaderBoard","x1","y1","x2","y2","useDispatch","listItems","Canvas","canDraw","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","useEffect","canvas","current","width","parseInt","getComputedStyle","querySelector","getPropertyValue","height","window","innerHeight","context","getContext","lineCap","strokeStyle","lineWidth","Image","src","drawImage","getMousePosition","e","x","offsetX","clientWidth","y","offsetY","clientHeight","onMouseDown","nativeEvent","beginPath","moveTo","onMouseUp","closePath","clearInterval","interval","onMouseMove","toDataURL","lineTo","stroke","ref","disabled","Chat","mic","flipMic","addChatMessage","sendMessage","message","getElementsByClassName","value","trim","messageDiv","createMessage","innerHTML","containerElement","scrollTop","scrollHeight","isMine","str","liClassName","nameElement","guessWord","handleMicFlip","micElement","placeholder","onKeyPress","key","target","Modal","handleClose","show","children","showHideClassName","GamePage","history","useHistory","childrenContent","setChildrenContent","flipDrawState","showModal","setModal","handleStartGameClose","startGamePayload","copyGameCode","gameCode","location","pathname","split","clipboard","writeText","word","choicePayload","handleChoiceSelection","push","sort","b","entry","LandingPage","joinButtonHandler","isClientCreated","isGameCreated","headers","axios","get","resp","alert","defaultValue","post","then","response","catch","error","path","Playground","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.6e53e196.chunk.js","sourcesContent":["module.exports = {\n    JOIN_GAME: 'join',\n    CREATE_GAME: 'create',\n    DRAW: 'draw',\n    GUESS: 'guess',\n    WORD_SELECT: 'wordselect',\n    CONNECT: 'connect',\n    SOCKET: 'socket',\n    GAME_ID: 'gameId',\n    CLIENT_ID: 'clientId',\n    NAME: 'name',\n    WS_CONNECT: 'ws_connect',\n    WS_DISCONNECT: 'ws_disconnect',\n    WS_SEND_MESSAGE: 'ws_message',\n    UPDATE_PLAYER_LIST: 'update_player_list',\n    REMOVE_PLAYER: 'remove_player',\n    MUTE: 'mute',\n    UNMUTE: 'unmute',\n    SET_LOCAL_STREAM: 'localstream',\n    SET_REMOTE_STREAM: 'remotestream',\n    SET_REMOTE_CORDS: 'cords',\n    START_GAME: 'start_game',\n    UPDATE_POINTS: 'update_points'\n}","import { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } from \"../../utilities/constants\"\n\n\nexport const wsConnect = (host) => {\n    return {\n        type: WS_CONNECT,\n        host: host\n    }\n}\n\nexport const wsDisconnect = (host) => {\n    return {\n        type: WS_DISCONNECT,\n        host: host\n    }\n}\n\nexport const wsSendMessage = (payload) => {\n    console.log('dispatching sendmessage')\n    return {\n        type: WS_SEND_MESSAGE,\n        payload: payload\n    }\n}\n","import { CLIENT_ID, GAME_ID, NAME, SOCKET, GUESS } from \"../../utilities/constants\";\n\nconst initalState = {\n    gameId: null,\n    name: '',\n    clientId: '',\n    chatEvent: null,\n    isCreator: false\n}\n\nexport default function userReducer(state = initalState, action) {\n\n    switch (action.type) {\n\n\n        case SOCKET:\n            return {\n                ...state,\n                ws: action.payload['ws']\n            }\n\n        case GAME_ID:\n            return {\n                ...state,\n                gameId: action.payload['gameId']\n            }\n\n        case CLIENT_ID:\n            return {\n                ...state,\n                clientId: action.payload['clientId']\n            }\n\n        case NAME:\n            return {\n                ...state,\n                name: action.payload['name']\n            }\n\n        case GUESS:\n            console.log(action)\n            return {\n                ...state,\n                chatEvent: action.payload['chatEvent']\n            }\n\n        case 'set_create':\n            return {\n                ...state,\n                isCreator: true\n            }\n\n        default:\n            return state\n    }\n}","import { storeClientId, storeGameId } from '../Redux/actions/userActions';\nimport { removePlayer, signalChatEvent, updatePoints, updatePlayerList, draw, setChoice, setSelector, setWordHint, endGame, setLocalStream } from '../Redux/actions/gameActions';\nimport { wsSendMessage } from '../Redux/actions/socketActions';\nimport events from './constants';\n\nlet localStream;\nlet connections = {};\nlet remoteStreams = {};\n\nconst mediaConstraints = {\n    audio: true,\n    video: false\n}\n\nconst iceServers = {\n    iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'stun:stun1.l.google.com:19302' },\n        { urls: 'stun:stun2.l.google.com:19302' },\n        { urls: 'stun:stun3.l.google.com:19302' },\n        { urls: 'stun:stun4.l.google.com:19302' },\n    ],\n}\n\nfunction addLocalTracks(rtcPeerConnection) {\n    console.log('addLocalTracks:')\n    console.log(localStream)\n    localStream.getTracks().forEach((track) => {\n        rtcPeerConnection.addTrack(track, localStream)\n    })\n}\n\nconst eventHandler = async (event, dispatch, state) => {\n\n    console.log('event received:')\n    if (event && event.data) {\n        let data = JSON.parse(event.data)\n\n        console.log(data)\n        if (data && data.method) {\n            console.log('In event, handler event type:' + data.method)\n\n            switch (data.method) {\n\n                case events.CONNECT:\n                    let clientId = data.clientId;\n                    console.log(\"dispatch client id\")\n                    dispatch(storeClientId(clientId))\n\n                    let joinPayload = {\n                        'method': events.JOIN_GAME,\n                        'clientId': clientId,\n                        'gameId': state.user.gameId,\n                        'name': state.user.name\n                    }\n\n                    dispatch(wsSendMessage(joinPayload))\n\n                    localStream = await navigator.mediaDevices.getUserMedia(mediaConstraints)\n                    console.log('localStream fetched:')\n                    dispatch(setLocalStream(localStream))\n\n                    break;\n\n                case events.CREATE_GAME:\n                    let gameId = data.gameId\n                    dispatch(storeGameId(gameId))\n                    sessionStorage.setItem('gameId', gameId);\n                    break;\n\n                case events.JOIN_GAME:\n                    let otherUser = data.name\n                    console.log(otherUser, \"Joined\")\n                    break;\n\n                case 'TURN':\n                    dispatch(setChoice(data.words))\n                    break\n\n                case 'WAIT':\n                    dispatch(setSelector(data.name))\n                    break\n\n                case 'wordselect':\n                    dispatch(setWordHint(data.hint))\n                    break\n\n                case events.GUESS:\n\n                    // if the data has points the update the player list\n                    if (data.points != 0) {\n                        dispatch(updatePoints(data.points, data.clientId))\n                    }\n                    dispatch(signalChatEvent(data))\n                    break;\n\n                case events.DRAW:\n                    dispatch(draw(data))\n                    break;\n\n                case events.SET_REMOTE_CORDS:\n                    // dispatch(remoteCords(data))\n                    break;\n\n                case 'prevClients':\n                    let prevClients = data.clients\n                    while (localStream == null || localStream == undefined) {\n                        await new Promise(r => setTimeout(r, 100));\n                    }\n                    for (let player of prevClients) {\n                        console.log(\"--> new player\", player)\n                        console.log(state)\n                        let rtcPeerConnection = new RTCPeerConnection(iceServers)\n                        connections[player] = rtcPeerConnection\n                        addLocalTracks(rtcPeerConnection)\n\n                        rtcPeerConnection.ontrack = (event) => {\n                            //create an audio element and attach stream to it\n                            console.log(event)\n                            console.log(\"new client remote stream attached <---\", data.senderId)\n                            let audioElement = document.createElement(\"video\")\n                            audioElement.autoplay = \"autoplay\"\n                            audioElement.srcObject = event.streams[0]\n                            audioElement.setAttribute(\"id\", player)\n                            document.getElementById('audioEvents').appendChild(audioElement)\n                            remoteStreams[player] = event.streams[0]\n                        }\n                        rtcPeerConnection.onicecandidate = (event) => {\n                            if (event.candidate) {\n                                let iceCandidatePayload = {\n                                    'method': 'sendIceCandidate',\n                                    'senderId': state.user.clientId,\n                                    'receiverId': player,\n                                    label: event.candidate.sdpMLineIndex,\n                                    candidate: event.candidate.candidate\n                                }\n                                dispatch(wsSendMessage(iceCandidatePayload))\n                            }\n                        }\n                        console.log('before offer creation')\n                        let offercreation = await async function () {\n                            console.log('in offer creation')\n                            let sessionDescription\n                            try {\n                                sessionDescription = await rtcPeerConnection.createOffer()\n                                rtcPeerConnection.setLocalDescription(sessionDescription)\n                                console.log('offer creation succeeded')\n                            } catch (error) {\n                                console.log('error in setting session desc')\n                            }\n\n                            let webRTCOfferPayload = {\n                                'method': 'webRTCOffer',\n                                sdp: sessionDescription,\n                                'senderId': state.user.clientId,\n                                'receiverId': player\n                            }\n                            console.log('sending offer websocket')\n                            dispatch(wsSendMessage(webRTCOfferPayload))\n                        }()\n                    }\n                    break\n\n                case events.UPDATE_PLAYER_LIST:\n                    console.log(\"updating the playerlist\")\n                    dispatch(updatePlayerList(data))\n                    break\n\n                case events.REMOVE_PLAYER:\n                    dispatch(removePlayer(data.id))\n                    break;\n\n                case 'end_game':\n                    dispatch(endGame(data.playerlist))\n                    break;\n\n                case 'webRTCOffer':\n                    console.log('webrtcoffer')\n                    console.log(data)\n                    let rtcPeerConnection = new RTCPeerConnection(iceServers)\n                    connections[data.senderId] = rtcPeerConnection\n                    addLocalTracks(rtcPeerConnection)\n\n                    rtcPeerConnection.ontrack = (event) => {\n                        //create an audio element and attach stream to it\n                        console.log(event)\n                        console.log(\"remote stream attached <---\", data.senderId)\n                        let audioElement = document.createElement(\"video\")\n                        audioElement.autoplay = \"autoplay\"\n                        audioElement.srcObject = event.streams[0]\n                        audioElement.setAttribute(\"id\", data.senderId)\n                        document.getElementById('audioEvents').appendChild(audioElement)\n                        remoteStreams[data.senderId] = event.streams[0]\n                    }\n\n                    rtcPeerConnection.onicecandidate = (event) => {\n                        if (event.candidate) {\n                            let iceCandidatePayload = {\n                                'method': 'sendIceCandidate',\n                                'senderId': state.user.clientId,\n                                'receiverId': data.senderId,\n                                label: event.candidate.sdpMLineIndex,\n                                candidate: event.candidate.candidate\n                            }\n                            dispatch(wsSendMessage(iceCandidatePayload))\n                        }\n                    }\n\n\n                    rtcPeerConnection.setRemoteDescription(new RTCSessionDescription(data.sdp))\n\n                    let answerCreation = await async function () {\n                        console.log('in offer creation')\n                        let sessionDescription\n                        try {\n                            sessionDescription = await rtcPeerConnection.createAnswer()\n                            rtcPeerConnection.setLocalDescription(sessionDescription)\n                            console.log('offer creation succeeded')\n                        } catch (error) {\n                            console.log('error in setting session desc')\n                        }\n\n                        let webRTCAnswerPayload = {\n                            'method': 'webRTCAnswer',\n                            sdp: sessionDescription,\n                            'senderId': state.user.clientId,\n                            'receiverId': data.senderId\n                        }\n                        console.log('sending answer websocket')\n                        dispatch(wsSendMessage(webRTCAnswerPayload))\n                    }()\n                    break\n\n                case 'webRTCAnswer':\n                    connections[data.senderId].setRemoteDescription(data.sdp)\n                    break\n\n                case 'sendIceCandidate':\n                    let candidate = new RTCIceCandidate({\n                        sdpMLineIndex: data.label,\n                        candidate: data.candidate\n                    })\n                    connections[data.senderId].addIceCandidate(candidate)\n                    break\n\n                default:\n                    console.log('other event:' + data.method)\n            }\n        }\n    }\n}\n\nexport default eventHandler;","import { CLIENT_ID, CONNECT, GAME_ID, JOIN_GAME, NAME, SOCKET, } from '../../utilities/constants';\nimport axios from 'axios'\n\n\nexport const createGame = () => (dispatch) => {\n    return axios.post(\"https://drawasarus.herokuapp.com/create-game\")\n        .then(response => {\n            console.log(response.data)\n            response = response.data\n            dispatch(storeGameId(response.gameId))\n            return `game/${response.gameId}`\n        })\n        .catch(error => {\n            return ''\n            alert('Unable to start Game. Please try later')\n        })\n\n}\n\n\n\n\n\nexport const joinGame = () => {\n    return {\n        type: JOIN_GAME\n    }\n}\nexport const connect = () => {\n    return {\n        type: CONNECT\n    }\n}\n\nexport const createSocket = (ws) => {\n    return {\n        type: SOCKET,\n        payload: {\n            'ws': ws\n        }\n    }\n}\n\nexport const storeClientId = (clientId) => {\n    return {\n        type: CLIENT_ID,\n        payload: {\n            'clientId': clientId\n        }\n    }\n}\n\nexport const storeGameId = (gameId) => {\n    return {\n        type: GAME_ID,\n        payload: {\n            'gameId': gameId\n        }\n    }\n}\n\nexport const storeName = (name) => {\n    //console.log('dispatching storename')\n    return {\n        type: NAME,\n        payload: {\n            'name': name\n        }\n    }\n}\n\nexport const setCreator = () => {\n    //console.log('dispatching storename')\n    return {\n        type: 'set_create'\n    }\n}","\n\nimport { UPDATE_POINTS, DRAW, GUESS, REMOVE_PLAYER, UPDATE_PLAYER_LIST, SET_LOCAL_STREAM, SET_REMOTE_STREAM, SET_REMOTE_CORDS } from \"../../utilities/constants\"\n\nexport const draw = (image) => {\n    return {\n        type: DRAW,\n        payload: {\n            'image': image.canvasEvent\n        }\n    }\n}\n\nexport const signalChatEvent = (chatEvent) => {\n    return {\n        type: GUESS,\n        payload: {\n            'chatEvent': chatEvent\n        }\n    }\n}\n\nexport const updatePlayerList = (updatePlayers) => {\n\n    return {\n        type: UPDATE_PLAYER_LIST,\n        payload: updatePlayers\n    }\n}\n\nexport const updatePoints = (points, id) => {\n    return {\n        type: UPDATE_POINTS,\n        payload: {\n            'points': points,\n            'id': id\n        }\n    }\n}\n\nexport const removePlayer = (id) => {\n    return {\n        type: REMOVE_PLAYER,\n        payload: {\n            'id': id\n        }\n    }\n}\n\nexport const remoteCords = (data) => {\n    return {\n        type: SET_REMOTE_CORDS,\n        payload: {\n            'cords': data.cords\n        }\n    }\n}\n\nexport const setLocalStream = (stream) => {\n    return {\n        type: SET_LOCAL_STREAM,\n        payload: {\n            'stream': stream\n        }\n    }\n}\n\nexport const setRemoteStream = (stream, id) => {\n    return {\n        type: SET_REMOTE_STREAM,\n        payload: {\n            'stream': stream,\n            'id': id\n        }\n    }\n}\n\nexport const setChoice = (words) => {\n    return {\n        type: 'CHOICE',\n        payload: {\n            'words': words\n        }\n    }\n}\n\nexport const setSelector = (name) => {\n    return {\n        type: 'SELECTOR',\n        payload: {\n            'name': name\n        }\n    }\n}\n\nexport const setWordHint = (hint) => {\n    return {\n        type: 'HINT',\n        payload: {\n            'hint': hint\n        }\n    }\n}\n\nexport const endGame = (playerlist) => {\n    return {\n        type: 'end_game',\n        payload: {\n            'playerlist': playerlist\n        }\n    }\n}","import eventHandler from \"../../utilities/eventHandler\"\n\nconst { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } = require(\"../../utilities/constants\")\nconst { wsConnect, wsDisconnect } = require(\"../actions/socketActions\")\n\n\nconst socketMiddleware = () => {\n\n    let socket = null\n    let host = ''\n\n    const onMessage = (store) => (event) => {\n        eventHandler(event, store.dispatch, store.getState())\n\n    }\n\n    const onOpen = (store) => (event) => {\n        console.log(\"web socket connection opened\")\n    }\n\n    const onClose = (store) => (event) => {\n        console.log(\"web socket connection closed\")\n    }\n\n    // middleware\n    return store => next => action => {\n\n        switch (action.type) {\n\n            case WS_CONNECT:\n\n                console.log('middle ware', WS_CONNECT)\n                if (socket != null) {\n                    socket.close()\n                    host = ''\n                }\n                socket = new WebSocket(action.host)\n\n                // register handlers\n                socket.onmessage = onMessage(store)\n                socket.onclose = onClose(store)\n                socket.onopen = onOpen(store)\n                break;\n\n            case WS_DISCONNECT:\n\n                console.log('reducer', WS_DISCONNECT)\n                if (socket != null) {\n                    socket.close()\n                }\n                socket = null\n                host = ''\n                break;\n            case WS_SEND_MESSAGE:\n\n                console.log(\"sending the message\", action.payload)\n                socket.send(JSON.stringify(action.payload))\n                break;\n            default:\n                console.log(\"default action\", action.type, \" not found\")\n        }\n\n\n        return next(action)\n\n    }\n\n\n}\n\nexport default socketMiddleware","import { DRAW, UPDATE_POINTS, ADD_PLAYER, SET_REMOTE_CORDS, REMOVE_PLAYER, SET_LOCAL_STREAM, SET_REMOTE_STREAM, UPDATE_PLAYER_LIST } from \"../../utilities/constants\"\n\n\n\n\nconst intialState = {\n    players: [],\n    localStream: null,\n    remoteCords: [0, 0, 0, 0],\n    receivedDrawEvent: false,\n    image: null,\n    choice: null,\n    selector: null,\n    hint: null,\n    playerlist: null//will be populated on end_game event\n}\n\nexport default function gameReducer(state = intialState, action) {\n\n    switch (action.type) {\n\n        case UPDATE_PLAYER_LIST:\n            return {\n                ...state,\n                players: action.payload.playerlist\n            }\n\n        case UPDATE_POINTS:\n            return {\n                ...state,\n                players: state.players.map(player => {\n\n                    if (player.id == action.payload.id) {\n                        player.points++;\n                    }\n\n                    return player\n                })\n            }\n\n        case REMOVE_PLAYER:\n            return {\n                ...state,\n                players: state.players.filter(player => player.id != action.payload.id)\n            }\n\n        case DRAW:\n            return {\n                ...state,\n                image: action.payload.image\n            }\n\n        case SET_REMOTE_CORDS:\n            return {\n                ...state,\n                remoteCords: action.payload.cords,\n                receivedDrawEvent: !state.receivedDrawEvent\n            }\n\n        case SET_LOCAL_STREAM:\n            return {\n                ...state,\n                localStream: action.payload.stream\n            }\n\n        case SET_REMOTE_STREAM:\n            var modifiedPlayers = JSON.parse(JSON.stringify(state.players))\n            console.log('setremotestream game reducer')\n            console.log(modifiedPlayers)\n            modifiedPlayers.forEach((player) => {\n                if (player.id == action.payload.id) {\n                    player.remoteStream = action.payload.stream\n                }\n            })\n            return {\n                ...state,\n                players: modifiedPlayers\n            }\n\n        case 'CHOICE':\n            return {\n                ...state,\n                choice: action.payload.words\n            }\n\n        case 'SELECTOR':\n            return {\n                ...state,\n                selector: action.payload.name\n            }\n\n        case 'HINT':\n            return {\n                ...state,\n                hint: JSON.parse(JSON.stringify(action.payload.hint))\n            }\n\n        case 'end_game':\n            return {\n                ...state,\n                playerlist: action.payload.playerlist\n            }\n\n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport userReducer from \"./reducers/userReducer\"\nimport reduxThunk from 'redux-thunk'\nimport socketMiddleware from \"./middleware/middleware\"\nimport gameReducer from \"./reducers/gameReducers\"\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    game: gameReducer\n})\n\nconst middleware = [\n    reduxThunk,\n    socketMiddleware()\n]\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(...middleware),\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n\n)\n\nexport default store","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useState } from 'react'\nimport \"./Player.css\"\n\nfunction Player(props) {\n\n\n    const [mute, setmute] = useState(false)\n\n    let state = useSelector(state => {\n\n        return {\n            clientId: state.user.clientId,\n            localStream: state.game.localStream\n\n        }\n    })\n\n\n\n\n    const inverse = () => {\n\n\n        // need to get access to the audioEvents in the dom\n        // so we can change the volume\n        // this is a hack\n        const audioEvents = document.getElementById('audioEvents')\n        console.log(audioEvents)\n        let childNodes = audioEvents.childNodes;\n\n        console.log(\"clicked element id\", props.id)\n\n        if (state.clientId == props.id && state.localStream != null) {\n            console.log(\"self mute\")\n            if (mute) {\n                state.localStream.getAudioTracks().forEach(track => track.enabled = true)\n            }\n            else {\n                state.localStream.getAudioTracks().forEach(track => track.enabled = false)\n            }\n            setmute(!mute)\n            return;\n        }\n\n\n        // iterate over the child nodes\n        childNodes.forEach((child) => {\n\n            // setmute only if the child is the one we are looking for\n            if (child.getAttribute(\"id\") == props.id) {\n\n                console.log(\"action on\", props.name)\n                const remoteStream = child.srcObject\n\n\n\n                if (remoteStream != null) {\n                    // console.log(\"tracks\", child.srcObject.getAudioTracks())\n                    if (mute) {\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = true)\n                    }\n                    else {\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = false)\n                    }\n                    \n                    setmute(!mute)\n                }\n            }\n        })\n\n\n    }\n\n\n    return (\n        <div className=\"player\" style={{ color: props.id == state.clientId ? 'red' : '' }}>\n            <div>{props.name}</div>\n            <div>{props.points}</div>\n\n            {mute ?\n                <span className=\"material-icons\" onClick={inverse}>volume_off</span> :\n                <span className=\"material-icons\" onClick={inverse}>volume_up</span>\n            }\n\n\n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Player from './Player'\nimport \"./LeaderBoard.css\"\n\nfunction LeaderBoard() {\n\n\n\n\n\n    const dispatch = useDispatch()\n    const players = useSelector(state => state.game.players)\n\n\n    const listItems = players.map((player) => <Player key={player.id} id={player.id} name={player.name} points={player.points} />);\n\n\n    return (\n        <div className=\"leader-board-container\">\n            {listItems}\n        </div>\n    )\n}\n\nexport default LeaderBoard\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { wsSendMessage } from \"../Redux/actions/socketActions\";\nimport events from '../utilities/constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { remoteCords } from \"../Redux/actions/gameActions\";\n\n\n\nlet x1, y1, x2, y2;\n\n\nconst Canvas = (props) => {\n\n    let canDraw = props.canDraw\n    const [isDrawing, setIsDrawing] = useState(false);\n    const canvasRef = useRef(null);\n    const contextRef = useRef(null);\n\n    const dispatch = useDispatch()\n    let interval;\n    let state = useSelector(state => {\n\n        return {\n            clientId: state.user.clientId,\n            gameId: state.user.gameId,\n            remoteCords: state.game.remoteCords,\n            image: state.game.image,\n            receivedDrawEvent: state.game.receivedDrawEvent\n        }\n    })\n\n    console.log(\"remote\", state.remoteCords)\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = parseInt(getComputedStyle(document.querySelector('#canvasElement')).getPropertyValue('width'))\n        canvas.height = window.innerHeight;\n        canvas.style.width = `100%`;\n        canvas.style.height = `100%`;\n        const context = canvas.getContext(\"2d\");\n        //context.scale(2, 2);\n        context.lineCap = \"round\";\n        context.strokeStyle = \"black\";\n        context.lineWidth = 2;\n        contextRef.current = context;\n    }, []);\n\n    useEffect(() => {\n\n\n        if (state.image != null) {\n            var image = new Image();\n            image.src = state.image;\n            contextRef.current.drawImage(image, 0, 0)\n        }\n\n\n    }, [state.image])\n\n\n\n    //https://stackoverflow.com/questions/43955925/html5-responsive-canvas-mouse-position-and-resize\n    const getMousePosition = (e) => {\n        const canvas = canvasRef.current;\n        var mouseX = e.offsetX * canvas.width / canvas.clientWidth | 0;\n        var mouseY = e.offsetY * canvas.height / canvas.clientHeight | 0;\n        return { x: mouseX, y: mouseY };\n    }\n\n    const startDrawing = ({ nativeEvent }) => {\n        if (!canDraw) return\n        contextRef.current.beginPath();\n\n\n\n        x1 = getMousePosition(nativeEvent).x\n        y1 = getMousePosition(nativeEvent).y\n\n        contextRef.current.moveTo(x1, y1);\n        console.log('moved to ' + x1 + \", \" + y1)\n        setIsDrawing(true);\n    };\n\n    const finishDrawing = () => {\n        contextRef.current.closePath();\n        setIsDrawing(false);\n        clearInterval(interval)\n    };\n\n    const draw = ({ nativeEvent }) => {\n        if (!isDrawing) {\n            return;\n        }\n\n        x2 = getMousePosition(nativeEvent).x\n        y2 = getMousePosition(nativeEvent).y\n\n        console.log(x1, y1, x2, y2)\n\n        let payload = {\n            'method': events.DRAW,\n            'clientId': state.clientId,\n            'gameId': state.gameId,\n            'canvasEvent': canvasRef.current.toDataURL(\"image/png\")\n        }\n\n        // interval = setInterval(() => {\n        //     dispatch(wsSendMessage(payload))\n        // }, 150)\n\n\n\n        contextRef.current.lineTo(x2, y2);\n        //console.log('line to ' + offsetX + \", \" + offsetY)\n        contextRef.current.stroke();\n        x1 = x2;\n        y1 = y2;\n    };\n\n    let canvasStyle = {\n        width: `100%`\n    }\n    return (\n        <canvas\n            onMouseDown={startDrawing}\n            onMouseUp={finishDrawing}\n            onMouseMove={draw}\n            ref={canvasRef}\n            id=\"canvasElement\"\n            style={canvasStyle}\n            disabled\n        />\n    );\n}\n\nexport default Canvas\n","import React, { Component, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\nimport events from '../../utilities/constants'\nimport './Chat.css'\n\n\nconst Chat = () => {\n    let [mic, flipMic] = useState(false);\n\n    let dispatch = useDispatch()\n    let state = useSelector(state => {\n        return {\n            clientId: state.user.clientId,\n            name: state.user.name,\n            gameId: state.user.gameId,\n            chatEvent: state.user.chatEvent\n        }\n    })\n\n    useEffect(() => {\n        console.log('chatEvent:')\n        console.log(state.chatEvent)\n        addChatMessage(state.chatEvent)\n    }, [state.chatEvent])\n\n    const sendMessage = (message) => {\n        if (message === null) {\n            message = document.getElementsByClassName('textContainer')[0].value\n        }\n\n        message = message.trim()\n        if (message === '') return\n        console.log('id:' + state.clientId + \" name:\" + state.name + 'gameId:' + state.gameId)\n        message = {\n            'method': events.GUESS,\n            'guessWord': message,\n            'clientId': state.clientId,\n            'name': state.name,\n            'gameId': state.gameId\n        }\n\n        dispatch(wsSendMessage(message))\n        document.getElementsByClassName('textContainer')[0].value = ''\n    }\n\n    const addChatMessage = (message) => {\n        if (!message) {\n            console.log(\"Invalid message\")\n            return\n        }\n        console.log('addChatMessage message:')\n        console.log(message)\n        var messageDiv = createMessage(message)\n        document.getElementById(\"chatMessages\").innerHTML += messageDiv\n        let containerElement = document.getElementById('outerContainer')\n        containerElement.scrollTop = containerElement.scrollHeight\n    }\n\n    const createMessage = (message) => {\n        var isMine = message.clientId === state.clientId\n        console.log(message)\n        if (message.points) {\n            let str = (isMine ? 'You' : message.name) + ' got it right'\n            return (`<li class=notif>${str}</li>`)\n        }\n        var liClassName = isMine ? \"mine\" : \"their\"\n        let nameElement = '';\n        if (!isMine) {\n            nameElement = `<span class='senderName'>${(message.name)}</span>`;\n        }\n\n        return (`<li class='message ${liClassName}'>\n        <div class='messageContainer'>\n            ${nameElement}\n            <span class='messageBody'>\n                ${message.guessWord}\n            </span>\n        </div>\n    </li>`)\n    }\n\n    const handleMicFlip = () => {\n        flipMic(!mic)\n    }\n\n    let micElement = mic ?\n        <span className=\"material-icons micButton\"\n            onClick={() => handleMicFlip()}>mic</span> :\n        <span className=\"material-icons micButton\"\n            onClick={() => handleMicFlip()}>mic_off</span>\n\n    return (\n        <div className=\"outerContainer\" id=\"outerContainer\">\n            <div className=\"chatContainer\">\n                <div id=\"chatMessages\" className=\"chatMessages\">\n                </div>\n            </div>\n            <footer>\n                <div className=\"footerContainer\">\n                    <input className=\"textContainer\"\n                        id=\"textInputContainer\"\n                        placeholder={'Type a message...'}\n                        onKeyPress={(event) => event.key === 'Enter' ? sendMessage(event.target.value) : null}\n                    />\n                    <i className=\"material-icons sendButton\"\n                        onClick={() => sendMessage(null)}>send</i>\n                    {micElement}\n                </div>\n            </footer>\n        </div>\n    )\n}\nexport default Chat","import React, { Component } from 'react';\nimport './modal.css'\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n\n    return (\n        <div className={showHideClassName}>\n            <section className='modal-main'>\n                {children}\n            </section>\n        </div>\n    );\n};\nexport default Modal","import React, { useEffect, useState } from 'react'\nimport LeaderBoard from '../../components/LeaderBoard'\nimport Canvas from '../../components/canvas'\nimport Chat from '../../components/Chat/Chat'\nimport Modal from '../../components/modal'\nimport './gamePage.css'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport events from '../../utilities/constants'\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\nimport { setWordHint } from '../../Redux/actions/gameActions'\n\nfunction GamePage() {\n\n    let history = useHistory()\n    let dispatch = useDispatch()\n\n    let [childrenContent, setChildrenContent] = useState(null)\n    let [canDraw, flipDrawState] = useState(false)\n    let state = useSelector(state => {\n\n        return {\n            gameId: state.user.gameId,\n            clientId: state.user.clientId,\n            isCreator: state.user.isCreator,\n            choice: state.game.choice,\n            selector: state.game.selector,\n            hint: state.game.hint,\n            playerlist: state.game.playerlist\n        }\n    })\n\n    const [showModal, setModal] = useState(state.isCreator)\n\n\n    useEffect(() => {\n        if (state.choice !== null) {\n            setModal(true)\n            console.log(state.choice)\n\n            setChildrenContent(<div>\n                <p>choose a word</p>\n                {state.choice.map((word) => {\n                    return <button key={word} onClick={() => { handleChoiceSelection(word) }}>{word}</button>\n                })}\n            </div>)\n        }\n    }, [state.choice])\n\n    useEffect(() => {\n        if (state.selector !== null) {\n            dispatch(setWordHint(null))\n            flipDrawState(false)\n            setModal(true)\n            setChildrenContent(<div>\n                <p>Please wait {state.selector} is choosing a word</p>\n            </div>)\n        }\n    }, [state.selector])\n\n    useEffect(() => {\n        if (state.gameId === null) {\n            moveToHomePage()\n        }\n    }, [state.gameId])\n\n    useEffect(() => {\n        setChildrenContent(<div>Click here to copy the game code\n            <span className=\"material-icons copyButton\" onClick={copyGameCode}>content_copy</span>\n            <button onClick={handleStartGameClose}>Start Game!</button></div>)\n    }, [])\n\n    useEffect(() => {\n        console.log('hint useeffect')\n        if (state.hint !== null) {\n            console.log('hint:', state.hint)\n            setModal(false)\n        }\n    }, [state.hint])\n\n    useEffect(() => {\n        if (state.playerlist !== null) {\n            let playerlist = state.playerlist\n            playerlist.sort((a, b) => (a.points > b.points) ? -1 : 1)\n            console.log('playlist')\n            console.log(playerlist)\n            console.log(typeof playerlist)\n            setModal(true)\n            setChildrenContent(<div>\n                <p>Leader Board</p>\n                {state.playerlist.map((entry) => {\n                    return (<div key={entry.id}>\n                        <p>{entry.name}</p>\n                        <p>{entry.points}</p>\n                    </div>)\n                })}\n                <p>Game Ended!!!</p>\n            </div>)\n\n        }\n    }, [state.playerlist])\n\n    function moveToHomePage() {\n        history.push('/')\n    }\n\n    function handleChoiceSelection(word) {\n        let choicePayload = {\n            'method': 'choice',\n            'word': word,\n            'clientId': state.clientId,\n            'gameId': state.gameId\n        }\n        setModal(false)\n        dispatch(wsSendMessage(choicePayload))\n        flipDrawState(true)\n    }\n\n    function handleStartGameClose() {\n        let startGamePayload = {\n            'method': events.START_GAME,\n            gameId: state.gameId\n        }\n        setModal(false)\n        dispatch(wsSendMessage(startGamePayload))\n\n\n    }\n\n    function copyGameCode() {\n        const gameCode = window.location.pathname.split(\"/\")[2]\n        console.log(gameCode)\n        navigator.clipboard.writeText(gameCode)\n    }\n\n\n\n    return (\n        <div className='gamePageContainer'>\n            <div className=\"col-sm-2 leaderBoard\" >\n                <LeaderBoard />\n            </div>\n            <div className=\"col-sm-8 canvas\">\n                <Canvas canDraw={canDraw} />\n            </div>\n            <div className=\"col-sm-2 chat\" >\n                <Chat />\n            </div>\n            <div id=\"audioEvents\">\n\n            </div>\n            <Modal id=\"modal\" show={showModal} children={childrenContent} />\n        </div>\n    )\n}\n\nexport default GamePage\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom';\nimport { wsConnect } from '../../Redux/actions/socketActions';\nimport { createGame, storeName, storeGameId, setCreator } from '../../Redux/actions/userActions';\nimport axios from 'axios';\n\nfunction LandingPage() {\n\n    //console.log(\"render landing\")\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    let state = useSelector(state => {\n\n        return {\n            clientId: state.user.clientId,\n            gameId: state.user.gameId,\n            name: state.user.name,\n            isClientCreated: state.user.isClientCreated,\n            isGameCreated: state.user.isGameCreated\n        }\n    })\n\n\n    const createButtonHandler = () => {\n        // first send a get request to create game\n        // store the gameid and client id redux thunk\n        dispatch(setCreator())\n        dispatch(storeName(document.getElementById('name').value))\n        dispatch(createGame())\n            .then(path => {\n                if (path != '') {\n                    dispatch(wsConnect('wss://drawasarus.herokuapp.com/'))\n                    history.push(path)\n                }\n            })\n    }\n\n    const joinButtonHandler = async () => {\n\n        dispatch(storeName(document.getElementById('name').value))\n        let gameId = document.getElementById('gameId').value\n        let headers = {\n            \"gameId\": gameId\n        }\n        let resp = await axios.get(\"https://drawasarus.herokuapp.com/isValidGame\", { headers })\n        console.log(resp.data)\n        if (!resp || !resp.data || !resp.data['valid']) {\n            alert(\"Game id is Invalid. Please check again\")\n            return\n        }\n\n        dispatch(storeGameId(gameId))\n        dispatch(wsConnect('wss://drawasarus.herokuapp.com/'))\n        history.push('game/' + gameId)\n    }\n\n\n    return (\n        <div className=\"LandingPage\" >\n            <input type=\"text\" id=\"name\" defaultValue=\"abc\" /><br></br>\n            <input type=\"button\" value=\"Create\" onClick={createButtonHandler} /><br></br>\n            <input type=\"text\" id=\"gameId\" /><br></br>\n            <input type=\"button\" value=\"Join\" onClick={joinButtonHandler} />\n        </div >\n    )\n}\n\nexport default LandingPage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport GamePage from './Pages/GamePage/GamePage'\nimport LandingPage from './Pages/LandingPage/LandingPage'\n\nfunction Playground(props) {\n\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <LandingPage props={props} />\n            </Route>\n            <Route path=\"/game/:code\">\n                <GamePage />\n            </Route>\n        </Switch>\n    )\n}\n\nexport default Playground\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './Redux/store';\nimport Playground from './Playground';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <div className=\"playGroundContainer\">\n        <Playground props={store} />\n      </div>\n    </Router>\n  </Provider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}