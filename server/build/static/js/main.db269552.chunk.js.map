{"version":3,"sources":["utilities/constants.js","Redux/actions/socketActions.js","Redux/reducers/userReducer.js","utilities/eventHandler.js","Redux/actions/userActions.js","Redux/actions/gameActions.js","Redux/middleware/middleware.js","Redux/reducers/gameReducers.js","Redux/store.js","components/Player.js","components/LeaderBoard.js","components/canvas.js","components/Chat/Chat.js","components/modal.js","Pages/GamePage/GamePage.js","Pages/LandingPage/LandingPage.js","Playground.js","index.js"],"names":["module","exports","JOIN_GAME","CREATE_GAME","DRAW","GUESS","WORD_SELECT","CONNECT","SOCKET","GAME_ID","CLIENT_ID","NAME","WS_CONNECT","WS_DISCONNECT","WS_SEND_MESSAGE","UPDATE_PLAYER_LIST","REMOVE_PLAYER","MUTE","UNMUTE","SET_LOCAL_STREAM","SET_REMOTE_STREAM","SET_REMOTE_CORDS","START_GAME","UPDATE_POINTS","wsConnect","host","type","wsDisconnect","wsSendMessage","payload","console","log","initalState","gameId","name","clientId","chatEvent","isCreator","localStream","storeClientId","storeGameId","storeName","removePlayer","id","remoteCords","data","cords","setWordHint","hint","connections","remoteStreams","mediaConstraints","audio","video","iceServers","urls","addLocalTracks","rtcPeerConnection","getTracks","forEach","track","addTrack","eventHandler","event","dispatch","state","a","JSON","parse","method","events","joinPayload","user","navigator","mediaDevices","getUserMedia","stream","sessionStorage","setItem","otherUser","words","points","image","canvasEvent","prevClients","clients","undefined","Promise","r","setTimeout","player","RTCPeerConnection","ontrack","senderId","audioElement","document","createElement","autoplay","srcObject","streams","setAttribute","getElementById","appendChild","onicecandidate","candidate","iceCandidatePayload","label","sdpMLineIndex","createOffer","sessionDescription","setLocalDescription","webRTCOfferPayload","sdp","updatePlayers","playerlist","setRemoteDescription","RTCSessionDescription","createAnswer","webRTCAnswerPayload","RTCIceCandidate","addIceCandidate","require","socketMiddleware","socket","store","next","action","close","WebSocket","onmessage","getState","onMessage","onclose","onopen","send","stringify","intialState","players","receivedDrawEvent","choice","selector","rootReducer","combineReducers","ws","game","map","filter","modifiedPlayers","remoteStream","middleware","reduxThunk","createStore","compose","applyMiddleware","Player","props","useState","mute","setmute","useSelector","inverse","audioEvents","childNodes","getAudioTracks","enabled","child","getAttribute","className","style","color","onClick","LeaderBoard","x1","y1","x2","y2","useDispatch","listItems","Canvas","canDraw","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","useEffect","canvas","current","width","parseInt","getComputedStyle","querySelector","getPropertyValue","height","window","innerHeight","context","getContext","lineCap","strokeStyle","lineWidth","oldx","oldy","newx","newy","drawLine","beginPath","moveTo","lineTo","stroke","closePath","getMousePosition","e","x","offsetX","clientWidth","y","offsetY","clientHeight","onMouseDown","nativeEvent","onMouseUp","clearInterval","interval","onMouseMove","ref","disabled","Chat","mic","flipMic","addChatMessage","sendMessage","message","getElementsByClassName","value","trim","messageDiv","createMessage","innerHTML","containerElement","scrollTop","scrollHeight","isMine","str","liClassName","nameElement","guessWord","handleMicFlip","micElement","placeholder","onKeyPress","key","target","Modal","handleClose","show","children","showHideClassName","GamePage","history","useHistory","childrenContent","setChildrenContent","flipDrawState","showModal","setModal","handleStartGameClose","startGamePayload","copyGameCode","gameCode","location","pathname","split","clipboard","writeText","word","choicePayload","handleChoiceSelection","push","sort","b","entry","LandingPage","React","join","setJoin","joinButtonHandler","isClientCreated","isGameCreated","headers","axios","get","resp","alert","defaultValue","readOnly","post","then","response","catch","error","path","Playground","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.db269552.chunk.js","sourcesContent":["module.exports = {\r\n    JOIN_GAME: 'join',\r\n    CREATE_GAME: 'create',\r\n    DRAW: 'draw',\r\n    GUESS: 'guess',\r\n    WORD_SELECT: 'wordselect',\r\n    CONNECT: 'connect',\r\n    SOCKET: 'socket',\r\n    GAME_ID: 'gameId',\r\n    CLIENT_ID: 'clientId',\r\n    NAME: 'name',\r\n    WS_CONNECT: 'ws_connect',\r\n    WS_DISCONNECT: 'ws_disconnect',\r\n    WS_SEND_MESSAGE: 'ws_message',\r\n    UPDATE_PLAYER_LIST: 'update_player_list',\r\n    REMOVE_PLAYER: 'remove_player',\r\n    MUTE: 'mute',\r\n    UNMUTE: 'unmute',\r\n    SET_LOCAL_STREAM: 'localstream',\r\n    SET_REMOTE_STREAM: 'remotestream',\r\n    SET_REMOTE_CORDS: 'cords',\r\n    START_GAME: 'start_game',\r\n    UPDATE_POINTS: 'update_points'\r\n}","import { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } from \"../../utilities/constants\"\r\n\r\n\r\nexport const wsConnect = (host) => {\r\n    return {\r\n        type: WS_CONNECT,\r\n        host: host\r\n    }\r\n}\r\n\r\nexport const wsDisconnect = (host) => {\r\n    return {\r\n        type: WS_DISCONNECT,\r\n        host: host\r\n    }\r\n}\r\n\r\nexport const wsSendMessage = (payload) => {\r\n    console.log('dispatching sendmessage')\r\n    return {\r\n        type: WS_SEND_MESSAGE,\r\n        payload: payload\r\n    }\r\n}\r\n","import { CLIENT_ID, GAME_ID, NAME, SOCKET, GUESS } from \"../../utilities/constants\";\r\n\r\nconst initalState = {\r\n    gameId: null,\r\n    name: '',\r\n    clientId: '',\r\n    chatEvent: null,\r\n    isCreator: false\r\n}\r\n\r\nexport default function userReducer(state = initalState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case SOCKET:\r\n            return {\r\n                ...state,\r\n                ws: action.payload['ws']\r\n            }\r\n\r\n        case GAME_ID:\r\n            return {\r\n                ...state,\r\n                gameId: action.payload['gameId']\r\n            }\r\n\r\n        case CLIENT_ID:\r\n            return {\r\n                ...state,\r\n                clientId: action.payload['clientId']\r\n            }\r\n\r\n        case NAME:\r\n            return {\r\n                ...state,\r\n                name: action.payload['name']\r\n            }\r\n\r\n        case GUESS:\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                chatEvent: action.payload['chatEvent']\r\n            }\r\n\r\n        case 'set_create':\r\n            return {\r\n                ...state,\r\n                isCreator: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { storeClientId, storeGameId } from '../Redux/actions/userActions';\r\nimport { remoteCords,removePlayer, signalChatEvent, updatePoints, updatePlayerList, draw, setChoice, setSelector, setWordHint, endGame, setLocalStream } from '../Redux/actions/gameActions';\r\nimport { wsSendMessage } from '../Redux/actions/socketActions';\r\nimport events from './constants';\r\n\r\nlet localStream;\r\nlet connections = {};\r\nlet remoteStreams = {};\r\n\r\nconst mediaConstraints = {\r\n    audio: true,\r\n    video: false\r\n}\r\n\r\nconst iceServers = {\r\n    iceServers: [\r\n        { urls: 'stun:stun.l.google.com:19302' },\r\n        { urls: 'stun:stun1.l.google.com:19302' },\r\n        { urls: 'stun:stun2.l.google.com:19302' },\r\n        { urls: 'stun:stun3.l.google.com:19302' },\r\n        { urls: 'stun:stun4.l.google.com:19302' },\r\n    ],\r\n}\r\n\r\nfunction addLocalTracks(rtcPeerConnection) {\r\n    console.log('addLocalTracks:')\r\n    console.log(localStream)\r\n    localStream.getTracks().forEach((track) => {\r\n        rtcPeerConnection.addTrack(track, localStream)\r\n    })\r\n}\r\n\r\nconst eventHandler = async (event, dispatch, state) => {\r\n\r\n    console.log('event received:')\r\n    if (event && event.data) {\r\n        let data = JSON.parse(event.data)\r\n\r\n        console.log(data)\r\n        if (data && data.method) {\r\n            console.log('In event, handler event type:' + data.method)\r\n\r\n            switch (data.method) {\r\n\r\n                case events.CONNECT:\r\n                    let clientId = data.clientId;\r\n                    console.log(\"dispatch client id\")\r\n                    dispatch(storeClientId(clientId))\r\n\r\n                    let joinPayload = {\r\n                        'method': events.JOIN_GAME,\r\n                        'clientId': clientId,\r\n                        'gameId': state.user.gameId,\r\n                        'name': state.user.name\r\n                    }\r\n\r\n                    dispatch(wsSendMessage(joinPayload))\r\n\r\n                    localStream = await navigator.mediaDevices.getUserMedia(mediaConstraints)\r\n                    console.log('localStream fetched:')\r\n                    dispatch(setLocalStream(localStream))\r\n\r\n                    break;\r\n\r\n                case events.CREATE_GAME:\r\n                    let gameId = data.gameId\r\n                    dispatch(storeGameId(gameId))\r\n                    sessionStorage.setItem('gameId', gameId);\r\n                    break;\r\n\r\n                case events.JOIN_GAME:\r\n                    let otherUser = data.name\r\n                    console.log(otherUser, \"Joined\")\r\n                    break;\r\n\r\n                case 'TURN':\r\n                    dispatch(setChoice(data.words))\r\n                    break\r\n\r\n                case 'WAIT':\r\n                    dispatch(setSelector(data.name))\r\n                    break\r\n\r\n                case 'wordselect':\r\n                    dispatch(setWordHint(data.hint))\r\n                    break\r\n\r\n                case events.GUESS:\r\n\r\n                    // if the data has points the update the player list\r\n                    if (data.points != 0) {\r\n                        dispatch(updatePoints(data.points, data.clientId))\r\n                    }\r\n                    dispatch(signalChatEvent(data))\r\n                    break;\r\n\r\n                case events.DRAW:\r\n                    dispatch(draw(data))\r\n                    break;\r\n\r\n                case events.SET_REMOTE_CORDS:\r\n                    dispatch(remoteCords(data))\r\n                    break;\r\n\r\n                case 'prevClients':\r\n                    let prevClients = data.clients\r\n                    while (localStream == null || localStream == undefined) {\r\n                        await new Promise(r => setTimeout(r, 100));\r\n                    }\r\n                    for (let player of prevClients) {\r\n                        console.log(\"--> new player\", player)\r\n                        console.log(state)\r\n                        let rtcPeerConnection = new RTCPeerConnection(iceServers)\r\n                        connections[player] = rtcPeerConnection\r\n                        addLocalTracks(rtcPeerConnection)\r\n\r\n                        rtcPeerConnection.ontrack = (event) => {\r\n                            //create an audio element and attach stream to it\r\n                            console.log(event)\r\n                            console.log(\"new client remote stream attached <---\", data.senderId)\r\n                            let audioElement = document.createElement(\"video\")\r\n                            audioElement.autoplay = \"autoplay\"\r\n                            audioElement.srcObject = event.streams[0]\r\n                            audioElement.setAttribute(\"id\", player)\r\n                            document.getElementById('audioEvents').appendChild(audioElement)\r\n                            remoteStreams[player] = event.streams[0]\r\n                        }\r\n                        rtcPeerConnection.onicecandidate = (event) => {\r\n                            if (event.candidate) {\r\n                                let iceCandidatePayload = {\r\n                                    'method': 'sendIceCandidate',\r\n                                    'senderId': state.user.clientId,\r\n                                    'receiverId': player,\r\n                                    label: event.candidate.sdpMLineIndex,\r\n                                    candidate: event.candidate.candidate\r\n                                }\r\n                                dispatch(wsSendMessage(iceCandidatePayload))\r\n                            }\r\n                        }\r\n                        console.log('before offer creation')\r\n                        let offercreation = await async function () {\r\n                            console.log('in offer creation')\r\n                            let sessionDescription\r\n                            try {\r\n                                sessionDescription = await rtcPeerConnection.createOffer()\r\n                                rtcPeerConnection.setLocalDescription(sessionDescription)\r\n                                console.log('offer creation succeeded')\r\n                            } catch (error) {\r\n                                console.log('error in setting session desc')\r\n                            }\r\n\r\n                            let webRTCOfferPayload = {\r\n                                'method': 'webRTCOffer',\r\n                                sdp: sessionDescription,\r\n                                'senderId': state.user.clientId,\r\n                                'receiverId': player\r\n                            }\r\n                            console.log('sending offer websocket')\r\n                            dispatch(wsSendMessage(webRTCOfferPayload))\r\n                        }()\r\n                    }\r\n                    break\r\n\r\n                case events.UPDATE_PLAYER_LIST:\r\n                    console.log(\"updating the playerlist\")\r\n                    dispatch(updatePlayerList(data))\r\n                    break\r\n\r\n                case events.REMOVE_PLAYER:\r\n                    dispatch(removePlayer(data.id))\r\n                    break;\r\n\r\n                case 'end_game':\r\n                    dispatch(endGame(data.playerlist))\r\n                    break;\r\n\r\n                case 'webRTCOffer':\r\n                    console.log('webrtcoffer')\r\n                    console.log(data)\r\n                    let rtcPeerConnection = new RTCPeerConnection(iceServers)\r\n                    connections[data.senderId] = rtcPeerConnection\r\n                    addLocalTracks(rtcPeerConnection)\r\n\r\n                    rtcPeerConnection.ontrack = (event) => {\r\n                        //create an audio element and attach stream to it\r\n                        console.log(event)\r\n                        console.log(\"remote stream attached <---\", data.senderId)\r\n                        let audioElement = document.createElement(\"video\")\r\n                        audioElement.autoplay = \"autoplay\"\r\n                        audioElement.srcObject = event.streams[0]\r\n                        audioElement.setAttribute(\"id\", data.senderId)\r\n                        document.getElementById('audioEvents').appendChild(audioElement)\r\n                        remoteStreams[data.senderId] = event.streams[0]\r\n                    }\r\n\r\n                    rtcPeerConnection.onicecandidate = (event) => {\r\n                        if (event.candidate) {\r\n                            let iceCandidatePayload = {\r\n                                'method': 'sendIceCandidate',\r\n                                'senderId': state.user.clientId,\r\n                                'receiverId': data.senderId,\r\n                                label: event.candidate.sdpMLineIndex,\r\n                                candidate: event.candidate.candidate\r\n                            }\r\n                            dispatch(wsSendMessage(iceCandidatePayload))\r\n                        }\r\n                    }\r\n\r\n\r\n                    rtcPeerConnection.setRemoteDescription(new RTCSessionDescription(data.sdp))\r\n\r\n                    let answerCreation = await async function () {\r\n                        console.log('in offer creation')\r\n                        let sessionDescription\r\n                        try {\r\n                            sessionDescription = await rtcPeerConnection.createAnswer()\r\n                            rtcPeerConnection.setLocalDescription(sessionDescription)\r\n                            console.log('offer creation succeeded')\r\n                        } catch (error) {\r\n                            console.log('error in setting session desc')\r\n                        }\r\n\r\n                        let webRTCAnswerPayload = {\r\n                            'method': 'webRTCAnswer',\r\n                            sdp: sessionDescription,\r\n                            'senderId': state.user.clientId,\r\n                            'receiverId': data.senderId\r\n                        }\r\n                        console.log('sending answer websocket')\r\n                        dispatch(wsSendMessage(webRTCAnswerPayload))\r\n                    }()\r\n                    break\r\n\r\n                case 'webRTCAnswer':\r\n                    connections[data.senderId].setRemoteDescription(data.sdp)\r\n                    break\r\n\r\n                case 'sendIceCandidate':\r\n                    let candidate = new RTCIceCandidate({\r\n                        sdpMLineIndex: data.label,\r\n                        candidate: data.candidate\r\n                    })\r\n                    connections[data.senderId].addIceCandidate(candidate)\r\n                    break\r\n\r\n                default:\r\n                    console.log('other event:' + data.method)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default eventHandler;","import { CLIENT_ID, CONNECT, GAME_ID, JOIN_GAME, NAME, SOCKET, } from '../../utilities/constants';\r\nimport axios from 'axios'\r\n\r\n\r\nexport const createGame = () => (dispatch) => {\r\n    return axios.post(\"https://drawasarus.herokuapp.com/create-game\")\r\n        .then(response => {\r\n            console.log(response.data)\r\n            response = response.data\r\n            dispatch(storeGameId(response.gameId))\r\n            return `game/${response.gameId}`\r\n        })\r\n        .catch(error => {\r\n            return ''\r\n            alert('Unable to start Game. Please try later')\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const joinGame = () => {\r\n    return {\r\n        type: JOIN_GAME\r\n    }\r\n}\r\nexport const connect = () => {\r\n    return {\r\n        type: CONNECT\r\n    }\r\n}\r\n\r\nexport const createSocket = (ws) => {\r\n    return {\r\n        type: SOCKET,\r\n        payload: {\r\n            'ws': ws\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeClientId = (clientId) => {\r\n    return {\r\n        type: CLIENT_ID,\r\n        payload: {\r\n            'clientId': clientId\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeGameId = (gameId) => {\r\n    return {\r\n        type: GAME_ID,\r\n        payload: {\r\n            'gameId': gameId\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeName = (name) => {\r\n    //console.log('dispatching storename')\r\n    return {\r\n        type: NAME,\r\n        payload: {\r\n            'name': name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCreator = () => {\r\n    //console.log('dispatching storename')\r\n    return {\r\n        type: 'set_create'\r\n    }\r\n}","\r\n\r\nimport { UPDATE_POINTS, DRAW, GUESS, REMOVE_PLAYER, UPDATE_PLAYER_LIST, SET_LOCAL_STREAM, SET_REMOTE_STREAM, SET_REMOTE_CORDS } from \"../../utilities/constants\"\r\n\r\nexport const draw = (image) => {\r\n    return {\r\n        type: DRAW,\r\n        payload: {\r\n            'image': image.canvasEvent\r\n        }\r\n    }\r\n}\r\n\r\nexport const signalChatEvent = (chatEvent) => {\r\n    return {\r\n        type: GUESS,\r\n        payload: {\r\n            'chatEvent': chatEvent\r\n        }\r\n    }\r\n}\r\n\r\nexport const updatePlayerList = (updatePlayers) => {\r\n\r\n    return {\r\n        type: UPDATE_PLAYER_LIST,\r\n        payload: updatePlayers\r\n    }\r\n}\r\n\r\nexport const updatePoints = (points, id) => {\r\n    return {\r\n        type: UPDATE_POINTS,\r\n        payload: {\r\n            'points': points,\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const removePlayer = (id) => {\r\n    return {\r\n        type: REMOVE_PLAYER,\r\n        payload: {\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const remoteCords = (data) => {\r\n    return {\r\n        type: SET_REMOTE_CORDS,\r\n        payload: {\r\n            'cords': data.cords\r\n        }\r\n    }\r\n}\r\n\r\nexport const setLocalStream = (stream) => {\r\n    return {\r\n        type: SET_LOCAL_STREAM,\r\n        payload: {\r\n            'stream': stream\r\n        }\r\n    }\r\n}\r\n\r\nexport const setRemoteStream = (stream, id) => {\r\n    return {\r\n        type: SET_REMOTE_STREAM,\r\n        payload: {\r\n            'stream': stream,\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const setChoice = (words) => {\r\n    return {\r\n        type: 'CHOICE',\r\n        payload: {\r\n            'words': words\r\n        }\r\n    }\r\n}\r\n\r\nexport const setSelector = (name) => {\r\n    return {\r\n        type: 'SELECTOR',\r\n        payload: {\r\n            'name': name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setWordHint = (hint) => {\r\n    return {\r\n        type: 'HINT',\r\n        payload: {\r\n            'hint': hint\r\n        }\r\n    }\r\n}\r\n\r\nexport const endGame = (playerlist) => {\r\n    return {\r\n        type: 'end_game',\r\n        payload: {\r\n            'playerlist': playerlist\r\n        }\r\n    }\r\n}","import eventHandler from \"../../utilities/eventHandler\"\r\n\r\nconst { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } = require(\"../../utilities/constants\")\r\nconst { wsConnect, wsDisconnect } = require(\"../actions/socketActions\")\r\n\r\n\r\nconst socketMiddleware = () => {\r\n\r\n    let socket = null\r\n    let host = ''\r\n\r\n    const onMessage = (store) => (event) => {\r\n        eventHandler(event, store.dispatch, store.getState())\r\n\r\n    }\r\n\r\n    const onOpen = (store) => (event) => {\r\n        console.log(\"web socket connection opened\")\r\n    }\r\n\r\n    const onClose = (store) => (event) => {\r\n        console.log(\"web socket connection closed\")\r\n    }\r\n\r\n    // middleware\r\n    return store => next => action => {\r\n\r\n        switch (action.type) {\r\n\r\n            case WS_CONNECT:\r\n\r\n                console.log('middle ware', WS_CONNECT)\r\n                if (socket != null) {\r\n                    socket.close()\r\n                    host = ''\r\n                }\r\n                socket = new WebSocket(action.host)\r\n\r\n                // register handlers\r\n                socket.onmessage = onMessage(store)\r\n                socket.onclose = onClose(store)\r\n                socket.onopen = onOpen(store)\r\n                break;\r\n\r\n            case WS_DISCONNECT:\r\n\r\n                console.log('reducer', WS_DISCONNECT)\r\n                if (socket != null) {\r\n                    socket.close()\r\n                }\r\n                socket = null\r\n                host = ''\r\n                break;\r\n            case WS_SEND_MESSAGE:\r\n\r\n                console.log(\"sending the message\", action.payload)\r\n                socket.send(JSON.stringify(action.payload))\r\n                break;\r\n            default:\r\n                console.log(\"default action\", action.type, \" not found\")\r\n        }\r\n\r\n\r\n        return next(action)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default socketMiddleware","import { DRAW, UPDATE_POINTS, ADD_PLAYER, SET_REMOTE_CORDS, REMOVE_PLAYER, SET_LOCAL_STREAM, SET_REMOTE_STREAM, UPDATE_PLAYER_LIST } from \"../../utilities/constants\"\r\n\r\n\r\n\r\n\r\nconst intialState = {\r\n    players: [],\r\n    localStream: null,\r\n    remoteCords: [0, 0, 0, 0],\r\n    receivedDrawEvent: false,\r\n    image: null,\r\n    choice: null,\r\n    selector: null,\r\n    hint: null,\r\n    playerlist: null//will be populated on end_game event\r\n}\r\n\r\nexport default function gameReducer(state = intialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case UPDATE_PLAYER_LIST:\r\n            return {\r\n                ...state,\r\n                players: action.payload.playerlist\r\n            }\r\n\r\n        case UPDATE_POINTS:\r\n            return {\r\n                ...state,\r\n                players: state.players.map(player => {\r\n\r\n                    if (player.id == action.payload.id) {\r\n                        player.points++;\r\n                    }\r\n\r\n                    return player\r\n                })\r\n            }\r\n\r\n        case REMOVE_PLAYER:\r\n            return {\r\n                ...state,\r\n                players: state.players.filter(player => player.id != action.payload.id)\r\n            }\r\n\r\n        case DRAW:\r\n            return {\r\n                ...state,\r\n                image: action.payload.image\r\n            }\r\n\r\n        case SET_REMOTE_CORDS:\r\n            return {\r\n                ...state,\r\n                remoteCords: action.payload.cords,\r\n                receivedDrawEvent: !state.receivedDrawEvent\r\n            }\r\n\r\n        case SET_LOCAL_STREAM:\r\n            return {\r\n                ...state,\r\n                localStream: action.payload.stream\r\n            }\r\n\r\n        case SET_REMOTE_STREAM:\r\n            var modifiedPlayers = JSON.parse(JSON.stringify(state.players))\r\n            console.log('setremotestream game reducer')\r\n            console.log(modifiedPlayers)\r\n            modifiedPlayers.forEach((player) => {\r\n                if (player.id == action.payload.id) {\r\n                    player.remoteStream = action.payload.stream\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                players: modifiedPlayers\r\n            }\r\n\r\n        case 'CHOICE':\r\n            return {\r\n                ...state,\r\n                choice: action.payload.words\r\n            }\r\n\r\n        case 'SELECTOR':\r\n            return {\r\n                ...state,\r\n                selector: action.payload.name\r\n            }\r\n\r\n        case 'HINT':\r\n            return {\r\n                ...state,\r\n                hint: JSON.parse(JSON.stringify(action.payload.hint))\r\n            }\r\n\r\n        case 'end_game':\r\n            return {\r\n                ...state,\r\n                playerlist: action.payload.playerlist\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport reduxThunk from 'redux-thunk'\r\nimport socketMiddleware from \"./middleware/middleware\"\r\nimport gameReducer from \"./reducers/gameReducers\"\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    game: gameReducer\r\n})\r\n\r\nconst middleware = [\r\n    reduxThunk,\r\n    socketMiddleware()\r\n]\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useState } from 'react'\r\nimport \"./Player.css\"\r\n\r\nfunction Player(props) {\r\n\r\n\r\n    const [mute, setmute] = useState(false)\r\n\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            localStream: state.game.localStream\r\n\r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n    const inverse = () => {\r\n\r\n\r\n        // need to get access to the audioEvents in the dom\r\n        // so we can change the volume\r\n        // this is a hack\r\n        const audioEvents = document.getElementById('audioEvents')\r\n        console.log(audioEvents)\r\n        let childNodes = audioEvents.childNodes;\r\n\r\n        console.log(\"clicked element id\", props.id)\r\n\r\n        if (state.clientId == props.id && state.localStream != null) {\r\n            console.log(\"self mute\")\r\n            if (mute) {\r\n                state.localStream.getAudioTracks().forEach(track => track.enabled = true)\r\n            }\r\n            else {\r\n                state.localStream.getAudioTracks().forEach(track => track.enabled = false)\r\n            }\r\n            setmute(!mute)\r\n            return;\r\n        }\r\n\r\n\r\n        // iterate over the child nodes\r\n        childNodes.forEach((child) => {\r\n\r\n            // setmute only if the child is the one we are looking for\r\n            if (child.getAttribute(\"id\") == props.id) {\r\n\r\n                console.log(\"action on\", props.name)\r\n                const remoteStream = child.srcObject\r\n\r\n\r\n\r\n                if (remoteStream != null) {\r\n                    // console.log(\"tracks\", child.srcObject.getAudioTracks())\r\n                    if (mute) {\r\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = true)\r\n                    }\r\n                    else {\r\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = false)\r\n                    }\r\n                    \r\n                    setmute(!mute)\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"player\" style={{ color: props.id == state.clientId ? 'red' : '' }}>\r\n            <div>{props.name}</div>\r\n            <div>{props.points}</div>\r\n\r\n            {mute ?\r\n                <span className=\"material-icons\" onClick={inverse}>volume_off</span> :\r\n                <span className=\"material-icons\" onClick={inverse}>volume_up</span>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Player from './Player'\r\nimport \"./LeaderBoard.css\"\r\n\r\nfunction LeaderBoard() {\r\n\r\n\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const players = useSelector(state => state.game.players)\r\n\r\n\r\n    const listItems = players.map((player) => <Player key={player.id} id={player.id} name={player.name} points={player.points} />);\r\n\r\n\r\n    return (\r\n        <div className=\"leader-board-container\">\r\n            {listItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeaderBoard\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { wsSendMessage } from \"../Redux/actions/socketActions\";\r\nimport events from '../utilities/constants'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { remoteCords } from \"../Redux/actions/gameActions\";\r\n\r\n\r\n\r\nlet x1, y1, x2, y2;\r\n\r\n\r\nconst Canvas = (props) => {\r\n\r\n    let canDraw = props.canDraw\r\n    const [isDrawing, setIsDrawing] = useState(false);\r\n    const canvasRef = useRef(null);\r\n    const contextRef = useRef(null);\r\n\r\n    const dispatch = useDispatch()\r\n    let interval;\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            gameId: state.user.gameId,\r\n            remoteCords: state.game.remoteCords,\r\n            image: state.game.image,\r\n            receivedDrawEvent: state.game.receivedDrawEvent\r\n        }\r\n    })\r\n\r\n    console.log(\"remote\", state.remoteCords)\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        canvas.width = parseInt(getComputedStyle(document.querySelector('#canvasElement')).getPropertyValue('width'))\r\n        canvas.height = window.innerHeight;\r\n        canvas.style.width = `100%`;\r\n        canvas.style.height = `100%`;\r\n        const context = canvas.getContext(\"2d\");\r\n        //context.scale(2, 2);\r\n        context.lineCap = \"round\";\r\n        context.strokeStyle = \"black\";\r\n        context.lineWidth = 2;\r\n        contextRef.current = context;\r\n\r\n        // window.onresize = () => {\r\n\r\n        //     console.log(\"resize\")\r\n        //     const canvas = canvasRef.current;\r\n        //     canvas.style.width = '100%';\r\n        //     canvas.style.height = '100%';\r\n        //     canvas.width = canvas.offsetWidth;\r\n        //     canvas.height = canvas.offsetHeight;\r\n        // }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"received new cords\", state.remoteCords)\r\n        const [oldx, oldy, newx, newy] = state.remoteCords;\r\n        drawLine(oldx, oldy, newx, newy)\r\n    }, [state.receivedDrawEvent])\r\n\r\n    const drawLine = (x1, y1, x2, y2) => {\r\n\r\n        contextRef.current.beginPath();\r\n        contextRef.current.moveTo(x1, y1);\r\n        contextRef.current.lineTo(x2, y2);\r\n        contextRef.current.stroke()\r\n        contextRef.current.closePath();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (state.image != null) {\r\n            // var image = new Image();\r\n            // image.src = state.image;\r\n            // contextRef.current.drawImage(image, 0, 0)\r\n        }\r\n\r\n\r\n    }, [state.image])\r\n\r\n\r\n\r\n    //https://stackoverflow.com/questions/43955925/html5-responsive-canvas-mouse-position-and-resize\r\n    const getMousePosition = (e) => {\r\n        const canvas = canvasRef.current;\r\n        var mouseX = e.offsetX * canvas.width / canvas.clientWidth | 0;\r\n        var mouseY = e.offsetY * canvas.height / canvas.clientHeight | 0;\r\n        return { x: mouseX, y: mouseY };\r\n    }\r\n\r\n    const startDrawing = ({ nativeEvent }) => {\r\n        if (!canDraw) return\r\n        contextRef.current.beginPath();\r\n\r\n\r\n\r\n        x1 = getMousePosition(nativeEvent).x\r\n        y1 = getMousePosition(nativeEvent).y\r\n\r\n        contextRef.current.moveTo(x1, y1);\r\n        console.log('moved to ' + x1 + \", \" + y1)\r\n        setIsDrawing(true);\r\n    };\r\n\r\n    const finishDrawing = () => {\r\n        contextRef.current.closePath();\r\n        setIsDrawing(false);\r\n        clearInterval(interval)\r\n    };\r\n\r\n    const draw = ({ nativeEvent }) => {\r\n        if (!isDrawing) {\r\n            return;\r\n        }\r\n\r\n        x2 = getMousePosition(nativeEvent).x\r\n        y2 = getMousePosition(nativeEvent).y\r\n\r\n        console.log(x1, y1, x2, y2)\r\n\r\n        const payload = {\r\n            'method': events.SET_REMOTE_CORDS,\r\n            'gameId': state.gameId,\r\n            'clientId': state.clientId,\r\n            cords: [x1, y1, x2, y2]\r\n        }\r\n\r\n        dispatch(wsSendMessage(payload))\r\n\r\n        // interval = setInterval(() => {\r\n        //     dispatch(wsSendMessage(payload))\r\n        // }, 150)\r\n\r\n\r\n\r\n        contextRef.current.lineTo(x2, y2);\r\n        //console.log('line to ' + offsetX + \", \" + offsetY)\r\n        contextRef.current.stroke();\r\n        x1 = x2;\r\n        y1 = y2;\r\n    };\r\n\r\n    let canvasStyle = {\r\n        width: `100%`\r\n    }\r\n    return (\r\n        <canvas\r\n            onMouseDown={startDrawing}\r\n            onMouseUp={finishDrawing}\r\n            onMouseMove={draw}\r\n            ref={canvasRef}\r\n            id=\"canvasElement\"\r\n            style={canvasStyle}\r\n            disabled\r\n        />\r\n    );\r\n}\r\n\r\nexport default Canvas\r\n","import React, { Component, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\r\nimport events from '../../utilities/constants'\r\nimport './Chat.css'\r\n\r\n\r\nconst Chat = () => {\r\n    let [mic, flipMic] = useState(false);\r\n\r\n    let dispatch = useDispatch()\r\n    let state = useSelector(state => {\r\n        return {\r\n            clientId: state.user.clientId,\r\n            name: state.user.name,\r\n            gameId: state.user.gameId,\r\n            chatEvent: state.user.chatEvent\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('chatEvent:')\r\n        console.log(state.chatEvent)\r\n        addChatMessage(state.chatEvent)\r\n    }, [state.chatEvent])\r\n\r\n    const sendMessage = (message) => {\r\n        if (message === null) {\r\n            message = document.getElementsByClassName('textContainer')[0].value\r\n        }\r\n\r\n        message = message.trim()\r\n        if (message === '') return\r\n        console.log('id:' + state.clientId + \" name:\" + state.name + 'gameId:' + state.gameId)\r\n        message = {\r\n            'method': events.GUESS,\r\n            'guessWord': message,\r\n            'clientId': state.clientId,\r\n            'name': state.name,\r\n            'gameId': state.gameId\r\n        }\r\n\r\n        dispatch(wsSendMessage(message))\r\n        document.getElementsByClassName('textContainer')[0].value = ''\r\n    }\r\n\r\n    const addChatMessage = (message) => {\r\n        if (!message) {\r\n            console.log(\"Invalid message\")\r\n            return\r\n        }\r\n        console.log('addChatMessage message:')\r\n        console.log(message)\r\n        var messageDiv = createMessage(message)\r\n        document.getElementById(\"chatMessages\").innerHTML += messageDiv\r\n        let containerElement = document.getElementById('outerContainer')\r\n        containerElement.scrollTop = containerElement.scrollHeight\r\n    }\r\n\r\n    const createMessage = (message) => {\r\n        var isMine = message.clientId === state.clientId\r\n        console.log(message)\r\n        if (message.points) {\r\n            let str = (isMine ? 'You' : message.name) + ' got it right'\r\n            return (`<li class=notif>${str}</li>`)\r\n        }\r\n        var liClassName = isMine ? \"mine\" : \"their\"\r\n        let nameElement = '';\r\n        if (!isMine) {\r\n            nameElement = `<span class='senderName'>${(message.name)}</span>`;\r\n        }\r\n\r\n        return (`<li class='message ${liClassName}'>\r\n        <div class='messageContainer'>\r\n            ${nameElement}\r\n            <span class='messageBody'>\r\n                ${message.guessWord}\r\n            </span>\r\n        </div>\r\n    </li>`)\r\n    }\r\n\r\n    const handleMicFlip = () => {\r\n        flipMic(!mic)\r\n    }\r\n\r\n    let micElement = mic ?\r\n        <span className=\"material-icons micButton\"\r\n            onClick={() => handleMicFlip()}>mic</span> :\r\n        <span className=\"material-icons micButton\"\r\n            onClick={() => handleMicFlip()}>mic_off</span>\r\n\r\n    return (\r\n        <div className=\"outerContainer\" id=\"outerContainer\">\r\n            <div className=\"chatContainer\">\r\n                <div id=\"chatMessages\" className=\"chatMessages\">\r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <div className=\"footerContainer\">\r\n                    <input className=\"textContainer\"\r\n                        id=\"textInputContainer\"\r\n                        placeholder={'Type a message...'}\r\n                        onKeyPress={(event) => event.key === 'Enter' ? sendMessage(event.target.value) : null}\r\n                    />\r\n                    <i className=\"material-icons sendButton\"\r\n                        onClick={() => sendMessage(null)}>send</i>\r\n                    {micElement}\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat","import React, { Component } from 'react';\r\nimport './modal.css'\r\nconst Modal = ({ handleClose, show, children }) => {\r\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <section className='modal-main'>\r\n                {children}\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\nexport default Modal","import React, { useEffect, useState } from 'react'\r\nimport LeaderBoard from '../../components/LeaderBoard'\r\nimport Canvas from '../../components/canvas'\r\nimport Chat from '../../components/Chat/Chat'\r\nimport Modal from '../../components/modal'\r\nimport './gamePage.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport events from '../../utilities/constants'\r\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\r\nimport { setWordHint } from '../../Redux/actions/gameActions'\r\n\r\nfunction GamePage() {\r\n\r\n    let history = useHistory()\r\n    let dispatch = useDispatch()\r\n\r\n    let [childrenContent, setChildrenContent] = useState(null)\r\n    let [canDraw, flipDrawState] = useState(false)\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            gameId: state.user.gameId,\r\n            clientId: state.user.clientId,\r\n            isCreator: state.user.isCreator,\r\n            choice: state.game.choice,\r\n            selector: state.game.selector,\r\n            hint: state.game.hint,\r\n            playerlist: state.game.playerlist\r\n        }\r\n    })\r\n\r\n    const [showModal, setModal] = useState(state.isCreator)\r\n\r\n\r\n    useEffect(() => {\r\n        if (state.choice !== null) {\r\n            setModal(true)\r\n            console.log(state.choice)\r\n\r\n            setChildrenContent(<div>\r\n                <p>choose a word</p>\r\n                {state.choice.map((word) => {\r\n                    return <button key={word} onClick={() => { handleChoiceSelection(word) }}>{word}</button>\r\n                })}\r\n            </div>)\r\n        }\r\n    }, [state.choice])\r\n\r\n    useEffect(() => {\r\n        if (state.selector !== null) {\r\n            dispatch(setWordHint(null))\r\n            flipDrawState(false)\r\n            setModal(true)\r\n            setChildrenContent(<div>\r\n                <p>Please wait {state.selector} is choosing a word</p>\r\n            </div>)\r\n        }\r\n    }, [state.selector])\r\n\r\n    useEffect(() => {\r\n        if (state.gameId === null) {\r\n            moveToHomePage()\r\n        }\r\n    }, [state.gameId])\r\n\r\n    useEffect(() => {\r\n        setChildrenContent(<div>Click here to copy the game code\r\n            <span className=\"material-icons copyButton\" onClick={copyGameCode}>content_copy</span>\r\n            <button onClick={handleStartGameClose}>Start Game!</button></div>)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('hint useeffect')\r\n        if (state.hint !== null) {\r\n            console.log('hint:', state.hint)\r\n            setModal(false)\r\n        }\r\n    }, [state.hint])\r\n\r\n    useEffect(() => {\r\n        if (state.playerlist !== null) {\r\n            let playerlist = state.playerlist\r\n            playerlist.sort((a, b) => (a.points > b.points) ? -1 : 1)\r\n            console.log('playlist')\r\n            console.log(playerlist)\r\n            console.log(typeof playerlist)\r\n            setModal(true)\r\n            setChildrenContent(<div>\r\n                <p>Leader Board</p>\r\n                {state.playerlist.map((entry) => {\r\n                    return (<div key={entry.id}>\r\n                        <p>{entry.name}</p>\r\n                        <p>{entry.points}</p>\r\n                    </div>)\r\n                })}\r\n                <p>Game Ended!!!</p>\r\n            </div>)\r\n\r\n        }\r\n    }, [state.playerlist])\r\n\r\n    function moveToHomePage() {\r\n        history.push('/')\r\n    }\r\n\r\n    function handleChoiceSelection(word) {\r\n        let choicePayload = {\r\n            'method': 'choice',\r\n            'word': word,\r\n            'clientId': state.clientId,\r\n            'gameId': state.gameId\r\n        }\r\n        setModal(false)\r\n        dispatch(wsSendMessage(choicePayload))\r\n        flipDrawState(true)\r\n    }\r\n\r\n    function handleStartGameClose() {\r\n        let startGamePayload = {\r\n            'method': events.START_GAME,\r\n            gameId: state.gameId\r\n        }\r\n        setModal(false)\r\n        dispatch(wsSendMessage(startGamePayload))\r\n\r\n\r\n    }\r\n\r\n    function copyGameCode() {\r\n        const gameCode = window.location.pathname.split(\"/\")[2]\r\n        console.log(gameCode)\r\n        navigator.clipboard.writeText(gameCode)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='gamePageContainer'>\r\n            <div className=\"col-sm-2 leaderBoard\" >\r\n                <LeaderBoard />\r\n            </div>\r\n            <div className=\"col-sm-8 canvas\">\r\n                <Canvas canDraw={canDraw} />\r\n            </div>\r\n            <div className=\"col-sm-2 chat\" >\r\n                <Chat />\r\n            </div>\r\n            <div id=\"audioEvents\">\r\n\r\n            </div>\r\n            <Modal id=\"modal\" show={showModal} children={childrenContent} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GamePage\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { wsConnect } from '../../Redux/actions/socketActions';\r\nimport { createGame, storeName, storeGameId, setCreator } from '../../Redux/actions/userActions';\r\nimport axios from 'axios';\r\nimport './LandingPage.css'\r\n\r\nfunction LandingPage() {\r\n\r\n\r\n    console.log(\"render landing\")\r\n\r\n    const [join, setJoin] = React.useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            gameId: state.user.gameId,\r\n            name: state.user.name,\r\n            isClientCreated: state.user.isClientCreated,\r\n            isGameCreated: state.user.isGameCreated\r\n        }\r\n    })\r\n\r\n\r\n    const createButtonHandler = () => {\r\n        // first send a get request to create game\r\n        // store the gameid and client id redux thunk\r\n        dispatch(setCreator())\r\n        dispatch(storeName(document.getElementById('name').value))\r\n        dispatch(createGame())\r\n            .then(path => {\r\n                if (path != '') {\r\n                    dispatch(wsConnect('wss://drawasarus.herokuapp.com/'))\r\n                    history.push(path)\r\n                }\r\n            })\r\n    }\r\n\r\n    const joinButtonHandler = async () => {\r\n        dispatch(storeName(document.getElementById('name').value))\r\n        let gameId = document.getElementById('gameId').value\r\n        let headers = {\r\n            \"gameId\": gameId\r\n        }\r\n        let resp = await axios.get(\"https://drawasarus.herokuapp.com/isValidGame\", { headers })\r\n        console.log(resp.data)\r\n        if (!resp || !resp.data || !resp.data['valid']) {\r\n            alert(\"Game id is Invalid. Please check again\")\r\n            return\r\n        }\r\n\r\n        dispatch(storeGameId(gameId))\r\n        dispatch(wsConnect('wss://drawasarus.herokuapp.com/'))\r\n        history.push('game/' + gameId)\r\n    }\r\n\r\n    return (\r\n        <div className=\"LandingPage\" >\r\n            <div className=\"well\">\r\n                <div className=\"row selectors \">\r\n                    <input type=\"text\" className=\"create\" defaultValue=\"Create\" readOnly onClick={() => { setJoin(false) }}></input>\r\n                    <input type=\"text\" className=\"join\" defaultValue=\"Join\" readOnly onClick={() => { setJoin(true) }}></input>\r\n                </div>\r\n\r\n                {join ?\r\n                    <div className=\"row joinCell\">\r\n                        <div className=\"input-container\">\r\n\r\n                            <input type=\"text\" id=\"name\" placeholder=\"Enter Your Name\" />\r\n\r\n\r\n                            <input type=\"text\" id=\"game\" placeholder=\"Enter Game Id\" />\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"button\" value=\"Join\" onClick={joinButtonHandler} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    :\r\n                    <div className=\"row createCell\">\r\n                        <input type=\"text\" id=\"name\" placeholder=\"Enter Your Name\" />\r\n                        <input type=\"button\" value=\"Create\" onClick={createButtonHandler} />\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport GamePage from './Pages/GamePage/GamePage'\r\nimport LandingPage from './Pages/LandingPage/LandingPage'\r\n\r\nfunction Playground(props) {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <LandingPage props={props} />\r\n            </Route>\r\n            <Route path=\"/game/:code\">\r\n                <GamePage />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Playground\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport store from './Redux/store';\r\nimport Playground from './Playground';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div className=\"playGroundContainer\">\r\n        <Playground props={store} />\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}