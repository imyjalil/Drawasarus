{"version":3,"sources":["utilities/constants.js","Redux/actions/socketActions.js","Redux/reducers/userReducer.js","utilities/eventHandler.js","Redux/actions/userActions.js","Redux/actions/gameActions.js","Redux/middleware/middleware.js","Redux/reducers/gameReducers.js","Redux/store.js","components/Player.js","components/LeaderBoard.js","components/canvas.js","components/Chat/Chat.js","components/modal.js","Pages/GamePage/GamePage.js","Pages/LandingPage/LandingPage.js","Playground.js","index.js"],"names":["module","exports","JOIN_GAME","CREATE_GAME","DRAW","GUESS","WORD_SELECT","CONNECT","SOCKET","GAME_ID","CLIENT_ID","NAME","WS_CONNECT","WS_DISCONNECT","WS_SEND_MESSAGE","UPDATE_PLAYER_LIST","REMOVE_PLAYER","MUTE","UNMUTE","SET_LOCAL_STREAM","SET_REMOTE_STREAM","SET_REMOTE_CORDS","START_GAME","UPDATE_POINTS","DRAW_LINES","wsConnect","host","type","wsDisconnect","wsSendMessage","payload","console","log","initalState","gameId","name","clientId","chatEvent","isCreator","localStream","storeClientId","storeGameId","storeName","removePlayer","id","remoteCords","data","cords","setWordHint","hint","connections","remoteStreams","mediaConstraints","audio","video","iceServers","urls","addLocalTracks","rtcPeerConnection","getTracks","forEach","track","addTrack","eventHandler","event","dispatch","state","a","JSON","parse","method","events","joinPayload","user","navigator","mediaDevices","getUserMedia","stream","sessionStorage","setItem","otherUser","stringify","lines","words","points","image","canvasEvent","prevClients","clients","undefined","Promise","r","setTimeout","player","RTCPeerConnection","ontrack","senderId","audioElement","document","createElement","autoplay","srcObject","streams","setAttribute","getElementById","appendChild","onicecandidate","candidate","iceCandidatePayload","label","sdpMLineIndex","createOffer","sessionDescription","setLocalDescription","webRTCOfferPayload","sdp","updatePlayers","playerlist","setRemoteDescription","RTCSessionDescription","createAnswer","webRTCAnswerPayload","RTCIceCandidate","addIceCandidate","require","socketMiddleware","socket","store","next","action","close","WebSocket","onmessage","getState","onMessage","onclose","onopen","send","intialState","players","receivedDrawEvent","choice","selector","rootReducer","combineReducers","ws","game","map","filter","modifiedPlayers","remoteStream","middleware","reduxThunk","createStore","compose","applyMiddleware","Player","props","useState","mute","setmute","useSelector","inverse","audioEvents","childNodes","getAudioTracks","enabled","child","getAttribute","className","style","color","onClick","LeaderBoard","x1","y1","x2","y2","useDispatch","listItems","Canvas","canDraw","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","useEffect","canvas","current","width","parseInt","getComputedStyle","querySelector","getPropertyValue","height","window","innerHeight","context","getContext","lineCap","strokeStyle","lineWidth","oldx","oldy","newx","newy","getItem","cord","drawLine","removeItem","beginPath","moveTo","lineTo","stroke","closePath","getMousePosition","e","x","offsetX","clientWidth","y","offsetY","clientHeight","onMouseDown","nativeEvent","onMouseUp","clearInterval","interval","onMouseMove","ref","disabled","Chat","mic","flipMic","addChatMessage","sendMessage","message","getElementsByClassName","value","trim","messageDiv","createMessage","innerHTML","containerElement","scrollTop","scrollHeight","isMine","str","liClassName","nameElement","guessWord","handleMicFlip","micElement","placeholder","onKeyPress","key","target","Modal","handleClose","show","children","showHideClassName","GamePage","history","useHistory","childrenContent","setChildrenContent","flipDrawState","showModal","setModal","handleStartGameClose","startGamePayload","copyGameCode","gameCode","location","pathname","split","clipboard","writeText","word","choicePayload","handleChoiceSelection","push","sort","b","entry","LandingPage","React","join","setJoin","joinButtonHandler","isClientCreated","isGameCreated","headers","axios","get","resp","alert","defaultValue","readOnly","post","then","response","catch","error","path","Playground","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.70e10eaf.chunk.js","sourcesContent":["\nmodule.exports = {\n    JOIN_GAME: 'join',\n    CREATE_GAME: 'create',\n    DRAW: 'draw',\n    GUESS: 'guess',\n    WORD_SELECT: 'wordselect',\n    CONNECT: 'connect',\n    SOCKET: 'socket',\n    GAME_ID: 'gameId',\n    CLIENT_ID: 'clientId',\n    NAME: 'name',\n    WS_CONNECT: 'ws_connect',\n    WS_DISCONNECT: 'ws_disconnect',\n    WS_SEND_MESSAGE: 'ws_message',\n    UPDATE_PLAYER_LIST: 'update_player_list',\n    REMOVE_PLAYER: 'remove_player',\n    MUTE: 'mute',\n    UNMUTE: 'unmute',\n    SET_LOCAL_STREAM: 'localstream',\n    SET_REMOTE_STREAM: 'remotestream',\n    SET_REMOTE_CORDS: 'cords',\n    START_GAME: 'start_game',\n    UPDATE_POINTS: 'update_points',\n    DRAW_LINES: 'draw_lines'\n}","import { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } from \"../../utilities/constants\"\n\n\nexport const wsConnect = (host) => {\n    return {\n        type: WS_CONNECT,\n        host: host\n    }\n}\n\nexport const wsDisconnect = (host) => {\n    return {\n        type: WS_DISCONNECT,\n        host: host\n    }\n}\n\nexport const wsSendMessage = (payload) => {\n    console.log('dispatching sendmessage')\n    return {\n        type: WS_SEND_MESSAGE,\n        payload: payload\n    }\n}\n","import { CLIENT_ID, GAME_ID, NAME, SOCKET, GUESS } from \"../../utilities/constants\";\n\nconst initalState = {\n    gameId: null,\n    name: '',\n    clientId: '',\n    chatEvent: null,\n    isCreator: false\n}\n\nexport default function userReducer(state = initalState, action) {\n\n    switch (action.type) {\n\n\n        case SOCKET:\n            return {\n                ...state,\n                ws: action.payload['ws']\n            }\n\n        case GAME_ID:\n            return {\n                ...state,\n                gameId: action.payload['gameId']\n            }\n\n        case CLIENT_ID:\n            return {\n                ...state,\n                clientId: action.payload['clientId']\n            }\n\n        case NAME:\n            return {\n                ...state,\n                name: action.payload['name']\n            }\n\n        case GUESS:\n            console.log(action)\n            return {\n                ...state,\n                chatEvent: action.payload['chatEvent']\n            }\n\n        case 'set_create':\n            return {\n                ...state,\n                isCreator: true\n            }\n\n        default:\n            return state\n    }\n}","import { storeClientId, storeGameId } from '../Redux/actions/userActions';\nimport { remoteCords,removePlayer, signalChatEvent, updatePoints, updatePlayerList, draw, setChoice, setSelector, setWordHint, endGame, setLocalStream } from '../Redux/actions/gameActions';\nimport { wsSendMessage } from '../Redux/actions/socketActions';\nimport events from './constants';\n\nlet localStream;\nlet connections = {};\nlet remoteStreams = {};\n\nconst mediaConstraints = {\n    audio: true,\n    video: false\n}\n\nconst iceServers = {\n    iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'stun:stun1.l.google.com:19302' },\n        { urls: 'stun:stun2.l.google.com:19302' },\n        { urls: 'stun:stun3.l.google.com:19302' },\n        { urls: 'stun:stun4.l.google.com:19302' },\n    ],\n}\n\nfunction addLocalTracks(rtcPeerConnection) {\n    console.log('addLocalTracks:')\n    console.log(localStream)\n    localStream.getTracks().forEach((track) => {\n        rtcPeerConnection.addTrack(track, localStream)\n    })\n}\n\nconst eventHandler = async (event, dispatch, state) => {\n\n    console.log('event received:')\n    if (event && event.data) {\n        let data = JSON.parse(event.data)\n\n        console.log(data)\n        if (data && data.method) {\n            console.log('In event, handler event type:' + data.method)\n\n            switch (data.method) {\n\n                case events.CONNECT:\n                    let clientId = data.clientId;\n                    console.log(\"dispatch client id\")\n                    dispatch(storeClientId(clientId))\n\n                    let joinPayload = {\n                        'method': events.JOIN_GAME,\n                        'clientId': clientId,\n                        'gameId': state.user.gameId,\n                        'name': state.user.name\n                    }\n\n                    dispatch(wsSendMessage(joinPayload))\n\n                    localStream = await navigator.mediaDevices.getUserMedia(mediaConstraints)\n                    console.log('localStream fetched:')\n                    dispatch(setLocalStream(localStream))\n                    \n                    \n\n                    break;\n\n                case events.CREATE_GAME:\n                    let gameId = data.gameId\n                    dispatch(storeGameId(gameId))\n                    sessionStorage.setItem('gameId', gameId);\n                    break;\n\n                case events.JOIN_GAME:\n                    let otherUser = data.name\n                    console.log(otherUser, \"Joined\")\n                    break;\n                \n                case events.DRAW_LINES:\n                    \n                    sessionStorage.setItem(\"currentState\", JSON.stringify(data.lines))\n                    console.log(\"---> storing lines\")\n                    break;\n\n                case 'TURN':\n                    dispatch(setChoice(data.words))\n                    break\n\n                case 'WAIT':\n                    dispatch(setSelector(data.name))\n                    break\n\n                case 'wordselect':\n                    dispatch(setWordHint(data.hint))\n                    break\n\n                case events.GUESS:\n\n                    // if the data has points the update the player list\n                    if (data.points != 0) {\n                        dispatch(updatePoints(data.points, data.clientId))\n                    }\n                    dispatch(signalChatEvent(data))\n                    break;\n\n                case events.DRAW:\n                    dispatch(draw(data))\n                    break;\n\n                case events.SET_REMOTE_CORDS:\n                    dispatch(remoteCords(data))\n                    break;\n\n                case 'prevClients':\n                    let prevClients = data.clients\n                    while (localStream == null || localStream == undefined) {\n                        await new Promise(r => setTimeout(r, 100));\n                    }\n                    for (let player of prevClients) {\n                        console.log(\"--> new player\", player)\n                        console.log(state)\n                        let rtcPeerConnection = new RTCPeerConnection(iceServers)\n                        connections[player] = rtcPeerConnection\n                        addLocalTracks(rtcPeerConnection)\n\n                        rtcPeerConnection.ontrack = (event) => {\n                            //create an audio element and attach stream to it\n                            console.log(event)\n                            console.log(\"new client remote stream attached <---\", data.senderId)\n                            let audioElement = document.createElement(\"video\")\n                            audioElement.autoplay = \"autoplay\"\n                            audioElement.srcObject = event.streams[0]\n                            audioElement.setAttribute(\"id\", player)\n                            document.getElementById('audioEvents').appendChild(audioElement)\n                            remoteStreams[player] = event.streams[0]\n                        }\n                        rtcPeerConnection.onicecandidate = (event) => {\n                            if (event.candidate) {\n                                let iceCandidatePayload = {\n                                    'method': 'sendIceCandidate',\n                                    'senderId': state.user.clientId,\n                                    'receiverId': player,\n                                    label: event.candidate.sdpMLineIndex,\n                                    candidate: event.candidate.candidate\n                                }\n                                dispatch(wsSendMessage(iceCandidatePayload))\n                            }\n                        }\n                        console.log('before offer creation')\n                        let offercreation = await async function () {\n                            console.log('in offer creation')\n                            let sessionDescription\n                            try {\n                                sessionDescription = await rtcPeerConnection.createOffer()\n                                rtcPeerConnection.setLocalDescription(sessionDescription)\n                                console.log('offer creation succeeded')\n                            } catch (error) {\n                                console.log('error in setting session desc')\n                            }\n\n                            let webRTCOfferPayload = {\n                                'method': 'webRTCOffer',\n                                sdp: sessionDescription,\n                                'senderId': state.user.clientId,\n                                'receiverId': player\n                            }\n                            console.log('sending offer websocket')\n                            dispatch(wsSendMessage(webRTCOfferPayload))\n                        }()\n                    }\n                    break\n\n                case events.UPDATE_PLAYER_LIST:\n                    console.log(\"updating the playerlist\")\n                    dispatch(updatePlayerList(data))\n                    break\n\n                case events.REMOVE_PLAYER:\n                    dispatch(removePlayer(data.id))\n                    break;\n\n                case 'end_game':\n                    dispatch(endGame(data.playerlist))\n                    break;\n\n                case 'webRTCOffer':\n                    console.log('webrtcoffer')\n                    console.log(data)\n                    let rtcPeerConnection = new RTCPeerConnection(iceServers)\n                    connections[data.senderId] = rtcPeerConnection\n                    addLocalTracks(rtcPeerConnection)\n\n                    rtcPeerConnection.ontrack = (event) => {\n                        //create an audio element and attach stream to it\n                        console.log(event)\n                        console.log(\"remote stream attached <---\", data.senderId)\n                        let audioElement = document.createElement(\"video\")\n                        audioElement.autoplay = \"autoplay\"\n                        audioElement.srcObject = event.streams[0]\n                        audioElement.setAttribute(\"id\", data.senderId)\n                        document.getElementById('audioEvents').appendChild(audioElement)\n                        remoteStreams[data.senderId] = event.streams[0]\n                    }\n\n                    rtcPeerConnection.onicecandidate = (event) => {\n                        if (event.candidate) {\n                            let iceCandidatePayload = {\n                                'method': 'sendIceCandidate',\n                                'senderId': state.user.clientId,\n                                'receiverId': data.senderId,\n                                label: event.candidate.sdpMLineIndex,\n                                candidate: event.candidate.candidate\n                            }\n                            dispatch(wsSendMessage(iceCandidatePayload))\n                        }\n                    }\n\n\n                    rtcPeerConnection.setRemoteDescription(new RTCSessionDescription(data.sdp))\n\n                    let answerCreation = await async function () {\n                        console.log('in offer creation')\n                        let sessionDescription\n                        try {\n                            sessionDescription = await rtcPeerConnection.createAnswer()\n                            rtcPeerConnection.setLocalDescription(sessionDescription)\n                            console.log('offer creation succeeded')\n                        } catch (error) {\n                            console.log('error in setting session desc')\n                        }\n\n                        let webRTCAnswerPayload = {\n                            'method': 'webRTCAnswer',\n                            sdp: sessionDescription,\n                            'senderId': state.user.clientId,\n                            'receiverId': data.senderId\n                        }\n                        console.log('sending answer websocket')\n                        dispatch(wsSendMessage(webRTCAnswerPayload))\n                    }()\n                    break\n\n                case 'webRTCAnswer':\n                    connections[data.senderId].setRemoteDescription(data.sdp)\n                    break\n\n                case 'sendIceCandidate':\n                    let candidate = new RTCIceCandidate({\n                        sdpMLineIndex: data.label,\n                        candidate: data.candidate\n                    })\n                    connections[data.senderId].addIceCandidate(candidate)\n                    break\n\n                default:\n                    console.log('other event:' + data.method)\n            }\n        }\n    }\n}\n\nexport default eventHandler;","import { CLIENT_ID, CONNECT, GAME_ID, JOIN_GAME, NAME, SOCKET, } from '../../utilities/constants';\nimport axios from 'axios'\n\n\nexport const createGame = () => (dispatch) => {\n    return axios.post(\"https://drawasarus.herokuapp.com/create-game\")\n        .then(response => {\n            console.log(response.data)\n            response = response.data\n            dispatch(storeGameId(response.gameId))\n            return `game/${response.gameId}`\n        })\n        .catch(error => {\n            return ''\n            alert('Unable to start Game. Please try later')\n        })\n\n}\n\n\n\n\n\nexport const joinGame = () => {\n    return {\n        type: JOIN_GAME\n    }\n}\nexport const connect = () => {\n    return {\n        type: CONNECT\n    }\n}\n\nexport const createSocket = (ws) => {\n    return {\n        type: SOCKET,\n        payload: {\n            'ws': ws\n        }\n    }\n}\n\nexport const storeClientId = (clientId) => {\n    return {\n        type: CLIENT_ID,\n        payload: {\n            'clientId': clientId\n        }\n    }\n}\n\nexport const storeGameId = (gameId) => {\n    return {\n        type: GAME_ID,\n        payload: {\n            'gameId': gameId\n        }\n    }\n}\n\nexport const storeName = (name) => {\n    //console.log('dispatching storename')\n    return {\n        type: NAME,\n        payload: {\n            'name': name\n        }\n    }\n}\n\nexport const setCreator = () => {\n    //console.log('dispatching storename')\n    return {\n        type: 'set_create'\n    }\n}","\n\nimport { UPDATE_POINTS, DRAW, GUESS, REMOVE_PLAYER, UPDATE_PLAYER_LIST, SET_LOCAL_STREAM, SET_REMOTE_STREAM, SET_REMOTE_CORDS } from \"../../utilities/constants\"\n\nexport const draw = (image) => {\n    return {\n        type: DRAW,\n        payload: {\n            'image': image.canvasEvent\n        }\n    }\n}\n\nexport const signalChatEvent = (chatEvent) => {\n    return {\n        type: GUESS,\n        payload: {\n            'chatEvent': chatEvent\n        }\n    }\n}\n\nexport const updatePlayerList = (updatePlayers) => {\n\n    return {\n        type: UPDATE_PLAYER_LIST,\n        payload: updatePlayers\n    }\n}\n\nexport const updatePoints = (points, id) => {\n    return {\n        type: UPDATE_POINTS,\n        payload: {\n            'points': points,\n            'id': id\n        }\n    }\n}\n\nexport const removePlayer = (id) => {\n    return {\n        type: REMOVE_PLAYER,\n        payload: {\n            'id': id\n        }\n    }\n}\n\nexport const remoteCords = (data) => {\n    return {\n        type: SET_REMOTE_CORDS,\n        payload: {\n            'cords': data.cords\n        }\n    }\n}\n\nexport const setLocalStream = (stream) => {\n    return {\n        type: SET_LOCAL_STREAM,\n        payload: {\n            'stream': stream\n        }\n    }\n}\n\nexport const setRemoteStream = (stream, id) => {\n    return {\n        type: SET_REMOTE_STREAM,\n        payload: {\n            'stream': stream,\n            'id': id\n        }\n    }\n}\n\nexport const setChoice = (words) => {\n    return {\n        type: 'CHOICE',\n        payload: {\n            'words': words\n        }\n    }\n}\n\nexport const setSelector = (name) => {\n    return {\n        type: 'SELECTOR',\n        payload: {\n            'name': name\n        }\n    }\n}\n\nexport const setWordHint = (hint) => {\n    return {\n        type: 'HINT',\n        payload: {\n            'hint': hint\n        }\n    }\n}\n\nexport const endGame = (playerlist) => {\n    return {\n        type: 'end_game',\n        payload: {\n            'playerlist': playerlist\n        }\n    }\n}","import eventHandler from \"../../utilities/eventHandler\"\n\nconst { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } = require(\"../../utilities/constants\")\nconst { wsConnect, wsDisconnect } = require(\"../actions/socketActions\")\n\n\nconst socketMiddleware = () => {\n\n    let socket = null\n    let host = ''\n\n    const onMessage = (store) => (event) => {\n        eventHandler(event, store.dispatch, store.getState())\n\n    }\n\n    const onOpen = (store) => (event) => {\n        console.log(\"web socket connection opened\")\n    }\n\n    const onClose = (store) => (event) => {\n        console.log(\"web socket connection closed\")\n    }\n\n    // middleware\n    return store => next => action => {\n\n        switch (action.type) {\n\n            case WS_CONNECT:\n\n                console.log('middle ware', WS_CONNECT)\n                if (socket != null) {\n                    socket.close()\n                    host = ''\n                }\n                socket = new WebSocket(action.host)\n\n                // register handlers\n                socket.onmessage = onMessage(store)\n                socket.onclose = onClose(store)\n                socket.onopen = onOpen(store)\n                break;\n\n            case WS_DISCONNECT:\n\n                console.log('reducer', WS_DISCONNECT)\n                if (socket != null) {\n                    socket.close()\n                }\n                socket = null\n                host = ''\n                break;\n            case WS_SEND_MESSAGE:\n\n                console.log(\"sending the message\", action.payload)\n                socket.send(JSON.stringify(action.payload))\n                break;\n            default:\n                console.log(\"default action\", action.type, \" not found\")\n        }\n\n\n        return next(action)\n\n    }\n\n\n}\n\nexport default socketMiddleware","import { DRAW, UPDATE_POINTS, ADD_PLAYER, SET_REMOTE_CORDS, REMOVE_PLAYER, SET_LOCAL_STREAM, SET_REMOTE_STREAM, UPDATE_PLAYER_LIST } from \"../../utilities/constants\"\n\n\n\n\nconst intialState = {\n    players: [],\n    localStream: null,\n    remoteCords: [0, 0, 0, 0],\n    receivedDrawEvent: false,\n    image: null,\n    choice: null,\n    selector: null,\n    hint: null,\n    playerlist: null//will be populated on end_game event\n}\n\nexport default function gameReducer(state = intialState, action) {\n\n    switch (action.type) {\n\n        case UPDATE_PLAYER_LIST:\n            return {\n                ...state,\n                players: action.payload.playerlist\n            }\n\n        case UPDATE_POINTS:\n            return {\n                ...state,\n                players: state.players.map(player => {\n\n                    if (player.id == action.payload.id) {\n                        player.points++;\n                    }\n\n                    return player\n                })\n            }\n\n        case REMOVE_PLAYER:\n            return {\n                ...state,\n                players: state.players.filter(player => player.id != action.payload.id)\n            }\n\n        case DRAW:\n            return {\n                ...state,\n                image: action.payload.image\n            }\n\n        case SET_REMOTE_CORDS:\n            return {\n                ...state,\n                remoteCords: action.payload.cords,\n                receivedDrawEvent: !state.receivedDrawEvent\n            }\n\n        case SET_LOCAL_STREAM:\n            return {\n                ...state,\n                localStream: action.payload.stream\n            }\n\n        case SET_REMOTE_STREAM:\n            var modifiedPlayers = JSON.parse(JSON.stringify(state.players))\n            console.log('setremotestream game reducer')\n            console.log(modifiedPlayers)\n            modifiedPlayers.forEach((player) => {\n                if (player.id == action.payload.id) {\n                    player.remoteStream = action.payload.stream\n                }\n            })\n            return {\n                ...state,\n                players: modifiedPlayers\n            }\n\n        case 'CHOICE':\n            return {\n                ...state,\n                choice: action.payload.words\n            }\n\n        case 'SELECTOR':\n            return {\n                ...state,\n                selector: action.payload.name\n            }\n\n        case 'HINT':\n            return {\n                ...state,\n                hint: JSON.parse(JSON.stringify(action.payload.hint))\n            }\n\n        case 'end_game':\n            return {\n                ...state,\n                playerlist: action.payload.playerlist\n            }\n\n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport userReducer from \"./reducers/userReducer\"\nimport reduxThunk from 'redux-thunk'\nimport socketMiddleware from \"./middleware/middleware\"\nimport gameReducer from \"./reducers/gameReducers\"\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    game: gameReducer\n})\n\nconst middleware = [\n    reduxThunk,\n    socketMiddleware()\n]\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(...middleware),\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n\n)\n\nexport default store","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useState } from 'react'\nimport \"./Player.css\"\n\nfunction Player(props) {\n\n\n    const [mute, setmute] = useState(false)\n\n    let state = useSelector(state => {\n\n        return {\n            clientId: state.user.clientId,\n            localStream: state.game.localStream\n\n        }\n    })\n\n\n\n\n    const inverse = () => {\n\n\n        // need to get access to the audioEvents in the dom\n        // so we can change the volume\n        // this is a hack\n        const audioEvents = document.getElementById('audioEvents')\n        console.log(audioEvents)\n        let childNodes = audioEvents.childNodes;\n\n        console.log(\"clicked element id\", props.id)\n\n        if (state.clientId == props.id && state.localStream != null) {\n            console.log(\"self mute\")\n            if (mute) {\n                state.localStream.getAudioTracks().forEach(track => track.enabled = true)\n            }\n            else {\n                state.localStream.getAudioTracks().forEach(track => track.enabled = false)\n            }\n            setmute(!mute)\n            return;\n        }\n\n\n        // iterate over the child nodes\n        childNodes.forEach((child) => {\n\n            // setmute only if the child is the one we are looking for\n            if (child.getAttribute(\"id\") == props.id) {\n\n                console.log(\"action on\", props.name)\n                const remoteStream = child.srcObject\n\n\n\n                if (remoteStream != null) {\n                    // console.log(\"tracks\", child.srcObject.getAudioTracks())\n                    if (mute) {\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = true)\n                    }\n                    else {\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = false)\n                    }\n                    \n                    setmute(!mute)\n                }\n            }\n        })\n\n\n    }\n\n\n    return (\n        <div className=\"player\" style={{ color: props.id == state.clientId ? 'red' : '' }}>\n            <div>{props.name}</div>\n            <div>{props.points}</div>\n\n            {mute ?\n                <span className=\"material-icons\" onClick={inverse}>volume_off</span> :\n                <span className=\"material-icons\" onClick={inverse}>volume_up</span>\n            }\n\n\n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Player from './Player'\nimport \"./LeaderBoard.css\"\n\nfunction LeaderBoard() {\n\n\n\n\n\n    const dispatch = useDispatch()\n    const players = useSelector(state => state.game.players)\n\n\n    const listItems = players.map((player) => <Player key={player.id} id={player.id} name={player.name} points={player.points} />);\n\n\n    return (\n        <div className=\"leader-board-container\">\n            {listItems}\n        </div>\n    )\n}\n\nexport default LeaderBoard\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { wsSendMessage } from \"../Redux/actions/socketActions\";\nimport events from '../utilities/constants'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { remoteCords } from \"../Redux/actions/gameActions\";\n\n\n\nlet x1, y1, x2, y2;\n\n\nconst Canvas = (props) => {\n\n    let canDraw = props.canDraw\n    const [isDrawing, setIsDrawing] = useState(false);\n    const canvasRef = useRef(null);\n    const contextRef = useRef(null);\n\n    const dispatch = useDispatch()\n    let interval;\n    let state = useSelector(state => {\n\n        return {\n            clientId: state.user.clientId,\n            gameId: state.user.gameId,\n            remoteCords: state.game.remoteCords,\n            image: state.game.image,\n            receivedDrawEvent: state.game.receivedDrawEvent\n        }\n    })\n\n    console.log(\"remote\", state.remoteCords)\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = parseInt(getComputedStyle(document.querySelector('#canvasElement')).getPropertyValue('width'))\n        canvas.height = window.innerHeight;\n        canvas.style.width = `100%`;\n        canvas.style.height = `100%`;\n        const context = canvas.getContext(\"2d\");\n        //context.scale(2, 2);\n        context.lineCap = \"round\";\n        context.strokeStyle = \"black\";\n        context.lineWidth = 2;\n        contextRef.current = context;\n\n        // window.onresize = () => {\n\n        //     console.log(\"resize\")\n        //     const canvas = canvasRef.current;\n        //     canvas.style.width = '100%';\n        //     canvas.style.height = '100%';\n        //     canvas.width = canvas.offsetWidth;\n        //     canvas.height = canvas.offsetHeight;\n        // }\n\n    }, []);\n\n    useEffect(() => {\n\n        console.log(\"received new cords\", state.remoteCords)\n        const [oldx, oldy, newx, newy] = state.remoteCords;\n\n        const lines = JSON.parse(sessionStorage.getItem(\"currentState\"))\n\n        console.log(\"old cords\", lines)\n\n        if (lines != null) {\n\n            console.log(lines)\n            lines.map((cord) => {\n                console.log(\"cord\", cord)\n                const [oldx, oldy, newx, newy] = cord\n                drawLine(oldx, oldy, newx, newy)\n            })\n            sessionStorage.removeItem(\"curentState\")\n        }\n\n        drawLine(oldx, oldy, newx, newy)\n    }, [state.receivedDrawEvent])\n\n    const drawLine = (x1, y1, x2, y2) => {\n\n\n        contextRef.current.beginPath();\n        contextRef.current.moveTo(x1, y1);\n        contextRef.current.lineTo(x2, y2);\n        contextRef.current.stroke()\n        contextRef.current.closePath();\n    }\n\n\n\n\n\n    useEffect(() => {\n\n\n        if (state.image != null) {\n            // var image = new Image();\n            // image.src = state.image;\n            // contextRef.current.drawImage(image, 0, 0)\n        }\n\n\n    }, [state.image])\n\n\n\n    //https://stackoverflow.com/questions/43955925/html5-responsive-canvas-mouse-position-and-resize\n    const getMousePosition = (e) => {\n        const canvas = canvasRef.current;\n        var mouseX = e.offsetX * canvas.width / canvas.clientWidth | 0;\n        var mouseY = e.offsetY * canvas.height / canvas.clientHeight | 0;\n        return { x: mouseX, y: mouseY };\n    }\n\n    const startDrawing = ({ nativeEvent }) => {\n        if (!canDraw) return\n        contextRef.current.beginPath();\n\n\n\n        x1 = getMousePosition(nativeEvent).x\n        y1 = getMousePosition(nativeEvent).y\n\n        contextRef.current.moveTo(x1, y1);\n        console.log('moved to ' + x1 + \", \" + y1)\n        setIsDrawing(true);\n    };\n\n    const finishDrawing = () => {\n        contextRef.current.closePath();\n        setIsDrawing(false);\n        clearInterval(interval)\n    };\n\n    const draw = ({ nativeEvent }) => {\n        if (!isDrawing) {\n            return;\n        }\n\n        x2 = getMousePosition(nativeEvent).x\n        y2 = getMousePosition(nativeEvent).y\n\n        console.log(x1, y1, x2, y2)\n\n        const payload = {\n            'method': events.SET_REMOTE_CORDS,\n            'gameId': state.gameId,\n            'clientId': state.clientId,\n            cords: [x1, y1, x2, y2]\n        }\n\n        dispatch(wsSendMessage(payload))\n\n        // interval = setInterval(() => {\n        //     dispatch(wsSendMessage(payload))\n        // }, 150)\n\n\n\n        contextRef.current.lineTo(x2, y2);\n        //console.log('line to ' + offsetX + \", \" + offsetY)\n        contextRef.current.stroke();\n        x1 = x2;\n        y1 = y2;\n    };\n\n    let canvasStyle = {\n        width: `100%`\n    }\n    return (\n        <canvas\n            onMouseDown={startDrawing}\n            onMouseUp={finishDrawing}\n            onMouseMove={draw}\n            ref={canvasRef}\n            id=\"canvasElement\"\n            style={canvasStyle}\n            disabled\n        />\n    );\n}\n\nexport default Canvas\n","import React, { Component, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\nimport events from '../../utilities/constants'\nimport './Chat.css'\n\n\nconst Chat = () => {\n    let [mic, flipMic] = useState(false);\n\n    let dispatch = useDispatch()\n    let state = useSelector(state => {\n        return {\n            clientId: state.user.clientId,\n            name: state.user.name,\n            gameId: state.user.gameId,\n            chatEvent: state.user.chatEvent\n        }\n    })\n\n    useEffect(() => {\n        console.log('chatEvent:')\n        console.log(state.chatEvent)\n        addChatMessage(state.chatEvent)\n    }, [state.chatEvent])\n\n    const sendMessage = (message) => {\n        if (message === null) {\n            message = document.getElementsByClassName('textContainer')[0].value\n        }\n\n        message = message.trim()\n        if (message === '') return\n        console.log('id:' + state.clientId + \" name:\" + state.name + 'gameId:' + state.gameId)\n        message = {\n            'method': events.GUESS,\n            'guessWord': message,\n            'clientId': state.clientId,\n            'name': state.name,\n            'gameId': state.gameId\n        }\n\n        dispatch(wsSendMessage(message))\n        document.getElementsByClassName('textContainer')[0].value = ''\n    }\n\n    const addChatMessage = (message) => {\n        if (!message) {\n            console.log(\"Invalid message\")\n            return\n        }\n        console.log('addChatMessage message:')\n        console.log(message)\n        var messageDiv = createMessage(message)\n        document.getElementById(\"chatMessages\").innerHTML += messageDiv\n        let containerElement = document.getElementById('outerContainer')\n        containerElement.scrollTop = containerElement.scrollHeight\n    }\n\n    const createMessage = (message) => {\n        var isMine = message.clientId === state.clientId\n        console.log(message)\n        if (message.points) {\n            let str = (isMine ? 'You' : message.name) + ' got it right'\n            return (`<li class=notif>${str}</li>`)\n        }\n        var liClassName = isMine ? \"mine\" : \"their\"\n        let nameElement = '';\n        if (!isMine) {\n            nameElement = `<span class='senderName'>${(message.name)}</span>`;\n        }\n\n        return (`<li class='message ${liClassName}'>\n        <div class='messageContainer'>\n            ${nameElement}\n            <span class='messageBody'>\n                ${message.guessWord}\n            </span>\n        </div>\n    </li>`)\n    }\n\n    const handleMicFlip = () => {\n        flipMic(!mic)\n    }\n\n    let micElement = mic ?\n        <span className=\"material-icons micButton\"\n            onClick={() => handleMicFlip()}>mic</span> :\n        <span className=\"material-icons micButton\"\n            onClick={() => handleMicFlip()}>mic_off</span>\n\n    return (\n        <div className=\"outerContainer\" id=\"outerContainer\">\n            <div className=\"chatContainer\">\n                <div id=\"chatMessages\" className=\"chatMessages\">\n                </div>\n            </div>\n            <footer>\n                <div className=\"footerContainer\">\n                    <input className=\"textContainer\"\n                        id=\"textInputContainer\"\n                        placeholder={'Type a message...'}\n                        onKeyPress={(event) => event.key === 'Enter' ? sendMessage(event.target.value) : null}\n                    />\n                    <i className=\"material-icons sendButton\"\n                        onClick={() => sendMessage(null)}>send</i>\n                    {micElement}\n                </div>\n            </footer>\n        </div>\n    )\n}\nexport default Chat","import React, { Component } from 'react';\nimport './modal.css'\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n\n    return (\n        <div className={showHideClassName}>\n            <section className='modal-main'>\n                {children}\n            </section>\n        </div>\n    );\n};\nexport default Modal","import React, { useEffect, useState } from 'react'\nimport LeaderBoard from '../../components/LeaderBoard'\nimport Canvas from '../../components/canvas'\nimport Chat from '../../components/Chat/Chat'\nimport Modal from '../../components/modal'\nimport './gamePage.css'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport events from '../../utilities/constants'\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\nimport { setWordHint } from '../../Redux/actions/gameActions'\n\nfunction GamePage() {\n\n    let history = useHistory()\n    let dispatch = useDispatch()\n\n    let [childrenContent, setChildrenContent] = useState(null)\n    let [canDraw, flipDrawState] = useState(false)\n    let state = useSelector(state => {\n\n        return {\n            gameId: state.user.gameId,\n            clientId: state.user.clientId,\n            isCreator: state.user.isCreator,\n            choice: state.game.choice,\n            selector: state.game.selector,\n            hint: state.game.hint,\n            playerlist: state.game.playerlist\n        }\n    })\n\n    const [showModal, setModal] = useState(state.isCreator)\n\n\n    useEffect(() => {\n        if (state.choice !== null) {\n            setModal(true)\n            console.log(state.choice)\n\n            setChildrenContent(<div>\n                <p>choose a word</p>\n                {state.choice.map((word) => {\n                    return <button key={word} onClick={() => { handleChoiceSelection(word) }}>{word}</button>\n                })}\n            </div>)\n        }\n    }, [state.choice])\n\n    useEffect(() => {\n        if (state.selector !== null) {\n            dispatch(setWordHint(null))\n            flipDrawState(false)\n            setModal(true)\n            setChildrenContent(<div>\n                <p>Please wait {state.selector} is choosing a word</p>\n            </div>)\n        }\n    }, [state.selector])\n\n    useEffect(() => {\n        if (state.gameId === null) {\n            moveToHomePage()\n        }\n    }, [state.gameId])\n\n    useEffect(() => {\n        setChildrenContent(<div>Click here to copy the game code\n            <span className=\"material-icons copyButton\" onClick={copyGameCode}>content_copy</span>\n            <button onClick={handleStartGameClose}>Start Game!</button></div>)\n    }, [])\n\n    useEffect(() => {\n        console.log('hint useeffect')\n        if (state.hint !== null) {\n            console.log('hint:', state.hint)\n            setModal(false)\n        }\n    }, [state.hint])\n\n    useEffect(() => {\n        if (state.playerlist !== null) {\n            let playerlist = state.playerlist\n            playerlist.sort((a, b) => (a.points > b.points) ? -1 : 1)\n            console.log('playlist')\n            console.log(playerlist)\n            console.log(typeof playerlist)\n            setModal(true)\n            setChildrenContent(<div>\n                <p>Leader Board</p>\n                {state.playerlist.map((entry) => {\n                    return (<div key={entry.id}>\n                        <p>{entry.name}</p>\n                        <p>{entry.points}</p>\n                    </div>)\n                })}\n                <p>Game Ended!!!</p>\n            </div>)\n\n        }\n    }, [state.playerlist])\n\n    function moveToHomePage() {\n        history.push('/')\n    }\n\n    function handleChoiceSelection(word) {\n        let choicePayload = {\n            'method': 'choice',\n            'word': word,\n            'clientId': state.clientId,\n            'gameId': state.gameId\n        }\n        setModal(false)\n        dispatch(wsSendMessage(choicePayload))\n        flipDrawState(true)\n    }\n\n    function handleStartGameClose() {\n        let startGamePayload = {\n            'method': events.START_GAME,\n            gameId: state.gameId\n        }\n        setModal(false)\n        dispatch(wsSendMessage(startGamePayload))\n\n\n    }\n\n    function copyGameCode() {\n        const gameCode = window.location.pathname.split(\"/\")[2]\n        console.log(gameCode)\n        navigator.clipboard.writeText(gameCode)\n    }\n\n\n\n    return (\n        <div className='gamePageContainer'>\n            <div className=\"col-sm-2 leaderBoard\" >\n                <LeaderBoard />\n            </div>\n            <div className=\"col-sm-8 canvas\">\n                <Canvas canDraw={canDraw} />\n            </div>\n            <div className=\"col-sm-2 chat\" >\n                <Chat />\n            </div>\n            <div id=\"audioEvents\">\n\n            </div>\n            <Modal id=\"modal\" show={showModal} children={childrenContent} />\n        </div>\n    )\n}\n\nexport default GamePage\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom';\nimport { wsConnect } from '../../Redux/actions/socketActions';\nimport { createGame, storeName, storeGameId, setCreator } from '../../Redux/actions/userActions';\nimport axios from 'axios';\nimport './LandingPage.css'\n\nfunction LandingPage() {\n\n\n    console.log(\"render landing\")\n\n    const [join, setJoin] = React.useState(false)\n\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    let state = useSelector(state => {\n\n        return {\n            clientId: state.user.clientId,\n            gameId: state.user.gameId,\n            name: state.user.name,\n            isClientCreated: state.user.isClientCreated,\n            isGameCreated: state.user.isGameCreated\n        }\n    })\n\n\n    const createButtonHandler = () => {\n        // first send a get request to create game\n        // store the gameid and client id redux thunk\n        dispatch(setCreator())\n        dispatch(storeName(document.getElementById('name').value))\n        dispatch(createGame())\n            .then(path => {\n                if (path != '') {\n                    dispatch(wsConnect('wss://drawasarus.herokuapp.com/'))\n                    history.push(path)\n                }\n            })\n    }\n\n    const joinButtonHandler = async () => {\n\n        console.log(\"joinButtonHandler\")\n        dispatch(storeName(document.getElementById('name').value))\n        let gameId = document.getElementById('gameId').value\n        let headers = {\n            \"gameId\": gameId\n        }\n        let resp = await axios.get(\"https://drawasarus.herokuapp.com/isValidGame\", { headers })\n        console.log(resp.data)\n        if (!resp || !resp.data || !resp.data['valid']) {\n            alert(\"Game id is Invalid. Please check again\")\n            return\n        }\n\n        dispatch(storeGameId(gameId))\n        dispatch(wsConnect('wss://drawasarus.herokuapp.com/'))\n        history.push('game/' + gameId)\n    }\n\n    return (\n        <div className=\"LandingPage\" >\n            <div className=\"well\">\n                <div className=\"row selectors \">\n                    <input type=\"text\" className=\"create\" defaultValue=\"Create\" readOnly onClick={() => { setJoin(false) }}></input>\n                    <input type=\"text\" className=\"join\" defaultValue=\"Join\" readOnly onClick={() => { setJoin(true) }}></input>\n                </div>\n\n                {join ?\n                    <div className=\"row joinCell\">\n                        <div className=\"input-container\">\n\n                            <input type=\"text\" id=\"name\" placeholder=\"Enter Your Name\" />\n\n\n                            <input type=\"text\" id=\"gameId\" placeholder=\"Enter Game Id\" />\n\n                        </div>\n\n                        <div>\n                            <input type=\"button\" value=\"Join\" onClick={joinButtonHandler} />\n                        </div>\n                    </div>\n\n                    :\n                    <div className=\"row createCell\">\n                        <input type=\"text\" id=\"name\" placeholder=\"Enter Your Name\" />\n                        <input type=\"button\" value=\"Create\" onClick={createButtonHandler} />\n                    </div>\n\n                }\n            </div>\n        </div >\n    )\n}\n\nexport default LandingPage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport GamePage from './Pages/GamePage/GamePage'\nimport LandingPage from './Pages/LandingPage/LandingPage'\n\nfunction Playground(props) {\n\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <LandingPage props={props} />\n            </Route>\n            <Route path=\"/game/:code\">\n                <GamePage />\n            </Route>\n        </Switch>\n    )\n}\n\nexport default Playground\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './Redux/store';\nimport Playground from './Playground';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <div className=\"playGroundContainer\">\n        <Playground props={store} />\n      </div>\n    </Router>\n  </Provider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}