{"version":3,"sources":["utilities/constants.js","Redux/actions/socketActions.js","Redux/reducers/userReducer.js","utilities/eventHandler.js","config.js","Redux/actions/userActions.js","Redux/actions/gameActions.js","Redux/middleware/middleware.js","Redux/reducers/gameReducers.js","Redux/store.js","components/Player.js","components/LeaderBoard.js","components/canvas.js","components/Chat/Chat.js","components/modal.js","Pages/GamePage/GamePage.js","Pages/LandingPage/LandingPage.js","Playground.js","index.js"],"names":["module","exports","JOIN_GAME","CREATE_GAME","DRAW","GUESS","WORD_SELECT","CONNECT","SOCKET","GAME_ID","CLIENT_ID","NAME","WS_CONNECT","WS_DISCONNECT","WS_SEND_MESSAGE","UPDATE_PLAYER_LIST","REMOVE_PLAYER","MUTE","UNMUTE","SET_LOCAL_STREAM","SET_REMOTE_STREAM","SET_REMOTE_CORDS","START_GAME","UPDATE_POINTS","DRAW_LINES","wsConnect","host","type","wsDisconnect","wsSendMessage","payload","console","log","initalState","gameId","name","clientId","chatEvent","isCreator","localStream","config","URL","WS_URL","storeClientId","storeGameId","storeName","removePlayer","id","remoteCords","data","cords","setWordHint","hint","connections","remoteStreams","mediaConstraints","audio","video","iceServers","urls","addLocalTracks","rtcPeerConnection","getTracks","forEach","track","addTrack","eventHandler","event","dispatch","state","a","JSON","parse","method","events","joinPayload","user","navigator","mediaDevices","getUserMedia","stream","sessionStorage","setItem","otherUser","stringify","lines","words","points","image","canvasEvent","prevClients","clients","undefined","Promise","r","setTimeout","player","RTCPeerConnection","ontrack","senderId","audioElement","document","createElement","autoplay","srcObject","streams","setAttribute","getElementById","appendChild","onicecandidate","candidate","iceCandidatePayload","label","sdpMLineIndex","createOffer","sessionDescription","setLocalDescription","webRTCOfferPayload","sdp","updatePlayers","playerlist","setRemoteDescription","RTCSessionDescription","createAnswer","webRTCAnswerPayload","RTCIceCandidate","addIceCandidate","require","socketMiddleware","socket","store","next","action","close","WebSocket","onmessage","getState","onMessage","onclose","onopen","send","intialState","players","receivedDrawEvent","choice","selector","rootReducer","combineReducers","ws","game","map","filter","modifiedPlayers","remoteStream","middleware","reduxThunk","createStore","compose","applyMiddleware","Player","props","useState","mute","setmute","useSelector","inverse","audioEvents","childNodes","getAudioTracks","enabled","child","getAttribute","className","style","color","onClick","LeaderBoard","x1","y1","x2","y2","useDispatch","listItems","value","copyCode","Canvas","canDraw","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","useEffect","canvas","current","width","parseInt","getComputedStyle","querySelector","getPropertyValue","height","window","innerHeight","context","getContext","lineCap","strokeStyle","lineWidth","oldx","oldy","newx","newy","getItem","cord","drawLine","removeItem","beginPath","moveTo","lineTo","stroke","closePath","clearCanvas","clearRect","getMousePosition","e","x","offsetX","clientWidth","y","offsetY","clientHeight","onMouseDown","nativeEvent","onMouseUp","clearInterval","interval","onMouseMove","ref","disabled","Chat","mic","flipMic","addChatMessage","sendMessage","message","getElementsByClassName","trim","messageDiv","createMessage","innerHTML","containerElement","scrollTop","scrollHeight","isMine","str","liClassName","nameElement","guessWord","handleMicFlip","micElement","placeholder","onKeyPress","key","target","Modal","handleClose","show","children","showHideClassName","GamePage","history","useHistory","childrenContent","setChildrenContent","flipDrawState","showModal","setModal","handleStartGameClose","startGamePayload","copyGameCode","gameCode","location","pathname","split","clipboard","writeText","word","choicePayload","handleChoiceSelection","push","sort","b","entry","LandingPage","React","join","setJoin","joinButtonHandler","isClientCreated","isGameCreated","headers","axios","get","resp","alert","defaultValue","readOnly","post","then","response","catch","error","path","Playground","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.8ce05cc0.chunk.js","sourcesContent":["\r\nmodule.exports = {\r\n    JOIN_GAME: 'join',\r\n    CREATE_GAME: 'create',\r\n    DRAW: 'draw',\r\n    GUESS: 'guess',\r\n    WORD_SELECT: 'wordselect',\r\n    CONNECT: 'connect',\r\n    SOCKET: 'socket',\r\n    GAME_ID: 'gameId',\r\n    CLIENT_ID: 'clientId',\r\n    NAME: 'name',\r\n    WS_CONNECT: 'ws_connect',\r\n    WS_DISCONNECT: 'ws_disconnect',\r\n    WS_SEND_MESSAGE: 'ws_message',\r\n    UPDATE_PLAYER_LIST: 'update_player_list',\r\n    REMOVE_PLAYER: 'remove_player',\r\n    MUTE: 'mute',\r\n    UNMUTE: 'unmute',\r\n    SET_LOCAL_STREAM: 'localstream',\r\n    SET_REMOTE_STREAM: 'remotestream',\r\n    SET_REMOTE_CORDS: 'cords',\r\n    START_GAME: 'start_game',\r\n    UPDATE_POINTS: 'update_points',\r\n    DRAW_LINES: 'draw_lines'\r\n}","import { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } from \"../../utilities/constants\"\r\n\r\n\r\nexport const wsConnect = (host) => {\r\n    return {\r\n        type: WS_CONNECT,\r\n        host: host\r\n    }\r\n}\r\n\r\nexport const wsDisconnect = (host) => {\r\n    return {\r\n        type: WS_DISCONNECT,\r\n        host: host\r\n    }\r\n}\r\n\r\nexport const wsSendMessage = (payload) => {\r\n    console.log('dispatching sendmessage')\r\n    return {\r\n        type: WS_SEND_MESSAGE,\r\n        payload: payload\r\n    }\r\n}\r\n","import { CLIENT_ID, GAME_ID, NAME, SOCKET, GUESS } from \"../../utilities/constants\";\r\n\r\nconst initalState = {\r\n    gameId: null,\r\n    name: '',\r\n    clientId: '',\r\n    chatEvent: null,\r\n    isCreator: false\r\n}\r\n\r\nexport default function userReducer(state = initalState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case SOCKET:\r\n            return {\r\n                ...state,\r\n                ws: action.payload['ws']\r\n            }\r\n\r\n        case GAME_ID:\r\n            return {\r\n                ...state,\r\n                gameId: action.payload['gameId']\r\n            }\r\n\r\n        case CLIENT_ID:\r\n            return {\r\n                ...state,\r\n                clientId: action.payload['clientId']\r\n            }\r\n\r\n        case NAME:\r\n            return {\r\n                ...state,\r\n                name: action.payload['name']\r\n            }\r\n\r\n        case GUESS:\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                chatEvent: action.payload['chatEvent']\r\n            }\r\n\r\n        case 'set_create':\r\n            return {\r\n                ...state,\r\n                isCreator: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { storeClientId, storeGameId } from '../Redux/actions/userActions';\r\nimport { remoteCords,removePlayer, signalChatEvent, updatePoints, updatePlayerList, draw, setChoice, setSelector, setWordHint, endGame, setLocalStream } from '../Redux/actions/gameActions';\r\nimport { wsSendMessage } from '../Redux/actions/socketActions';\r\nimport events from './constants';\r\n\r\nlet localStream;\r\nlet connections = {};\r\nlet remoteStreams = {};\r\n\r\nconst mediaConstraints = {\r\n    audio: true,\r\n    video: false\r\n}\r\n\r\nconst iceServers = {\r\n    iceServers: [\r\n        { urls: 'stun:stun.l.google.com:19302' },\r\n        { urls: 'stun:stun1.l.google.com:19302' },\r\n        { urls: 'stun:stun2.l.google.com:19302' },\r\n        { urls: 'stun:stun3.l.google.com:19302' },\r\n        { urls: 'stun:stun4.l.google.com:19302' },\r\n    ],\r\n}\r\n\r\nfunction addLocalTracks(rtcPeerConnection) {\r\n    console.log('addLocalTracks:')\r\n    console.log(localStream)\r\n    localStream.getTracks().forEach((track) => {\r\n        rtcPeerConnection.addTrack(track, localStream)\r\n    })\r\n}\r\n\r\nconst eventHandler = async (event, dispatch, state) => {\r\n\r\n    console.log('event received:')\r\n    if (event && event.data) {\r\n        let data = JSON.parse(event.data)\r\n\r\n        console.log(data)\r\n        if (data && data.method) {\r\n            console.log('In event, handler event type:' + data.method)\r\n\r\n            switch (data.method) {\r\n\r\n                case events.CONNECT:\r\n                    let clientId = data.clientId;\r\n                    console.log(\"dispatch client id\")\r\n                    dispatch(storeClientId(clientId))\r\n\r\n                    let joinPayload = {\r\n                        'method': events.JOIN_GAME,\r\n                        'clientId': clientId,\r\n                        'gameId': state.user.gameId,\r\n                        'name': state.user.name\r\n                    }\r\n\r\n                    dispatch(wsSendMessage(joinPayload))\r\n\r\n                    localStream = await navigator.mediaDevices.getUserMedia(mediaConstraints)\r\n                    console.log('localStream fetched:')\r\n                    dispatch(setLocalStream(localStream))\r\n                    \r\n                    \r\n\r\n                    break;\r\n\r\n                case events.CREATE_GAME:\r\n                    let gameId = data.gameId\r\n                    dispatch(storeGameId(gameId))\r\n                    sessionStorage.setItem('gameId', gameId);\r\n                    break;\r\n\r\n                case events.JOIN_GAME:\r\n                    let otherUser = data.name\r\n                    console.log(otherUser, \"Joined\")\r\n                    break;\r\n                \r\n                case events.DRAW_LINES:\r\n                    \r\n                    sessionStorage.setItem(\"currentState\", JSON.stringify(data.lines))\r\n                    console.log(\"---> storing lines\")\r\n                    break;\r\n\r\n                case 'TURN':\r\n                    dispatch(setChoice(data.words))\r\n                    break\r\n\r\n                case 'WAIT':\r\n                    dispatch(setSelector(data.name))\r\n                    break\r\n\r\n                case 'wordselect':\r\n                    dispatch(setWordHint(data.hint))\r\n                    break\r\n\r\n                case events.GUESS:\r\n\r\n                    // if the data has points the update the player list\r\n                    if (data.points != 0) {\r\n                        dispatch(updatePoints(data.points, data.clientId))\r\n                    }\r\n                    dispatch(signalChatEvent(data))\r\n                    break;\r\n\r\n                case events.DRAW:\r\n                    dispatch(draw(data))\r\n                    break;\r\n\r\n                case events.SET_REMOTE_CORDS:\r\n                    dispatch(remoteCords(data))\r\n                    break;\r\n\r\n                case 'prevClients':\r\n                    let prevClients = data.clients\r\n                    while (localStream == null || localStream == undefined) {\r\n                        await new Promise(r => setTimeout(r, 100));\r\n                    }\r\n                    for (let player of prevClients) {\r\n                        console.log(\"--> new player\", player)\r\n                        console.log(state)\r\n                        let rtcPeerConnection = new RTCPeerConnection(iceServers)\r\n                        connections[player] = rtcPeerConnection\r\n                        addLocalTracks(rtcPeerConnection)\r\n\r\n                        rtcPeerConnection.ontrack = (event) => {\r\n                            //create an audio element and attach stream to it\r\n                            console.log(event)\r\n                            console.log(\"new client remote stream attached <---\", data.senderId)\r\n                            let audioElement = document.createElement(\"video\")\r\n                            audioElement.autoplay = \"autoplay\"\r\n                            audioElement.srcObject = event.streams[0]\r\n                            audioElement.setAttribute(\"id\", player)\r\n                            document.getElementById('audioEvents').appendChild(audioElement)\r\n                            remoteStreams[player] = event.streams[0]\r\n                        }\r\n                        rtcPeerConnection.onicecandidate = (event) => {\r\n                            if (event.candidate) {\r\n                                let iceCandidatePayload = {\r\n                                    'method': 'sendIceCandidate',\r\n                                    'senderId': state.user.clientId,\r\n                                    'receiverId': player,\r\n                                    label: event.candidate.sdpMLineIndex,\r\n                                    candidate: event.candidate.candidate\r\n                                }\r\n                                dispatch(wsSendMessage(iceCandidatePayload))\r\n                            }\r\n                        }\r\n                        console.log('before offer creation')\r\n                        let offercreation = await async function () {\r\n                            console.log('in offer creation')\r\n                            let sessionDescription\r\n                            try {\r\n                                sessionDescription = await rtcPeerConnection.createOffer()\r\n                                rtcPeerConnection.setLocalDescription(sessionDescription)\r\n                                console.log('offer creation succeeded')\r\n                            } catch (error) {\r\n                                console.log('error in setting session desc')\r\n                            }\r\n\r\n                            let webRTCOfferPayload = {\r\n                                'method': 'webRTCOffer',\r\n                                sdp: sessionDescription,\r\n                                'senderId': state.user.clientId,\r\n                                'receiverId': player\r\n                            }\r\n                            console.log('sending offer websocket')\r\n                            dispatch(wsSendMessage(webRTCOfferPayload))\r\n                        }()\r\n                    }\r\n                    break\r\n\r\n                case events.UPDATE_PLAYER_LIST:\r\n                    console.log(\"updating the playerlist\")\r\n                    dispatch(updatePlayerList(data))\r\n                    break\r\n\r\n                case events.REMOVE_PLAYER:\r\n                    dispatch(removePlayer(data.id))\r\n                    break;\r\n\r\n                case 'end_game':\r\n                    dispatch(endGame(data.playerlist))\r\n                    break;\r\n\r\n                case 'webRTCOffer':\r\n                    console.log('webrtcoffer')\r\n                    console.log(data)\r\n                    let rtcPeerConnection = new RTCPeerConnection(iceServers)\r\n                    connections[data.senderId] = rtcPeerConnection\r\n                    addLocalTracks(rtcPeerConnection)\r\n\r\n                    rtcPeerConnection.ontrack = (event) => {\r\n                        //create an audio element and attach stream to it\r\n                        console.log(event)\r\n                        console.log(\"remote stream attached <---\", data.senderId)\r\n                        let audioElement = document.createElement(\"video\")\r\n                        audioElement.autoplay = \"autoplay\"\r\n                        audioElement.srcObject = event.streams[0]\r\n                        audioElement.setAttribute(\"id\", data.senderId)\r\n                        document.getElementById('audioEvents').appendChild(audioElement)\r\n                        remoteStreams[data.senderId] = event.streams[0]\r\n                    }\r\n\r\n                    rtcPeerConnection.onicecandidate = (event) => {\r\n                        if (event.candidate) {\r\n                            let iceCandidatePayload = {\r\n                                'method': 'sendIceCandidate',\r\n                                'senderId': state.user.clientId,\r\n                                'receiverId': data.senderId,\r\n                                label: event.candidate.sdpMLineIndex,\r\n                                candidate: event.candidate.candidate\r\n                            }\r\n                            dispatch(wsSendMessage(iceCandidatePayload))\r\n                        }\r\n                    }\r\n\r\n\r\n                    rtcPeerConnection.setRemoteDescription(new RTCSessionDescription(data.sdp))\r\n\r\n                    let answerCreation = await async function () {\r\n                        console.log('in offer creation')\r\n                        let sessionDescription\r\n                        try {\r\n                            sessionDescription = await rtcPeerConnection.createAnswer()\r\n                            rtcPeerConnection.setLocalDescription(sessionDescription)\r\n                            console.log('offer creation succeeded')\r\n                        } catch (error) {\r\n                            console.log('error in setting session desc')\r\n                        }\r\n\r\n                        let webRTCAnswerPayload = {\r\n                            'method': 'webRTCAnswer',\r\n                            sdp: sessionDescription,\r\n                            'senderId': state.user.clientId,\r\n                            'receiverId': data.senderId\r\n                        }\r\n                        console.log('sending answer websocket')\r\n                        dispatch(wsSendMessage(webRTCAnswerPayload))\r\n                    }()\r\n                    break\r\n\r\n                case 'webRTCAnswer':\r\n                    connections[data.senderId].setRemoteDescription(data.sdp)\r\n                    break\r\n\r\n                case 'sendIceCandidate':\r\n                    let candidate = new RTCIceCandidate({\r\n                        sdpMLineIndex: data.label,\r\n                        candidate: data.candidate\r\n                    })\r\n                    connections[data.senderId].addIceCandidate(candidate)\r\n                    break\r\n\r\n                default:\r\n                    console.log('other event:' + data.method)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default eventHandler;","const dev = {\r\n    URL: \"http://localhost:9091/\",\r\n    WS_URL: \"ws://localhost:9091/\"\r\n}\r\n\r\nconst prod = {\r\n    URL: \"https://drawasarus.herokuapp.com/\",\r\n    WS_URL: \"wss://drawasarus.herokuapp.com/\"\r\n}\r\n\r\nconst config = prod\r\n\r\nexport default {\r\n    ...config\r\n}","import { CLIENT_ID, CONNECT, GAME_ID, JOIN_GAME, NAME, SOCKET, } from '../../utilities/constants';\r\nimport axios from 'axios'\r\nimport config from '../../config'\r\n\r\nexport const createGame = () => (dispatch) => {\r\n    console.log(config)\r\n    return axios.post(config.URL + \"create-game\")\r\n        .then(response => {\r\n            console.log(response.data)\r\n            response = response.data\r\n\r\n            dispatch(storeGameId(response.gameId))\r\n            return `game/${response.gameId}`\r\n        })\r\n        .catch(error => {\r\n            return ''\r\n            alert('Unable to start Game. Please try later')\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const joinGame = () => {\r\n    return {\r\n        type: JOIN_GAME\r\n    }\r\n}\r\nexport const connect = () => {\r\n    return {\r\n        type: CONNECT\r\n    }\r\n}\r\n\r\nexport const createSocket = (ws) => {\r\n    return {\r\n        type: SOCKET,\r\n        payload: {\r\n            'ws': ws\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeClientId = (clientId) => {\r\n    return {\r\n        type: CLIENT_ID,\r\n        payload: {\r\n            'clientId': clientId\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeGameId = (gameId) => {\r\n    return {\r\n        type: GAME_ID,\r\n        payload: {\r\n            'gameId': gameId\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeName = (name) => {\r\n    //console.log('dispatching storename')\r\n    return {\r\n        type: NAME,\r\n        payload: {\r\n            'name': name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCreator = () => {\r\n    //console.log('dispatching storename')\r\n    return {\r\n        type: 'set_create'\r\n    }\r\n}","\r\n\r\nimport { UPDATE_POINTS, DRAW, GUESS, REMOVE_PLAYER, UPDATE_PLAYER_LIST, SET_LOCAL_STREAM, SET_REMOTE_STREAM, SET_REMOTE_CORDS } from \"../../utilities/constants\"\r\n\r\nexport const draw = (image) => {\r\n    return {\r\n        type: DRAW,\r\n        payload: {\r\n            'image': image.canvasEvent\r\n        }\r\n    }\r\n}\r\n\r\nexport const signalChatEvent = (chatEvent) => {\r\n    return {\r\n        type: GUESS,\r\n        payload: {\r\n            'chatEvent': chatEvent\r\n        }\r\n    }\r\n}\r\n\r\nexport const updatePlayerList = (updatePlayers) => {\r\n\r\n    return {\r\n        type: UPDATE_PLAYER_LIST,\r\n        payload: updatePlayers\r\n    }\r\n}\r\n\r\nexport const updatePoints = (points, id) => {\r\n    return {\r\n        type: UPDATE_POINTS,\r\n        payload: {\r\n            'points': points,\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const removePlayer = (id) => {\r\n    return {\r\n        type: REMOVE_PLAYER,\r\n        payload: {\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const remoteCords = (data) => {\r\n    return {\r\n        type: SET_REMOTE_CORDS,\r\n        payload: {\r\n            'cords': data.cords\r\n        }\r\n    }\r\n}\r\n\r\nexport const setLocalStream = (stream) => {\r\n    return {\r\n        type: SET_LOCAL_STREAM,\r\n        payload: {\r\n            'stream': stream\r\n        }\r\n    }\r\n}\r\n\r\nexport const setRemoteStream = (stream, id) => {\r\n    return {\r\n        type: SET_REMOTE_STREAM,\r\n        payload: {\r\n            'stream': stream,\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const setChoice = (words) => {\r\n    return {\r\n        type: 'CHOICE',\r\n        payload: {\r\n            'words': words\r\n        }\r\n    }\r\n}\r\n\r\nexport const setSelector = (name) => {\r\n    return {\r\n        type: 'SELECTOR',\r\n        payload: {\r\n            'name': name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setWordHint = (hint) => {\r\n    return {\r\n        type: 'HINT',\r\n        payload: {\r\n            'hint': hint\r\n        }\r\n    }\r\n}\r\n\r\nexport const endGame = (playerlist) => {\r\n    return {\r\n        type: 'end_game',\r\n        payload: {\r\n            'playerlist': playerlist\r\n        }\r\n    }\r\n}","import eventHandler from \"../../utilities/eventHandler\"\r\n\r\nconst { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } = require(\"../../utilities/constants\")\r\nconst { wsConnect, wsDisconnect } = require(\"../actions/socketActions\")\r\n\r\n\r\nconst socketMiddleware = () => {\r\n\r\n    let socket = null\r\n    let host = ''\r\n\r\n    const onMessage = (store) => (event) => {\r\n        eventHandler(event, store.dispatch, store.getState())\r\n\r\n    }\r\n\r\n    const onOpen = (store) => (event) => {\r\n        console.log(\"web socket connection opened\")\r\n    }\r\n\r\n    const onClose = (store) => (event) => {\r\n        console.log(\"web socket connection closed\")\r\n    }\r\n\r\n    // middleware\r\n    return store => next => action => {\r\n\r\n        switch (action.type) {\r\n\r\n            case WS_CONNECT:\r\n\r\n                console.log('middle ware', WS_CONNECT)\r\n                if (socket != null) {\r\n                    socket.close()\r\n                    host = ''\r\n                }\r\n                socket = new WebSocket(action.host)\r\n\r\n                // register handlers\r\n                socket.onmessage = onMessage(store)\r\n                socket.onclose = onClose(store)\r\n                socket.onopen = onOpen(store)\r\n                break;\r\n\r\n            case WS_DISCONNECT:\r\n\r\n                console.log('reducer', WS_DISCONNECT)\r\n                if (socket != null) {\r\n                    socket.close()\r\n                }\r\n                socket = null\r\n                host = ''\r\n                break;\r\n            case WS_SEND_MESSAGE:\r\n\r\n                console.log(\"sending the message\", action.payload)\r\n                socket.send(JSON.stringify(action.payload))\r\n                break;\r\n            default:\r\n                console.log(\"default action\", action.type, \" not found\")\r\n        }\r\n\r\n\r\n        return next(action)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default socketMiddleware","import { DRAW, UPDATE_POINTS, ADD_PLAYER, SET_REMOTE_CORDS, REMOVE_PLAYER, SET_LOCAL_STREAM, SET_REMOTE_STREAM, UPDATE_PLAYER_LIST } from \"../../utilities/constants\"\r\n\r\n\r\n\r\n\r\nconst intialState = {\r\n    players: [],\r\n    localStream: null,\r\n    remoteCords: [0, 0, 0, 0],\r\n    receivedDrawEvent: false,\r\n    image: null,\r\n    choice: null,\r\n    selector: null,\r\n    hint: null,\r\n    playerlist: null//will be populated on end_game event\r\n}\r\n\r\nexport default function gameReducer(state = intialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case UPDATE_PLAYER_LIST:\r\n            return {\r\n                ...state,\r\n                players: action.payload.playerlist\r\n            }\r\n\r\n        case UPDATE_POINTS:\r\n            return {\r\n                ...state,\r\n                players: state.players.map(player => {\r\n\r\n                    if (player.id == action.payload.id) {\r\n                        player.points++;\r\n                    }\r\n\r\n                    return player\r\n                })\r\n            }\r\n\r\n        case REMOVE_PLAYER:\r\n            return {\r\n                ...state,\r\n                players: state.players.filter(player => player.id != action.payload.id)\r\n            }\r\n\r\n        case DRAW:\r\n            return {\r\n                ...state,\r\n                image: action.payload.image\r\n            }\r\n\r\n        case SET_REMOTE_CORDS:\r\n            return {\r\n                ...state,\r\n                remoteCords: action.payload.cords,\r\n                receivedDrawEvent: !state.receivedDrawEvent\r\n            }\r\n\r\n        case SET_LOCAL_STREAM:\r\n            return {\r\n                ...state,\r\n                localStream: action.payload.stream\r\n            }\r\n\r\n        case SET_REMOTE_STREAM:\r\n            var modifiedPlayers = JSON.parse(JSON.stringify(state.players))\r\n            console.log('setremotestream game reducer')\r\n            console.log(modifiedPlayers)\r\n            modifiedPlayers.forEach((player) => {\r\n                if (player.id == action.payload.id) {\r\n                    player.remoteStream = action.payload.stream\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                players: modifiedPlayers\r\n            }\r\n\r\n        case 'CHOICE':\r\n            return {\r\n                ...state,\r\n                choice: action.payload.words\r\n            }\r\n\r\n        case 'SELECTOR':\r\n            return {\r\n                ...state,\r\n                selector: action.payload.name\r\n            }\r\n\r\n        case 'HINT':\r\n            return {\r\n                ...state,\r\n                hint: JSON.parse(JSON.stringify(action.payload.hint))\r\n            }\r\n\r\n        case 'end_game':\r\n            return {\r\n                ...state,\r\n                playerlist: action.payload.playerlist\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport reduxThunk from 'redux-thunk'\r\nimport socketMiddleware from \"./middleware/middleware\"\r\nimport gameReducer from \"./reducers/gameReducers\"\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    game: gameReducer\r\n})\r\n\r\nconst middleware = [\r\n    reduxThunk,\r\n    socketMiddleware()\r\n]\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useState } from 'react'\r\nimport \"./Player.css\"\r\n\r\nfunction Player(props) {\r\n\r\n\r\n    const [mute, setmute] = useState(false)\r\n\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            localStream: state.game.localStream\r\n\r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n    const inverse = () => {\r\n\r\n\r\n        // need to get access to the audioEvents in the dom\r\n        // so we can change the volume\r\n        // this is a hack\r\n        const audioEvents = document.getElementById('audioEvents')\r\n        console.log(audioEvents)\r\n        let childNodes = audioEvents.childNodes;\r\n\r\n        console.log(\"clicked element id\", props.id)\r\n\r\n        if (state.clientId == props.id && state.localStream != null) {\r\n            console.log(\"self mute\")\r\n            if (mute) {\r\n                state.localStream.getAudioTracks().forEach(track => track.enabled = true)\r\n            }\r\n            else {\r\n                state.localStream.getAudioTracks().forEach(track => track.enabled = false)\r\n            }\r\n            setmute(!mute)\r\n            return;\r\n        }\r\n\r\n\r\n        // iterate over the child nodes\r\n        childNodes.forEach((child) => {\r\n\r\n            // setmute only if the child is the one we are looking for\r\n            if (child.getAttribute(\"id\") == props.id) {\r\n\r\n                console.log(\"action on\", props.name)\r\n                const remoteStream = child.srcObject\r\n\r\n\r\n\r\n                if (remoteStream != null) {\r\n                    // console.log(\"tracks\", child.srcObject.getAudioTracks())\r\n                    if (mute) {\r\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = true)\r\n                    }\r\n                    else {\r\n                        child.srcObject.getAudioTracks().forEach(track => track.enabled = false)\r\n                    }\r\n                    \r\n                    setmute(!mute)\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"player\" style={{ color: props.id == state.clientId ? 'black' : '#6a4c93' }}>\r\n            <div>\r\n                {props.name}\r\n            </div>\r\n            <div>\r\n                <span>{props.points}</span>\r\n            </div>\r\n\r\n            \r\n            <div>\r\n                {mute ?\r\n                <span className=\"material-icons\" onClick={inverse}>volume_off</span> :\r\n                <span className=\"material-icons\" onClick={inverse}>volume_up</span>\r\n                }  \r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Player from './Player'\r\nimport \"./LeaderBoard.css\"\r\n\r\nfunction LeaderBoard(props) {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const players = useSelector(state => state.game.players)\r\n\r\n\r\n    const listItems = players.map((player) => <Player key={player.id} id={player.id} name={player.name} points={player.points} />);\r\n\r\n\r\n    return (\r\n        <div className=\"leader-board-container\">\r\n\r\n            <div className=\"player-details-container\">\r\n                {listItems}\r\n            </div>\r\n\r\n            <div className=\"copyCode\">\r\n                <input type=\"button\" value=\"Copy GameCode\" onClick={props.copyCode} /> \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default LeaderBoard\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { wsSendMessage } from \"../Redux/actions/socketActions\";\r\nimport events from '../utilities/constants'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { remoteCords } from \"../Redux/actions/gameActions\";\r\n\r\n\r\n\r\nlet x1, y1, x2, y2;\r\n\r\n\r\nconst Canvas = (props) => {\r\n\r\n    let canDraw = props.canDraw\r\n    const [isDrawing, setIsDrawing] = useState(false);\r\n    const canvasRef = useRef(null);\r\n    const contextRef = useRef(null);\r\n\r\n    const dispatch = useDispatch()\r\n    let interval;\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            gameId: state.user.gameId,\r\n            remoteCords: state.game.remoteCords,\r\n            image: state.game.image,\r\n            receivedDrawEvent: state.game.receivedDrawEvent,\r\n            choice: state.game.choice,\r\n            selector: state.game.selector\r\n        }\r\n    })\r\n\r\n    console.log(\"remote\", state.remoteCords)\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        canvas.width = parseInt(getComputedStyle(document.querySelector('#canvasElement')).getPropertyValue('width'))\r\n        canvas.height = window.innerHeight;\r\n        canvas.style.width = `100%`;\r\n        canvas.style.height = `100%`;\r\n        const context = canvas.getContext(\"2d\");\r\n        //context.scale(2, 2);\r\n        context.lineCap = \"round\";\r\n        context.strokeStyle = \"black\";\r\n        context.lineWidth = 2;\r\n        contextRef.current = context;\r\n\r\n        // window.onresize = () => {\r\n\r\n        //     console.log(\"resize\")\r\n        //     const canvas = canvasRef.current;\r\n        //     canvas.style.width = '100%';\r\n        //     canvas.style.height = '100%';\r\n        //     canvas.width = canvas.offsetWidth;\r\n        //     canvas.height = canvas.offsetHeight;\r\n        // }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"received new cords\", state.remoteCords)\r\n        const [oldx, oldy, newx, newy] = state.remoteCords;\r\n\r\n        const lines = JSON.parse(sessionStorage.getItem(\"currentState\"))\r\n\r\n        console.log(\"old cords\", lines)\r\n\r\n        if (lines != null) {\r\n\r\n            console.log(lines)\r\n            lines.map((cord) => {\r\n                console.log(\"cord\", cord)\r\n                const [oldx, oldy, newx, newy] = cord\r\n                drawLine(oldx, oldy, newx, newy)\r\n            })\r\n            sessionStorage.removeItem(\"currentState\")\r\n        }\r\n\r\n        drawLine(oldx, oldy, newx, newy)\r\n    }, [state.receivedDrawEvent])\r\n\r\n    const drawLine = (x1, y1, x2, y2) => {\r\n\r\n\r\n        contextRef.current.beginPath();\r\n        contextRef.current.moveTo(x1, y1);\r\n        contextRef.current.lineTo(x2, y2);\r\n        contextRef.current.stroke()\r\n        contextRef.current.closePath();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (state.choice !== null) {\r\n            clearCanvas()\r\n        }\r\n    }, [state.choice])\r\n\r\n    useEffect(() => {\r\n        if (state.selector !== null) {\r\n            clearCanvas()\r\n        }\r\n    }, [state.selector])\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (state.image != null) {\r\n            // var image = new Image();\r\n            // image.src = state.image;\r\n            // contextRef.current.drawImage(image, 0, 0)\r\n        }\r\n\r\n\r\n    }, [state.image])\r\n\r\n    function clearCanvas() {\r\n        const canvas = canvasRef.current\r\n        contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    //https://stackoverflow.com/questions/43955925/html5-responsive-canvas-mouse-position-and-resize\r\n    const getMousePosition = (e) => {\r\n        const canvas = canvasRef.current;\r\n        var mouseX = e.offsetX * canvas.width / canvas.clientWidth | 0;\r\n        var mouseY = e.offsetY * canvas.height / canvas.clientHeight | 0;\r\n        return { x: mouseX, y: mouseY };\r\n    }\r\n\r\n    const startDrawing = ({ nativeEvent }) => {\r\n        if (!canDraw) return\r\n        contextRef.current.beginPath();\r\n\r\n\r\n\r\n        x1 = getMousePosition(nativeEvent).x\r\n        y1 = getMousePosition(nativeEvent).y\r\n\r\n        contextRef.current.moveTo(x1, y1);\r\n        console.log('moved to ' + x1 + \", \" + y1)\r\n        setIsDrawing(true);\r\n    };\r\n\r\n    const finishDrawing = () => {\r\n        contextRef.current.closePath();\r\n        setIsDrawing(false);\r\n        clearInterval(interval)\r\n    };\r\n\r\n    const draw = ({ nativeEvent }) => {\r\n        if (!isDrawing) {\r\n            return;\r\n        }\r\n\r\n        x2 = getMousePosition(nativeEvent).x\r\n        y2 = getMousePosition(nativeEvent).y\r\n\r\n        console.log(x1, y1, x2, y2)\r\n\r\n        const payload = {\r\n            'method': events.SET_REMOTE_CORDS,\r\n            'gameId': state.gameId,\r\n            'clientId': state.clientId,\r\n            cords: [x1, y1, x2, y2]\r\n        }\r\n\r\n        dispatch(wsSendMessage(payload))\r\n\r\n        // interval = setInterval(() => {\r\n        //     dispatch(wsSendMessage(payload))\r\n        // }, 150)\r\n\r\n\r\n\r\n        contextRef.current.lineTo(x2, y2);\r\n        //console.log('line to ' + offsetX + \", \" + offsetY)\r\n        contextRef.current.stroke();\r\n        x1 = x2;\r\n        y1 = y2;\r\n    };\r\n\r\n    let canvasStyle = {\r\n        width: `100%`\r\n    }\r\n    return (\r\n        <canvas\r\n            onMouseDown={startDrawing}\r\n            onMouseUp={finishDrawing}\r\n            onMouseMove={draw}\r\n            ref={canvasRef}\r\n            id=\"canvasElement\"\r\n            style={canvasStyle}\r\n            disabled\r\n        />\r\n    );\r\n}\r\n\r\nexport default Canvas\r\n","import React, { Component, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\r\nimport events from '../../utilities/constants'\r\nimport './Chat.css'\r\n\r\n\r\nconst Chat = () => {\r\n    let [mic, flipMic] = useState(false);\r\n\r\n    let dispatch = useDispatch()\r\n    let state = useSelector(state => {\r\n        return {\r\n            clientId: state.user.clientId,\r\n            name: state.user.name,\r\n            gameId: state.user.gameId,\r\n            chatEvent: state.user.chatEvent\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('chatEvent:')\r\n        console.log(state.chatEvent)\r\n        addChatMessage(state.chatEvent)\r\n    }, [state.chatEvent])\r\n\r\n    const sendMessage = (message) => {\r\n        if (message === null) {\r\n            message = document.getElementsByClassName('textContainer')[0].value\r\n        }\r\n\r\n        message = message.trim()\r\n        if (message === '') return\r\n        console.log('id:' + state.clientId + \" name:\" + state.name + 'gameId:' + state.gameId)\r\n        message = {\r\n            'method': events.GUESS,\r\n            'guessWord': message,\r\n            'clientId': state.clientId,\r\n            'name': state.name,\r\n            'gameId': state.gameId\r\n        }\r\n\r\n        dispatch(wsSendMessage(message))\r\n        document.getElementsByClassName('textContainer')[0].value = ''\r\n    }\r\n\r\n    const addChatMessage = (message) => {\r\n        if (!message) {\r\n            console.log(\"Invalid message\")\r\n            return\r\n        }\r\n        console.log('addChatMessage message:')\r\n        console.log(message)\r\n        var messageDiv = createMessage(message)\r\n        document.getElementById(\"chatMessages\").innerHTML += messageDiv\r\n        let containerElement = document.getElementById('outerContainer')\r\n        containerElement.scrollTop = containerElement.scrollHeight\r\n    }\r\n\r\n    const createMessage = (message) => {\r\n        var isMine = message.clientId === state.clientId\r\n        console.log(message)\r\n        if (message.points) {\r\n            let str = (isMine ? 'You' : message.name) + ' got it right'\r\n            return (`<li class=notif>${str}</li>`)\r\n        }\r\n        var liClassName = isMine ? \"mine\" : \"their\"\r\n        let nameElement = '';\r\n        if (!isMine) {\r\n            nameElement = `<span class='senderName'>${(message.name)}</span>`;\r\n        }\r\n\r\n        return (`<li class='message ${liClassName}'>\r\n        <div class='messageContainer'>\r\n            ${nameElement}\r\n            <span class='messageBody'>\r\n                ${message.guessWord}\r\n            </span>\r\n        </div>\r\n    </li>`)\r\n    }\r\n\r\n    const handleMicFlip = () => {\r\n        flipMic(!mic)\r\n    }\r\n\r\n    let micElement = mic ?\r\n        <span className=\"material-icons micButton\"\r\n            onClick={() => handleMicFlip()}>mic</span> :\r\n        <span className=\"material-icons micButton\"\r\n            onClick={() => handleMicFlip()}>mic_off</span>\r\n\r\n    return (\r\n        <div className=\"outerContainer\" id=\"outerContainer\">\r\n            <div className=\"chatContainer\">\r\n                <div id=\"chatMessages\" className=\"chatMessages\">\r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <div className=\"footerContainer\">\r\n                    <input className=\"textContainer\"\r\n                        id=\"textInputContainer\"\r\n                        placeholder={'Type a message...'}\r\n                        onKeyPress={(event) => event.key === 'Enter' ? sendMessage(event.target.value) : null}\r\n                    />\r\n                    <i className=\"material-icons sendButton\"\r\n                        onClick={() => sendMessage(null)}>send</i>\r\n                    {micElement}\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat","import React, { Component } from 'react';\r\nimport './modal.css'\r\nconst Modal = ({ handleClose, show, children }) => {\r\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <section className='modal-main'>\r\n                {children}\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\nexport default Modal","import React, { useEffect, useState } from 'react'\r\nimport LeaderBoard from '../../components/LeaderBoard'\r\nimport Canvas from '../../components/canvas'\r\nimport Chat from '../../components/Chat/Chat'\r\nimport Modal from '../../components/modal'\r\nimport './gamePage.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport events from '../../utilities/constants'\r\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\r\nimport { setWordHint } from '../../Redux/actions/gameActions'\r\n\r\nfunction GamePage() {\r\n\r\n    let history = useHistory()\r\n    let dispatch = useDispatch()\r\n\r\n    let [childrenContent, setChildrenContent] = useState(null)\r\n    let [canDraw, flipDrawState] = useState(false)\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            gameId: state.user.gameId,\r\n            clientId: state.user.clientId,\r\n            isCreator: state.user.isCreator,\r\n            choice: state.game.choice,\r\n            selector: state.game.selector,\r\n            hint: state.game.hint,\r\n            playerlist: state.game.playerlist\r\n        }\r\n    })\r\n\r\n    const [showModal, setModal] = useState(state.isCreator)\r\n\r\n\r\n    useEffect(() => {\r\n        if (state.choice !== null) {\r\n            setModal(true)\r\n            console.log(state.choice)\r\n\r\n            setChildrenContent(<div>\r\n                <p>choose a word</p>\r\n                {state.choice.map((word) => {\r\n                    return <button key={word} onClick={() => { handleChoiceSelection(word) }}>{word}</button>\r\n                })}\r\n            </div>)\r\n        }\r\n    }, [state.choice])\r\n\r\n    useEffect(() => {\r\n        if (state.selector !== null) {\r\n            dispatch(setWordHint(null))\r\n            flipDrawState(false)\r\n            setModal(true)\r\n            setChildrenContent(<div>\r\n                <p>Please wait {state.selector} is choosing a word</p>\r\n            </div>)\r\n        }\r\n    }, [state.selector])\r\n\r\n    useEffect(() => {\r\n        if (state.gameId === null) {\r\n            moveToHomePage()\r\n        }\r\n    }, [state.gameId])\r\n\r\n    useEffect(() => {\r\n        setChildrenContent(<div>Click here to copy the game code\r\n            <span className=\"material-icons copyButton\" onClick={copyGameCode}>content_copy</span>\r\n            <button onClick={handleStartGameClose}>Start Game!</button></div>)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('hint useeffect')\r\n        if (state.hint !== null) {\r\n            console.log('hint:', state.hint)\r\n            setModal(false)\r\n        }\r\n    }, [state.hint])\r\n\r\n    useEffect(() => {\r\n        if (state.playerlist !== null) {\r\n            let playerlist = state.playerlist\r\n            playerlist.sort((a, b) => (a.points > b.points) ? -1 : 1)\r\n            console.log('playlist')\r\n            console.log(playerlist)\r\n            console.log(typeof playerlist)\r\n            setModal(true)\r\n            setChildrenContent(<div>\r\n                <p>Leader Board</p>\r\n                {state.playerlist.map((entry) => {\r\n                    return (<div key={entry.id}>\r\n                        <p>{entry.name}</p>\r\n                        <p>{entry.points}</p>\r\n                    </div>)\r\n                })}\r\n                <p>Game Ended!!!</p>\r\n            </div>)\r\n\r\n        }\r\n    }, [state.playerlist])\r\n\r\n    function moveToHomePage() {\r\n        history.push('/')\r\n    }\r\n\r\n    function handleChoiceSelection(word) {\r\n        let choicePayload = {\r\n            'method': 'choice',\r\n            'word': word,\r\n            'clientId': state.clientId,\r\n            'gameId': state.gameId\r\n        }\r\n        setModal(false)\r\n        dispatch(wsSendMessage(choicePayload))\r\n        flipDrawState(true)\r\n    }\r\n\r\n    function handleStartGameClose() {\r\n        let startGamePayload = {\r\n            'method': events.START_GAME,\r\n            gameId: state.gameId\r\n        }\r\n        setModal(false)\r\n        dispatch(wsSendMessage(startGamePayload))\r\n\r\n\r\n    }\r\n\r\n    function copyGameCode() {\r\n        const gameCode = window.location.pathname.split(\"/\")[2]\r\n        console.log(gameCode)\r\n        navigator.clipboard.writeText(gameCode)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"gamePageContainer\">\r\n\r\n\r\n            <div className=\"leaderBoard\">\r\n                <LeaderBoard  copyCode = {copyGameCode} />\r\n            </div>\r\n            <div className =\"canvas\">\r\n                <Canvas canDraw={canDraw} />\r\n            </div>\r\n            <div className = \"chatBox\">\r\n                <Chat />\r\n            </div>\r\n\r\n            <div id=\"audioEvents\">\r\n            </div>\r\n\r\n            <Modal id=\"modal\" show={showModal} children={childrenContent} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GamePage\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { wsConnect } from '../../Redux/actions/socketActions';\r\nimport { createGame, storeName, storeGameId, setCreator } from '../../Redux/actions/userActions';\r\nimport axios from 'axios';\r\nimport './LandingPage.css'\r\nimport config from '../../config'\r\n\r\nfunction LandingPage() {\r\n\r\n\r\n    console.log(\"render landing\")\r\n\r\n    const [join, setJoin] = React.useState(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            gameId: state.user.gameId,\r\n            name: state.user.name,\r\n            isClientCreated: state.user.isClientCreated,\r\n            isGameCreated: state.user.isGameCreated\r\n        }\r\n    })\r\n\r\n\r\n    const createButtonHandler = () => {\r\n        // first send a get request to create game\r\n        // store the gameid and client id redux thunk\r\n        dispatch(setCreator())\r\n        dispatch(storeName(document.getElementById('name').value))\r\n        dispatch(createGame())\r\n            .then(path => {\r\n                if (path != '') {\r\n                    console.log('config.url:')\r\n                    console.log(config)\r\n                    //dispatch(wsConnect('wss://drawasarus.herokuapp.com/'))\r\n                    dispatch(wsConnect(config.WS_URL))\r\n                    history.push(path)\r\n                }\r\n            })\r\n    }\r\n\r\n    const joinButtonHandler = async () => {\r\n\r\n        console.log(\"joinButtonHandler\")\r\n        dispatch(storeName(document.getElementById('name').value))\r\n        let gameId = document.getElementById('gameId').value\r\n        let headers = {\r\n            \"gameId\": gameId\r\n        }\r\n        let resp = await axios.get(config.URL + \"isValidGame\", { headers })\r\n        console.log(resp.data)\r\n        if (!resp || !resp.data || !resp.data['valid']) {\r\n            alert(\"Game id is Invalid. Please check again\")\r\n            return\r\n        }\r\n\r\n        dispatch(storeGameId(gameId))\r\n        dispatch(wsConnect(config.WS_URL))\r\n        history.push('game/' + gameId)\r\n    }\r\n\r\n    return (\r\n        <div className=\"LandingPage\" >\r\n            <div className=\"well\">\r\n                <div className=\"row selectors \">\r\n                    <input type=\"text\" className=\"create\" defaultValue=\"Create\" readOnly onClick={() => { setJoin(false) }}></input>\r\n                    <input type=\"text\" className=\"join\" defaultValue=\"Join\" readOnly onClick={() => { setJoin(true) }}></input>\r\n                </div>\r\n\r\n                {join ?\r\n                    <div className=\"row joinCell\">\r\n                        <div className=\"input-container\">\r\n\r\n                            <input type=\"text\" id=\"name\" placeholder=\"Enter Your Name\" />\r\n                            <input type=\"text\" id=\"gameId\" placeholder=\"Enter Game Id\" />\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input type=\"button\" value=\"Join\" onClick={joinButtonHandler} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    :\r\n                    <div className=\"row createCell\">\r\n                        <input type=\"text\" id=\"name\" placeholder=\"Enter Your Name\" />\r\n                        <input type=\"button\" value=\"Create\" onClick={createButtonHandler} />\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport GamePage from './Pages/GamePage/GamePage'\r\nimport LandingPage from './Pages/LandingPage/LandingPage'\r\n\r\nfunction Playground(props) {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <LandingPage props={props} />\r\n            </Route>\r\n            <Route path=\"/game/:code\">\r\n                <GamePage />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Playground\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport store from './Redux/store';\r\nimport Playground from './Playground';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div className=\"playGroundContainer\">\r\n        <Playground props={store} />\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}