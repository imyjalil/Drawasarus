{"version":3,"sources":["utilities/constants.js","Redux/actions/socketActions.js","reportWebVitals.js","Redux/reducers/userReducer.js","utilities/eventHandler.js","Redux/actions/userActions.js","Redux/actions/gameActions.js","Redux/middleware/middleware.js","Redux/reducers/gameReducers.js","Redux/store.js","components/Player.js","components/LeaderBoard.js","components/canvas.js","components/Chat/Chat.js","components/modal.js","Pages/GamePage/GamePage.jsx","Pages/LandingPage/LandingPage.jsx","Playground.jsx","index.js"],"names":["module","exports","JOIN_GAME","CREATE_GAME","DRAW","GUESS","WORD_SELECT","CONNECT","SOCKET","GAME_ID","CLIENT_ID","NAME","WS_CONNECT","WS_DISCONNECT","WS_SEND_MESSAGE","UPDATE_PLAYER_LIST","REMOVE_PLAYER","MUTE","UNMUTE","SET_LOCAL_STREAM","SET_REMOTE_STREAM","SET_REMOTE_CORDS","wsConnect","host","type","wsDisconnect","wsSendMessage","payload","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initalState","gameId","name","clientId","chatEvent","localStream","serverURL","process","port","storeClientId","storeGameId","storeName","remoteCords","data","cords","connections","remoteStreams","mediaConstraints","audio","video","iceServers","urls","addLocalTracks","rtcPeerConnection","getTracks","forEach","track","addTrack","eventHandler","event","dispatch","state","a","JSON","parse","method","events","joinPayload","user","navigator","mediaDevices","getUserMedia","sessionStorage","setItem","otherUser","prevClients","clients","undefined","Promise","r","setTimeout","player","RTCPeerConnection","ontrack","audioElement","document","createElement","autoplay","srcObject","streams","getElementById","appendChild","onicecandidate","candidate","iceCandidatePayload","label","sdpMLineIndex","createOffer","sessionDescription","setLocalDescription","webRTCOfferPayload","sdp","updatePlayers","id","senderId","setRemoteDescription","RTCSessionDescription","createAnswer","webRTCAnswerPayload","RTCIceCandidate","addIceCandidate","require","socketMiddleware","socket","store","next","action","close","WebSocket","onmessage","getState","onMessage","onclose","onopen","send","stringify","intialState","players","receivedDrawEvent","rootReducer","combineReducers","ws","game","playerlist","filter","stream","modifiedPlayers","remoteStream","middleware","reduxThunk","createStore","compose","applyMiddleware","Player","props","useState","mute","setmute","inverse","className","points","onClick","LeaderBoard","x1","y1","x2","y2","useDispatch","listItems","useSelector","map","Canvas","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","useEffect","canvas","current","width","parseInt","getComputedStyle","querySelector","getPropertyValue","height","window","innerHeight","style","context","getContext","lineCap","strokeStyle","lineWidth","oldx","oldy","newx","newy","moveTo","lineTo","stroke","getMousePosition","e","x","offsetX","clientWidth","y","offsetY","clientHeight","onMouseDown","nativeEvent","beginPath","onMouseUp","closePath","onMouseMove","ref","Chat","mic","flipMic","addChatMessage","sendMessage","message","getElementsByClassName","value","trim","messageDiv","createMessage","innerHTML","containerElement","scrollTop","scrollHeight","isMine","liClassName","nameElement","guessWord","handleMicFlip","micElement","placeholder","onKeyPress","key","target","Modal","handleClose","show","children","showHideClassName","defaultValue","GamePage","PORT","webSocketURL","LandingPage","history","useHistory","isClientCreated","isGameCreated","joinButtonHandler","headers","axios","get","resp","alert","push","post","response","catch","error","path","Playground","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.4c872404.chunk.js","sourcesContent":["module.exports = {\r\n    JOIN_GAME: 'join',\r\n    CREATE_GAME: 'create',\r\n    DRAW: 'draw',\r\n    GUESS: 'guess',\r\n    WORD_SELECT: 'wordselect',\r\n    CONNECT: 'connect',\r\n    SOCKET: 'socket',\r\n    GAME_ID: 'gameId',\r\n    CLIENT_ID: 'clientId',\r\n    NAME: 'name',\r\n    WS_CONNECT: 'ws_connect',\r\n    WS_DISCONNECT: 'ws_disconnect',\r\n    WS_SEND_MESSAGE: 'ws_message',\r\n    UPDATE_PLAYER_LIST: 'update_player_list',\r\n    REMOVE_PLAYER: 'remove_player',\r\n    MUTE: 'mute',\r\n    UNMUTE: 'unmute',\r\n    SET_LOCAL_STREAM: 'localstream',\r\n    SET_REMOTE_STREAM: 'remotestream',\r\n    SET_REMOTE_CORDS: 'cords'\r\n}","import { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } from \"../../utilities/constants\"\r\n\r\n\r\nexport const wsConnect = (host) => {\r\n    return {\r\n        type: WS_CONNECT,\r\n        host: host\r\n    }\r\n}\r\n\r\nexport const wsDisconnect = (host) => {\r\n    return {\r\n        type: WS_DISCONNECT,\r\n        host: host\r\n    }\r\n}\r\n\r\nexport const wsSendMessage = (payload) => {\r\n    console.log('dispatching sendmessage')\r\n    return {\r\n        type: WS_SEND_MESSAGE,\r\n        payload: payload\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CLIENT_ID, GAME_ID, NAME, SOCKET, GUESS } from \"../../utilities/constants\";\r\n\r\nconst initalState = {\r\n    gameId: '',\r\n    name: '',\r\n    clientId: '',\r\n    chatEvent: null\r\n}\r\n\r\n\r\n\r\nexport default function userReducer(state = initalState, action) {\r\n    //console.log(\"In user reducer\", action.type)\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        case SOCKET:\r\n            //console.log(\"update socket\", action)\r\n            return {\r\n                ...state,\r\n                ws: action.payload['ws']\r\n            }\r\n        case GAME_ID:\r\n            return {\r\n                ...state,\r\n                gameId: action.payload['gameId']\r\n            }\r\n\r\n        case CLIENT_ID:\r\n            return {\r\n                ...state,\r\n                clientId: action.payload['clientId']\r\n            }\r\n\r\n        case NAME:\r\n            return {\r\n                ...state,\r\n                name: action.payload['name']\r\n            }\r\n\r\n        case GUESS:\r\n            //console.log('in guess reducer')\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                chatEvent: action.payload['chatEvent']\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { storeClientId, storeGameId } from '../Redux/actions/userActions';\r\nimport { removePlayer, signalChatEvent, updatePlayerList, remoteCords } from '../Redux/actions/gameActions';\r\nimport { wsSendMessage } from '../Redux/actions/socketActions';\r\nimport events from './constants';\r\n\r\nlet localStream;\r\nlet connections = {};\r\nlet remoteStreams = {};\r\n\r\nconst mediaConstraints = {\r\n    audio: true,\r\n    video: false\r\n}\r\n\r\n// const mediaConstraints = {\r\n//     audio: true,\r\n//     video: { width: 1280, height: 720 },\r\n// }\r\n\r\nconst iceServers = {\r\n    iceServers: [\r\n        { urls: 'stun:stun.l.google.com:19302' },\r\n        { urls: 'stun:stun1.l.google.com:19302' },\r\n        { urls: 'stun:stun2.l.google.com:19302' },\r\n        { urls: 'stun:stun3.l.google.com:19302' },\r\n        { urls: 'stun:stun4.l.google.com:19302' },\r\n    ],\r\n}\r\n\r\nfunction addLocalTracks(rtcPeerConnection) {\r\n    console.log('addLocalTracks:')\r\n    console.log(localStream)\r\n    localStream.getTracks().forEach((track) => {\r\n        rtcPeerConnection.addTrack(track, localStream)\r\n    })\r\n}\r\n\r\nconst eventHandler = async (event, dispatch, state) => {\r\n\r\n\r\n    console.log('event received:')\r\n    if (event && event.data) {\r\n        let data = JSON.parse(event.data)\r\n\r\n        console.log(data)\r\n        if (data && data.method) {\r\n            console.log('In event, handler event type:' + data.method)\r\n\r\n            switch (data.method) {\r\n\r\n                case events.CONNECT:\r\n                    //console.log('connect event');\r\n                    let clientId = data.clientId;\r\n\r\n                    console.log(\"dispatch client id\")\r\n                    dispatch(storeClientId(clientId))\r\n\r\n                    let joinPayload = {\r\n                        'method': events.JOIN_GAME,\r\n                        'clientId': clientId,\r\n                        'gameId': state.user.gameId,\r\n                        'name': state.user.name\r\n                    }\r\n\r\n                    dispatch(wsSendMessage(joinPayload))\r\n\r\n                    localStream = await navigator.mediaDevices.getUserMedia(mediaConstraints)\r\n                    console.log('localStream fetched:')\r\n                    console.log(localStream)\r\n                    break;\r\n                case events.CREATE_GAME:\r\n\r\n                    let gameId = data.gameId\r\n                    dispatch(storeGameId(gameId))\r\n                    sessionStorage.setItem('gameId', gameId);\r\n                    break;\r\n\r\n                case events.JOIN_GAME:\r\n                    let otherUser = data.name\r\n                    console.log(otherUser, \"Joined\")\r\n                    break;\r\n\r\n                case events.GUESS:\r\n                    dispatch(signalChatEvent(data))\r\n                    break;\r\n\r\n                case events.SET_REMOTE_CORDS:\r\n                    dispatch(remoteCords(data))\r\n                    break;\r\n\r\n                case 'prevClients':\r\n                    let prevClients = data.clients\r\n                    while (localStream == null || localStream == undefined) {\r\n                        await new Promise(r => setTimeout(r, 100));\r\n                    }\r\n                    for (let player of prevClients) {\r\n                        console.log(\"--> new player\", player)\r\n                        console.log(state)\r\n                        let rtcPeerConnection = new RTCPeerConnection(iceServers)\r\n                        connections[player] = rtcPeerConnection\r\n                        addLocalTracks(rtcPeerConnection)\r\n\r\n                        rtcPeerConnection.ontrack = (event) => {\r\n                            //create an audio element and attach stream to it\r\n                            console.log('9848022338 prevclients')\r\n                            console.log(event)\r\n                            let audioElement = document.createElement(\"video\")\r\n                            audioElement.autoplay = \"autoplay\"\r\n                            audioElement.srcObject = event.streams[0]\r\n                            document.getElementById('audioEvents').appendChild(audioElement)\r\n                            remoteStreams[player] = event.streams[0]\r\n                        }\r\n                        rtcPeerConnection.onicecandidate = (event) => {\r\n                            if (event.candidate) {\r\n                                let iceCandidatePayload = {\r\n                                    'method': 'sendIceCandidate',\r\n                                    'senderId': state.user.clientId,\r\n                                    'receiverId': player,\r\n                                    label: event.candidate.sdpMLineIndex,\r\n                                    candidate: event.candidate.candidate\r\n                                }\r\n                                dispatch(wsSendMessage(iceCandidatePayload))\r\n                            }\r\n                        }\r\n                        console.log('before offer creation')\r\n                        let offercreation = await async function () {\r\n                            console.log('in offer creation')\r\n                            let sessionDescription\r\n                            try {\r\n                                sessionDescription = await rtcPeerConnection.createOffer()\r\n                                rtcPeerConnection.setLocalDescription(sessionDescription)\r\n                                console.log('offer creation succeeded')\r\n                            } catch (error) {\r\n                                console.log('error in setting session desc')\r\n                            }\r\n\r\n                            let webRTCOfferPayload = {\r\n                                'method': 'webRTCOffer',\r\n                                sdp: sessionDescription,\r\n                                'senderId': state.user.clientId,\r\n                                'receiverId': player\r\n                            }\r\n                            console.log('sending offer websocket')\r\n                            dispatch(wsSendMessage(webRTCOfferPayload))\r\n                        }()\r\n                    }\r\n                    break\r\n\r\n                case events.UPDATE_PLAYER_LIST:\r\n                    console.log(\"updating the playerlist\")\r\n                    dispatch(updatePlayerList(data))\r\n                    break\r\n\r\n                case events.REMOVE_PLAYER:\r\n                    dispatch(removePlayer(data.id))\r\n                    break;\r\n\r\n                case 'webRTCOffer':\r\n                    console.log('webrtcoffer')\r\n                    console.log(data)\r\n                    let rtcPeerConnection = new RTCPeerConnection(iceServers)\r\n                    connections[data.senderId] = rtcPeerConnection\r\n                    addLocalTracks(rtcPeerConnection)\r\n\r\n                    rtcPeerConnection.ontrack = (event) => {\r\n                        //create an audio element and attach stream to it\r\n                        console.log('9848022338 offer')\r\n                        console.log(event)\r\n                        let audioElement = document.createElement(\"video\")\r\n                        audioElement.autoplay = \"autoplay\"\r\n                        audioElement.srcObject = event.streams[0]\r\n                        document.getElementById('audioEvents').appendChild(audioElement)\r\n                        remoteStreams[data.senderId] = event.streams[0]\r\n                    }\r\n\r\n                    rtcPeerConnection.onicecandidate = (event) => {\r\n                        if (event.candidate) {\r\n                            let iceCandidatePayload = {\r\n                                'method': 'sendIceCandidate',\r\n                                'senderId': state.user.clientId,\r\n                                'receiverId': data.senderId,\r\n                                label: event.candidate.sdpMLineIndex,\r\n                                candidate: event.candidate.candidate\r\n                            }\r\n                            dispatch(wsSendMessage(iceCandidatePayload))\r\n                        }\r\n                    }\r\n\r\n\r\n                    rtcPeerConnection.setRemoteDescription(new RTCSessionDescription(data.sdp))\r\n\r\n                    let answerCreation = await async function () {\r\n                        console.log('in offer creation')\r\n                        let sessionDescription\r\n                        try {\r\n                            sessionDescription = await rtcPeerConnection.createAnswer()\r\n                            rtcPeerConnection.setLocalDescription(sessionDescription)\r\n                            console.log('offer creation succeeded')\r\n                        } catch (error) {\r\n                            console.log('error in setting session desc')\r\n                        }\r\n\r\n                        let webRTCAnswerPayload = {\r\n                            'method': 'webRTCAnswer',\r\n                            sdp: sessionDescription,\r\n                            'senderId': state.user.clientId,\r\n                            'receiverId': data.senderId\r\n                        }\r\n                        console.log('sending answer websocket')\r\n                        dispatch(wsSendMessage(webRTCAnswerPayload))\r\n                    }()\r\n                    break\r\n\r\n                case 'webRTCAnswer':\r\n                    connections[data.senderId].setRemoteDescription(data.sdp)\r\n                    break\r\n\r\n                case 'sendIceCandidate':\r\n                    let candidate = new RTCIceCandidate({\r\n                        sdpMLineIndex: data.label,\r\n                        candidate: data.candidate\r\n                    })\r\n                    connections[data.senderId].addIceCandidate(candidate)\r\n                    break\r\n\r\n                default:\r\n                    console.log('other event:' + data.method)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default eventHandler;","import { CLIENT_ID, CONNECT, GAME_ID, JOIN_GAME, NAME, SOCKET, } from '../../utilities/constants';\r\nimport axios from 'axios'\r\n\r\nconst PORT = process.env.port || 9091\r\nconst serverURL = \"http://localhost:\" + PORT + \"/\"\r\nexport const createGame = (roomName) => (dispatch) => {\r\n    return axios.post(serverURL + \"create-game\")\r\n        .then(response => {\r\n            console.log(response.data)\r\n            response = response.data\r\n            dispatch(storeGameId(response.gameId))\r\n            return `game/${response.gameId}`\r\n        })\r\n        .catch(error => {\r\n            return ''\r\n            // need to dispatch game create failed action\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const joinGame = () => {\r\n    return {\r\n        type: JOIN_GAME\r\n    }\r\n}\r\nexport const connect = () => {\r\n    return {\r\n        type: CONNECT\r\n    }\r\n}\r\n\r\nexport const createSocket = (ws) => {\r\n    return {\r\n        type: SOCKET,\r\n        payload: {\r\n            'ws': ws\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeClientId = (clientId) => {\r\n    return {\r\n        type: CLIENT_ID,\r\n        payload: {\r\n            'clientId': clientId\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeGameId = (gameId) => {\r\n    return {\r\n        type: GAME_ID,\r\n        payload: {\r\n            'gameId': gameId\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeName = (name) => {\r\n    //console.log('dispatching storename')\r\n    return {\r\n        type: NAME,\r\n        payload: {\r\n            'name': name\r\n        }\r\n    }\r\n}\r\n\r\n","\r\n\r\nimport { CORDS, DRAW, GUESS, ADD_PLAYER, REMOVE_PLAYER, UPDATE_PLAYER_LIST, SET_LOCAL_STREAM, SET_REMOTE_STREAM, SET_REMOTE_CORDS } from \"../../utilities/constants\"\r\n\r\nexport const draw = () => {\r\n    return {\r\n        type: DRAW\r\n    }\r\n}\r\n\r\nexport const signalChatEvent = (chatEvent) => {\r\n    return {\r\n        type: GUESS,\r\n        payload: {\r\n            'chatEvent': chatEvent\r\n        }\r\n    }\r\n}\r\n\r\nexport const updatePlayerList = (updatePlayers) => {\r\n\r\n    return {\r\n        type: UPDATE_PLAYER_LIST,\r\n        payload: updatePlayers\r\n    }\r\n}\r\n\r\nexport const removePlayer = (id) => {\r\n    return {\r\n        type: REMOVE_PLAYER,\r\n        payload: {\r\n            'id': id\r\n        }\r\n    }\r\n}\r\n\r\nexport const remoteCords = (data) => {\r\n    return {\r\n        type: SET_REMOTE_CORDS,\r\n        payload: {\r\n            'cords': data.cords\r\n        }\r\n    }\r\n}\r\n\r\nexport const setLocalStream = (stream) => {\r\n    return {\r\n        type: SET_LOCAL_STREAM,\r\n        payload: {\r\n            'stream': stream\r\n        }\r\n    }\r\n}\r\n\r\nexport const setRemoteStream = (stream, id) => {\r\n    return {\r\n        type: SET_REMOTE_STREAM,\r\n        payload: {\r\n            'stream': stream,\r\n            'id': id\r\n        }\r\n    }\r\n}","import eventHandler from \"../../utilities/eventHandler\"\r\n\r\nconst { WS_CONNECT, WS_DISCONNECT, WS_SEND_MESSAGE } = require(\"../../utilities/constants\")\r\nconst { wsConnect, wsDisconnect } = require(\"../actions/socketActions\")\r\n\r\n\r\nconst socketMiddleware = () => {\r\n\r\n    // scope ?\r\n    let socket = null\r\n    let host = ''\r\n\r\n\r\n    // the below three returns the callbacks\r\n\r\n    const onMessage = (store) => (event) => {\r\n        //console.log(\"on message\")\r\n        eventHandler(event, store.dispatch, store.getState())\r\n\r\n    }\r\n\r\n    const onOpen = (store) => (event) => {\r\n        console.log(\"web socket connection opened\")\r\n    }\r\n\r\n    const onClose = (store) => (event) => {\r\n        console.log(\"web socket connection closed\")\r\n    }\r\n\r\n\r\n\r\n\r\n    // middle ware\r\n    return store => next => action => {\r\n\r\n        switch (action.type) {\r\n\r\n            case WS_CONNECT:\r\n\r\n                console.log('middle ware', WS_CONNECT)\r\n                if (socket != null) {\r\n                    socket.close()\r\n                    host = ''\r\n                }\r\n                socket = new WebSocket(action.host)\r\n\r\n                // register handlers\r\n                socket.onmessage = onMessage(store)\r\n                socket.onclose = onClose(store)\r\n                socket.onopen = onOpen(store)\r\n                break;\r\n\r\n            case WS_DISCONNECT:\r\n\r\n                console.log('reducer', WS_DISCONNECT)\r\n                if (socket != null) {\r\n                    socket.close()\r\n                }\r\n                socket = null\r\n                host = ''\r\n                break;\r\n            case WS_SEND_MESSAGE:\r\n\r\n                console.log(\"sending the message\", action.payload)\r\n                socket.send(JSON.stringify(action.payload))\r\n                break;\r\n            default:\r\n                console.log(\"default action\", action.type, \" not found\")\r\n        }\r\n\r\n\r\n        return next(action)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default socketMiddleware","import { ADD_PLAYER, SET_REMOTE_CORDS, REMOVE_PLAYER, SET_LOCAL_STREAM, SET_REMOTE_STREAM, UPDATE_PLAYER_LIST } from \"../../utilities/constants\"\r\n\r\n\r\n\r\n\r\nconst intialState = {\r\n    players: [],\r\n    localStream: null,\r\n    remoteCords: [0, 0, 0, 0],\r\n    receivedDrawEvent: false\r\n}\r\n\r\nexport default function gameReducer(state = intialState, action) {\r\n\r\n    //console.log(\"In game reducer\", action)\r\n\r\n    switch (action.type) {\r\n        case UPDATE_PLAYER_LIST:\r\n            return {\r\n                ...state,\r\n                players: action.payload.playerlist\r\n            }\r\n        case REMOVE_PLAYER:\r\n            return {\r\n                ...state,\r\n                players: state.players.filter(player => player.id != action.payload.id)\r\n            }\r\n        case SET_REMOTE_CORDS:\r\n            return {\r\n                ...state,\r\n                remoteCords: action.payload.cords,\r\n                receivedDrawEvent: !state.receivedDrawEvent\r\n            }\r\n        case SET_LOCAL_STREAM:\r\n            return {\r\n                ...state,\r\n                localStream: action.payload.stream\r\n            }\r\n        case SET_REMOTE_STREAM:\r\n            var modifiedPlayers = JSON.parse(JSON.stringify(state.players))\r\n            console.log('setremotestream game reducer')\r\n            console.log(modifiedPlayers)\r\n            modifiedPlayers.forEach((player) => {\r\n                if (player.id == action.payload.id) {\r\n                    player.remoteStream = action.payload.stream\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                players: modifiedPlayers\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport reduxThunk from 'redux-thunk'\r\nimport socketMiddleware from \"./middleware/middleware\"\r\nimport gameReducer from \"./reducers/gameReducers\"\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    game: gameReducer\r\n})\r\n\r\n\r\nconst middleware = [\r\n    reduxThunk,\r\n    socketMiddleware()\r\n]\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n\r\n)\r\n\r\nconsole.log(\"in store\", store.getState())\r\n\r\nexport default store","import React from 'react'\r\nimport { useState } from 'react'\r\nimport \"./Player.css\"\r\n\r\nfunction Player(props) {\r\n\r\n\r\n    const [mute, setmute] = useState(false)\r\n\r\n\r\n\r\n    const inverse = () => {\r\n        setmute(!mute)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div>{props.name}</div>\r\n            <div>{props.points}</div>\r\n\r\n            {mute ?\r\n                <span className=\"material-icons\" onClick={inverse}>volume_off</span> :\r\n                <span className=\"material-icons\" onClick={inverse}>volume_up</span>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Player from './Player'\r\nimport \"./LeaderBoard.css\"\r\n\r\nfunction LeaderBoard() {\r\n\r\n    const dispatch = useDispatch()\r\n    const players = useSelector(state => state.game.players)\r\n\r\n\r\n    const listItems = players.map((player) => <Player key={player.id} name={player.name} points={player.points} />);\r\n\r\n\r\n    return (\r\n        <div className=\"leader-board-container\">\r\n            {listItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeaderBoard\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { wsSendMessage } from \"../Redux/actions/socketActions\";\r\nimport events from '../utilities/constants'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { remoteCords } from \"../Redux/actions/gameActions\";\r\n\r\n\r\n\r\nlet x1, y1, x2, y2;\r\n\r\n\r\nconst Canvas = () => {\r\n\r\n    const [isDrawing, setIsDrawing] = useState(false);\r\n    const canvasRef = useRef(null);\r\n    const contextRef = useRef(null);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            gameId: state.user.gameId,\r\n            remoteCords: state.game.remoteCords,\r\n            receivedDrawEvent: state.game.receivedDrawEvent\r\n        }\r\n    })\r\n\r\n    console.log(\"remote\", state.remoteCords)\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        canvas.width = parseInt(getComputedStyle(document.querySelector('#canvasElement')).getPropertyValue('width'))\r\n        canvas.height = window.innerHeight;\r\n        canvas.style.width = `100%`;\r\n        canvas.style.height = `100%`;\r\n        const context = canvas.getContext(\"2d\");\r\n        //context.scale(2, 2);\r\n        context.lineCap = \"round\";\r\n        context.strokeStyle = \"black\";\r\n        context.lineWidth = 2;\r\n        contextRef.current = context;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"remote canvas\", state.remoteCords)\r\n        const { oldx, oldy, newx, newy } = state.remoteCords;\r\n        contextRef.current.moveTo(oldx, oldy);\r\n        contextRef.current.lineTo(newx, newy);\r\n        contextRef.current.stroke();\r\n\r\n\r\n    }, [state.receivedDrawEvent])\r\n\r\n\r\n\r\n    //https://stackoverflow.com/questions/43955925/html5-responsive-canvas-mouse-position-and-resize\r\n    const getMousePosition = (e) => {\r\n        const canvas = canvasRef.current;\r\n        var mouseX = e.offsetX * canvas.width / canvas.clientWidth | 0;\r\n        var mouseY = e.offsetY * canvas.height / canvas.clientHeight | 0;\r\n        return { x: mouseX, y: mouseY };\r\n    }\r\n\r\n    const startDrawing = ({ nativeEvent }) => {\r\n        contextRef.current.beginPath();\r\n\r\n\r\n\r\n        x1 = getMousePosition(nativeEvent).x\r\n        y1 = getMousePosition(nativeEvent).y\r\n\r\n        contextRef.current.moveTo(x1, y1);\r\n        console.log('moved to ' + x1 + \", \" + y1)\r\n        setIsDrawing(true);\r\n    };\r\n\r\n    const finishDrawing = () => {\r\n        contextRef.current.closePath();\r\n        setIsDrawing(false);\r\n    };\r\n\r\n    const draw = ({ nativeEvent }) => {\r\n        if (!isDrawing) {\r\n            return;\r\n        }\r\n\r\n        x2 = getMousePosition(nativeEvent).x\r\n        y2 = getMousePosition(nativeEvent).y\r\n\r\n        console.log(x1, y1, x2, y2)\r\n\r\n        const payload = {\r\n            'method': events.SET_REMOTE_CORDS,\r\n            'gameId': state.gameId,\r\n            'clientid': state.clientId,\r\n            cords: [x1, y1, x2, y2]\r\n        }\r\n\r\n        dispatch(wsSendMessage(payload))\r\n\r\n        contextRef.current.lineTo(x2, y2);\r\n        //console.log('line to ' + offsetX + \", \" + offsetY)\r\n        contextRef.current.stroke();\r\n\r\n\r\n\r\n\r\n\r\n        x1 = x2;\r\n        y1 = y2;\r\n\r\n\r\n\r\n        // let payload = {\r\n        //     'method':events.DRAW,\r\n        //     'clientId': props.clientId,\r\n        //     'gameId':props.gameId,\r\n        //     'canvasEvent':[x1,y1,x2,y2]\r\n        // }\r\n\r\n        // console.log(canvasRef.current.toDataURL(\"image/png\"))\r\n\r\n        // let ws = props.ws\r\n        // ws.send(JSON.stringify(payload))\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    let canvasStyle = {\r\n        width: `100%`\r\n    }\r\n    return (\r\n        <canvas\r\n            onMouseDown={startDrawing}\r\n            onMouseUp={finishDrawing}\r\n            onMouseMove={draw}\r\n            ref={canvasRef}\r\n            id=\"canvasElement\"\r\n            style={canvasStyle}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Canvas\r\n","import React, { Component, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { wsSendMessage } from '../../Redux/actions/socketActions'\r\nimport events from '../../utilities/constants'\r\nimport './Chat.css'\r\n\r\n\r\nconst Chat = () => {\r\n    let [mic, flipMic] = useState(false);\r\n\r\n    let dispatch = useDispatch()\r\n    let state = useSelector(state => {\r\n        return {\r\n            clientId: state.user.clientId,\r\n            name: state.user.name,\r\n            gameId: state.user.gameId,\r\n            chatEvent: state.user.chatEvent\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('chatEvent:')\r\n        console.log(state.chatEvent)\r\n        addChatMessage(state.chatEvent)\r\n    }, [state.chatEvent])\r\n\r\n    const sendMessage = (message) => {\r\n        if (message === null) {\r\n            message = document.getElementsByClassName('textContainer')[0].value\r\n        }\r\n\r\n        message = message.trim()\r\n        if (message === '') return\r\n        console.log('id:' + state.clientId + \" name:\" + state.name + 'gameId:' + state.gameId)\r\n        message = {\r\n            'method': events.GUESS,\r\n            'guessWord': message,\r\n            'clientId': state.clientId,\r\n            'name': state.name,\r\n            'gameId': state.gameId\r\n        }\r\n\r\n        dispatch(wsSendMessage(message))\r\n        // addChatMessage(message)\r\n        // document.getElementsByClassName('textContainer')[0].value = ''\r\n    }\r\n\r\n    const addChatMessage = (message) => {\r\n        if (!message) {\r\n            console.log(\"Invalid message\")\r\n            return\r\n        }\r\n        console.log('addChatMessage message:')\r\n        console.log(message)\r\n        var messageDiv = createMessage(message)\r\n        document.getElementById(\"chatMessages\").innerHTML += messageDiv\r\n        let containerElement = document.getElementById('outerContainer')\r\n        containerElement.scrollTop = containerElement.scrollHeight\r\n    }\r\n\r\n    const createMessage = (message) => {\r\n        var isMine = message.clientId === state.clientId\r\n        var liClassName = isMine ? \"mine\" : \"their\"\r\n        let nameElement = '';\r\n        if (!isMine) {\r\n            nameElement = `<span class='senderName'>${(message.name)}</span>`;\r\n        }\r\n\r\n        return (`<li class='message ${liClassName}'>\r\n        <div class='messageContainer'>\r\n            ${nameElement}\r\n            <span class='messageBody'>\r\n                ${message.guessWord}\r\n            </span>\r\n        </div>\r\n    </li>`)\r\n    }\r\n\r\n    const handleMicFlip = () => {\r\n        flipMic(!mic)\r\n    }\r\n\r\n    let micElement = mic ?\r\n        <span className=\"material-icons micButton\"\r\n            onClick={() => handleMicFlip()}>mic</span> :\r\n        <span className=\"material-icons micButton\"\r\n            onClick={() => handleMicFlip()}>mic_off</span>\r\n\r\n    return (\r\n        <div className=\"outerContainer\" id=\"outerContainer\">\r\n            <div className=\"chatContainer\">\r\n                <div id=\"chatMessages\" className=\"chatMessages\">\r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <div className=\"footerContainer\">\r\n                    <input className=\"textContainer\"\r\n                        id=\"textInputContainer\"\r\n                        placeholder={'Type a message...'}\r\n                        onKeyPress={(event) => event.key === 'Enter' ? sendMessage(event.target.value) : null}\r\n                    />\r\n                    <i className=\"material-icons sendButton\"\r\n                        onClick={() => sendMessage(null)}>send</i>\r\n                    {micElement}\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\nexport default Chat","import React, { Component } from 'react';\r\nimport './modal.css'\r\nconst Modal = ({ handleClose, show, children }) => {\r\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <section className='modal-main'>\r\n                {children}\r\n                <input type=\"text\" defaultValue=\"name\" id=\"joinname\" />\r\n                <button\r\n                    onClick={handleClose}\r\n                >\r\n                    Close\r\n                </button>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\nexport default Modal","import React from 'react'\r\nimport LeaderBoard from '../../components/LeaderBoard'\r\nimport Canvas from '../../components/canvas'\r\nimport Chat from '../../components/Chat/Chat'\r\nimport Modal from '../../components/modal'\r\nimport './gamePage.css'\r\n\r\nfunction GamePage() {\r\n\r\n    return (\r\n        <div className='gamePageContainer'>\r\n            <div className=\"col-sm-2 leaderBoard\" >\r\n                <LeaderBoard />\r\n            </div>\r\n            <div className=\"col-sm-8 canvas\">\r\n                <Canvas />\r\n            </div>\r\n            <div className=\"col-sm-2 chat\" >\r\n                <Chat />\r\n            </div>\r\n            <div id=\"audioEvents\">\r\n\r\n            </div>\r\n            <Modal show={false} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GamePage\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { wsConnect, wsSendMessage } from '../../Redux/actions/socketActions';\r\nimport { createGame, storeName, storeGameId } from '../../Redux/actions/userActions';\r\nimport events from '../../utilities/constants'\r\nimport axios from 'axios';\r\n\r\nconst PORT = process.env.port || 9091\r\nconst webSocketURL = 'ws://localhost:' + PORT + '/'\r\nconst serverURL = \"http://localhost:\" + PORT + \"/\"\r\nfunction LandingPage() {\r\n\r\n\r\n    //console.log(\"render landing\")\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    let state = useSelector(state => {\r\n\r\n        return {\r\n            clientId: state.user.clientId,\r\n            gameId: state.user.gameId,\r\n            name: state.user.name,\r\n            isClientCreated: state.user.isClientCreated,\r\n            isGameCreated: state.user.isGameCreated\r\n        }\r\n    })\r\n\r\n\r\n    const createButtonHandler = () => {\r\n        // first send a get request to create game\r\n        // store the gameid and client id redux thunk\r\n        dispatch(storeName(document.getElementById('name').value))\r\n        dispatch(createGame(\"helloroom\"))\r\n            .then(path => {\r\n                if (path != '') {\r\n                    // if we got a valid room id\r\n\r\n                    dispatch(wsConnect(webSocketURL))\r\n                    console.log(path)\r\n                    history.push(path)\r\n                }\r\n            })\r\n    }\r\n\r\n    const joinButtonHandler = async () => {\r\n\r\n        dispatch(storeName(document.getElementById('name').value))\r\n        // api to check if the gameid exists\r\n        let gameId = document.getElementById('gameId').value\r\n        let headers = {\r\n            \"gameId\": gameId\r\n        }\r\n        let resp = await axios.get(serverURL + \"isValidGame\", { headers })\r\n        console.log(resp.data)\r\n        if (!resp || !resp.data || !resp.data['valid']) {\r\n            alert(\"Game id is Invalid. Please check again\")\r\n            return\r\n        }\r\n\r\n        dispatch(storeGameId(gameId))\r\n        dispatch(wsConnect(webSocketURL))\r\n        history.push('game/' + gameId)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"LandingPage\" >\r\n            <h1>{state.clientId}</h1>\r\n            <input type=\"text\" id=\"name\" defaultValue=\"abc\" /><br></br>\r\n            <input type=\"button\" value=\"Create\" onClick={createButtonHandler} /><br></br>\r\n            <input type=\"text\" id=\"gameId\" /><br></br>\r\n            <input type=\"button\" value=\"Join\" onClick={joinButtonHandler} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport GamePage from './Pages/GamePage/GamePage'\r\nimport LandingPage from './Pages/LandingPage/LandingPage'\r\n\r\n\r\n\r\nfunction Playground(props) {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <LandingPage props={props} />\r\n            </Route>\r\n            <Route path=\"/game/:code\">\r\n                <GamePage />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Playground\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport store from './Redux/store';\r\nimport Playground from './Playground';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div className=\"playGroundContainer\">\r\n        <Playground props={store} />\r\n      </div>\r\n    </Router>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}